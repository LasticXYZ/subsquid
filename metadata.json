{
  "magicNumber": 1635018093,
  "metadata": {
    "v14": {
      "lookup": {
        "types": [
          {
            "id": 0,
            "type": {
              "path": [
                "sp_core",
                "crypto",
                "AccountId32"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 1,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 32,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 2,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "primitive": "U8"
              },
              "docs": []
            }
          },
          {
            "id": 3,
            "type": {
              "path": [
                "frame_system",
                "AccountInfo"
              ],
              "params": [
                {
                  "name": "Nonce",
                  "type": 4
                },
                {
                  "name": "AccountData",
                  "type": 5
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "nonce",
                      "type": 4,
                      "typeName": "Nonce",
                      "docs": []
                    },
                    {
                      "name": "consumers",
                      "type": 4,
                      "typeName": "RefCount",
                      "docs": []
                    },
                    {
                      "name": "providers",
                      "type": 4,
                      "typeName": "RefCount",
                      "docs": []
                    },
                    {
                      "name": "sufficients",
                      "type": 4,
                      "typeName": "RefCount",
                      "docs": []
                    },
                    {
                      "name": "data",
                      "type": 5,
                      "typeName": "AccountData",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 4,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "primitive": "U32"
              },
              "docs": []
            }
          },
          {
            "id": 5,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "AccountData"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "free",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "reserved",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "frozen",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "flags",
                      "type": 7,
                      "typeName": "ExtraFlags",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 6,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "primitive": "U128"
              },
              "docs": []
            }
          },
          {
            "id": 7,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "ExtraFlags"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 6,
                      "typeName": "u128",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 8,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 9
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 9,
                      "typeName": "T",
                      "docs": []
                    },
                    {
                      "name": "operational",
                      "type": 9,
                      "typeName": "T",
                      "docs": []
                    },
                    {
                      "name": "mandatory",
                      "type": 9,
                      "typeName": "T",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 9,
            "type": {
              "path": [
                "sp_weights",
                "weight_v2",
                "Weight"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ref_time",
                      "type": 10,
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "proof_size",
                      "type": 10,
                      "typeName": "u64",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 10,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "compact": {
                  "type": 11
                }
              },
              "docs": []
            }
          },
          {
            "id": 11,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "primitive": "U64"
              },
              "docs": []
            }
          },
          {
            "id": 12,
            "type": {
              "path": [
                "primitive_types",
                "H256"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 13,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 14,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "digest",
                "Digest"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "logs",
                      "type": 15,
                      "typeName": "Vec<DigestItem>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 15,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 16
                }
              },
              "docs": []
            }
          },
          {
            "id": 16,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "digest",
                "DigestItem"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PreRuntime",
                      "fields": [
                        {
                          "name": null,
                          "type": 17,
                          "typeName": "ConsensusEngineId",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "Consensus",
                      "fields": [
                        {
                          "name": null,
                          "type": 17,
                          "typeName": "ConsensusEngineId",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Seal",
                      "fields": [
                        {
                          "name": null,
                          "type": 17,
                          "typeName": "ConsensusEngineId",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Other",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "RuntimeEnvironmentUpdated",
                      "fields": [],
                      "index": 8,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 17,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 4,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 18,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 19
                }
              },
              "docs": []
            }
          },
          {
            "id": 19,
            "type": {
              "path": [
                "frame_system",
                "EventRecord"
              ],
              "params": [
                {
                  "name": "E",
                  "type": 20
                },
                {
                  "name": "T",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "phase",
                      "type": 465,
                      "typeName": "Phase",
                      "docs": []
                    },
                    {
                      "name": "event",
                      "type": 20,
                      "typeName": "E",
                      "docs": []
                    },
                    {
                      "name": "topics",
                      "type": 316,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 20,
            "type": {
              "path": [
                "kitchensink_runtime",
                "RuntimeEvent"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "name": null,
                          "type": 21,
                          "typeName": "frame_system::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Utility",
                      "fields": [
                        {
                          "name": null,
                          "type": 30,
                          "typeName": "pallet_utility::Event",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Indices",
                      "fields": [
                        {
                          "name": null,
                          "type": 33,
                          "typeName": "pallet_indices::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "name": null,
                          "type": 34,
                          "typeName": "pallet_balances::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "TransactionPayment",
                      "fields": [
                        {
                          "name": null,
                          "type": 36,
                          "typeName": "pallet_transaction_payment::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "AssetTxPayment",
                      "fields": [
                        {
                          "name": null,
                          "type": 37,
                          "typeName": "pallet_asset_tx_payment::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "AssetConversionTxPayment",
                      "fields": [
                        {
                          "name": null,
                          "type": 39,
                          "typeName": "pallet_asset_conversion_tx_payment::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": []
                    },
                    {
                      "name": "ElectionProviderMultiPhase",
                      "fields": [
                        {
                          "name": null,
                          "type": 40,
                          "typeName": "pallet_election_provider_multi_phase::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": []
                    },
                    {
                      "name": "Staking",
                      "fields": [
                        {
                          "name": null,
                          "type": 47,
                          "typeName": "pallet_staking::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": []
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "name": null,
                          "type": 53,
                          "typeName": "pallet_session::Event",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": []
                    },
                    {
                      "name": "Democracy",
                      "fields": [
                        {
                          "name": null,
                          "type": 54,
                          "typeName": "pallet_democracy::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": []
                    },
                    {
                      "name": "Council",
                      "fields": [
                        {
                          "name": null,
                          "type": 59,
                          "typeName": "pallet_collective::Event<Runtime, pallet_collective::Instance1>",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": []
                    },
                    {
                      "name": "TechnicalCommittee",
                      "fields": [
                        {
                          "name": null,
                          "type": 60,
                          "typeName": "pallet_collective::Event<Runtime, pallet_collective::Instance2>",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": []
                    },
                    {
                      "name": "Elections",
                      "fields": [
                        {
                          "name": null,
                          "type": 61,
                          "typeName": "pallet_elections_phragmen::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": []
                    },
                    {
                      "name": "TechnicalMembership",
                      "fields": [
                        {
                          "name": null,
                          "type": 64,
                          "typeName": "pallet_membership::Event<Runtime, pallet_membership::Instance1>",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": []
                    },
                    {
                      "name": "Grandpa",
                      "fields": [
                        {
                          "name": null,
                          "type": 65,
                          "typeName": "pallet_grandpa::Event",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": []
                    },
                    {
                      "name": "Treasury",
                      "fields": [
                        {
                          "name": null,
                          "type": 70,
                          "typeName": "pallet_treasury::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": []
                    },
                    {
                      "name": "AssetRate",
                      "fields": [
                        {
                          "name": null,
                          "type": 71,
                          "typeName": "pallet_asset_rate::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": []
                    },
                    {
                      "name": "Contracts",
                      "fields": [
                        {
                          "name": null,
                          "type": 73,
                          "typeName": "pallet_contracts::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": []
                    },
                    {
                      "name": "Sudo",
                      "fields": [
                        {
                          "name": null,
                          "type": 76,
                          "typeName": "pallet_sudo::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": []
                    },
                    {
                      "name": "ImOnline",
                      "fields": [
                        {
                          "name": null,
                          "type": 77,
                          "typeName": "pallet_im_online::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": []
                    },
                    {
                      "name": "Offences",
                      "fields": [
                        {
                          "name": null,
                          "type": 86,
                          "typeName": "pallet_offences::Event",
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": []
                    },
                    {
                      "name": "Identity",
                      "fields": [
                        {
                          "name": null,
                          "type": 88,
                          "typeName": "pallet_identity::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 28,
                      "docs": []
                    },
                    {
                      "name": "Society",
                      "fields": [
                        {
                          "name": null,
                          "type": 89,
                          "typeName": "pallet_society::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 29,
                      "docs": []
                    },
                    {
                      "name": "Recovery",
                      "fields": [
                        {
                          "name": null,
                          "type": 92,
                          "typeName": "pallet_recovery::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 30,
                      "docs": []
                    },
                    {
                      "name": "Vesting",
                      "fields": [
                        {
                          "name": null,
                          "type": 93,
                          "typeName": "pallet_vesting::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 31,
                      "docs": []
                    },
                    {
                      "name": "Scheduler",
                      "fields": [
                        {
                          "name": null,
                          "type": 94,
                          "typeName": "pallet_scheduler::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 32,
                      "docs": []
                    },
                    {
                      "name": "Glutton",
                      "fields": [
                        {
                          "name": null,
                          "type": 97,
                          "typeName": "pallet_glutton::Event",
                          "docs": []
                        }
                      ],
                      "index": 33,
                      "docs": []
                    },
                    {
                      "name": "Preimage",
                      "fields": [
                        {
                          "name": null,
                          "type": 99,
                          "typeName": "pallet_preimage::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 34,
                      "docs": []
                    },
                    {
                      "name": "Proxy",
                      "fields": [
                        {
                          "name": null,
                          "type": 100,
                          "typeName": "pallet_proxy::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 35,
                      "docs": []
                    },
                    {
                      "name": "Multisig",
                      "fields": [
                        {
                          "name": null,
                          "type": 103,
                          "typeName": "pallet_multisig::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 36,
                      "docs": []
                    },
                    {
                      "name": "Bounties",
                      "fields": [
                        {
                          "name": null,
                          "type": 105,
                          "typeName": "pallet_bounties::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 37,
                      "docs": []
                    },
                    {
                      "name": "Tips",
                      "fields": [
                        {
                          "name": null,
                          "type": 106,
                          "typeName": "pallet_tips::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 38,
                      "docs": []
                    },
                    {
                      "name": "Assets",
                      "fields": [
                        {
                          "name": null,
                          "type": 107,
                          "typeName": "pallet_assets::Event<Runtime, pallet_assets::Instance1>",
                          "docs": []
                        }
                      ],
                      "index": 39,
                      "docs": []
                    },
                    {
                      "name": "PoolAssets",
                      "fields": [
                        {
                          "name": null,
                          "type": 108,
                          "typeName": "pallet_assets::Event<Runtime, pallet_assets::Instance2>",
                          "docs": []
                        }
                      ],
                      "index": 40,
                      "docs": []
                    },
                    {
                      "name": "Lottery",
                      "fields": [
                        {
                          "name": null,
                          "type": 109,
                          "typeName": "pallet_lottery::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 42,
                      "docs": []
                    },
                    {
                      "name": "Nis",
                      "fields": [
                        {
                          "name": null,
                          "type": 111,
                          "typeName": "pallet_nis::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 43,
                      "docs": []
                    },
                    {
                      "name": "Uniques",
                      "fields": [
                        {
                          "name": null,
                          "type": 113,
                          "typeName": "pallet_uniques::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 44,
                      "docs": []
                    },
                    {
                      "name": "Nfts",
                      "fields": [
                        {
                          "name": null,
                          "type": 118,
                          "typeName": "pallet_nfts::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 45,
                      "docs": []
                    },
                    {
                      "name": "NftFractionalization",
                      "fields": [
                        {
                          "name": null,
                          "type": 125,
                          "typeName": "pallet_nft_fractionalization::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 46,
                      "docs": []
                    },
                    {
                      "name": "Salary",
                      "fields": [
                        {
                          "name": null,
                          "type": 126,
                          "typeName": "pallet_salary::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 47,
                      "docs": []
                    },
                    {
                      "name": "CoreFellowship",
                      "fields": [
                        {
                          "name": null,
                          "type": 127,
                          "typeName": "pallet_core_fellowship::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 48,
                      "docs": []
                    },
                    {
                      "name": "TransactionStorage",
                      "fields": [
                        {
                          "name": null,
                          "type": 134,
                          "typeName": "pallet_transaction_storage::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 49,
                      "docs": []
                    },
                    {
                      "name": "VoterList",
                      "fields": [
                        {
                          "name": null,
                          "type": 135,
                          "typeName": "pallet_bags_list::Event<Runtime, pallet_bags_list::Instance1>",
                          "docs": []
                        }
                      ],
                      "index": 50,
                      "docs": []
                    },
                    {
                      "name": "StateTrieMigration",
                      "fields": [
                        {
                          "name": null,
                          "type": 136,
                          "typeName": "pallet_state_trie_migration::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 51,
                      "docs": []
                    },
                    {
                      "name": "ChildBounties",
                      "fields": [
                        {
                          "name": null,
                          "type": 139,
                          "typeName": "pallet_child_bounties::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 52,
                      "docs": []
                    },
                    {
                      "name": "Referenda",
                      "fields": [
                        {
                          "name": null,
                          "type": 140,
                          "typeName": "pallet_referenda::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 53,
                      "docs": []
                    },
                    {
                      "name": "Remark",
                      "fields": [
                        {
                          "name": null,
                          "type": 427,
                          "typeName": "pallet_remark::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 54,
                      "docs": []
                    },
                    {
                      "name": "RootTesting",
                      "fields": [
                        {
                          "name": null,
                          "type": 428,
                          "typeName": "pallet_root_testing::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 55,
                      "docs": []
                    },
                    {
                      "name": "ConvictionVoting",
                      "fields": [
                        {
                          "name": null,
                          "type": 429,
                          "typeName": "pallet_conviction_voting::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 56,
                      "docs": []
                    },
                    {
                      "name": "Whitelist",
                      "fields": [
                        {
                          "name": null,
                          "type": 430,
                          "typeName": "pallet_whitelist::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 57,
                      "docs": []
                    },
                    {
                      "name": "AllianceMotion",
                      "fields": [
                        {
                          "name": null,
                          "type": 435,
                          "typeName": "pallet_collective::Event<Runtime, pallet_collective::Instance3>",
                          "docs": []
                        }
                      ],
                      "index": 58,
                      "docs": []
                    },
                    {
                      "name": "Alliance",
                      "fields": [
                        {
                          "name": null,
                          "type": 436,
                          "typeName": "pallet_alliance::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 59,
                      "docs": []
                    },
                    {
                      "name": "NominationPools",
                      "fields": [
                        {
                          "name": null,
                          "type": 437,
                          "typeName": "pallet_nomination_pools::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 60,
                      "docs": []
                    },
                    {
                      "name": "RankedPolls",
                      "fields": [
                        {
                          "name": null,
                          "type": 438,
                          "typeName": "pallet_referenda::Event<Runtime, pallet_referenda::Instance2>",
                          "docs": []
                        }
                      ],
                      "index": 61,
                      "docs": []
                    },
                    {
                      "name": "RankedCollective",
                      "fields": [
                        {
                          "name": null,
                          "type": 440,
                          "typeName": "pallet_ranked_collective::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 62,
                      "docs": []
                    },
                    {
                      "name": "AssetConversion",
                      "fields": [
                        {
                          "name": null,
                          "type": 442,
                          "typeName": "pallet_asset_conversion::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 63,
                      "docs": []
                    },
                    {
                      "name": "FastUnstake",
                      "fields": [
                        {
                          "name": null,
                          "type": 445,
                          "typeName": "pallet_fast_unstake::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 64,
                      "docs": []
                    },
                    {
                      "name": "MessageQueue",
                      "fields": [
                        {
                          "name": null,
                          "type": 446,
                          "typeName": "pallet_message_queue::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 65,
                      "docs": []
                    },
                    {
                      "name": "Pov",
                      "fields": [
                        {
                          "name": null,
                          "type": 448,
                          "typeName": "frame_benchmarking_pallet_pov::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 66,
                      "docs": []
                    },
                    {
                      "name": "TxPause",
                      "fields": [
                        {
                          "name": null,
                          "type": 449,
                          "typeName": "pallet_tx_pause::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 67,
                      "docs": []
                    },
                    {
                      "name": "SafeMode",
                      "fields": [
                        {
                          "name": null,
                          "type": 450,
                          "typeName": "pallet_safe_mode::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 68,
                      "docs": []
                    },
                    {
                      "name": "Statement",
                      "fields": [
                        {
                          "name": null,
                          "type": 452,
                          "typeName": "pallet_statement::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 69,
                      "docs": []
                    },
                    {
                      "name": "Broker",
                      "fields": [
                        {
                          "name": null,
                          "type": 459,
                          "typeName": "pallet_broker::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 70,
                      "docs": []
                    },
                    {
                      "name": "SkipFeelessPayment",
                      "fields": [
                        {
                          "name": null,
                          "type": 464,
                          "typeName": "pallet_skip_feeless_payment::Event<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 72,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 21,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ExtrinsicSuccess",
                      "fields": [
                        {
                          "name": "dispatch_info",
                          "type": 22,
                          "typeName": "DispatchInfo",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An extrinsic completed successfully."
                      ]
                    },
                    {
                      "name": "ExtrinsicFailed",
                      "fields": [
                        {
                          "name": "dispatch_error",
                          "type": 25,
                          "typeName": "DispatchError",
                          "docs": []
                        },
                        {
                          "name": "dispatch_info",
                          "type": 22,
                          "typeName": "DispatchInfo",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An extrinsic failed."
                      ]
                    },
                    {
                      "name": "CodeUpdated",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "`:code` was updated."
                      ]
                    },
                    {
                      "name": "NewAccount",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A new account was created."
                      ]
                    },
                    {
                      "name": "KilledAccount",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An account was reaped."
                      ]
                    },
                    {
                      "name": "Remarked",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "On on-chain remark happened."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Event for the System pallet."
              ]
            }
          },
          {
            "id": 22,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "DispatchInfo"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "weight",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "class",
                      "type": 23,
                      "typeName": "DispatchClass",
                      "docs": []
                    },
                    {
                      "name": "pays_fee",
                      "type": 24,
                      "typeName": "Pays",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 23,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "DispatchClass"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Normal",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Operational",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Mandatory",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 24,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "Pays"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Yes",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "No",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 25,
            "type": {
              "path": [
                "sp_runtime",
                "DispatchError"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Other",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "CannotLookup",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "BadOrigin",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Module",
                      "fields": [
                        {
                          "name": null,
                          "type": 26,
                          "typeName": "ModuleError",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "ConsumerRemaining",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "NoProviders",
                      "fields": [],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "TooManyConsumers",
                      "fields": [],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "Token",
                      "fields": [
                        {
                          "name": null,
                          "type": 27,
                          "typeName": "TokenError",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "Arithmetic",
                      "fields": [
                        {
                          "name": null,
                          "type": 28,
                          "typeName": "ArithmeticError",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "Transactional",
                      "fields": [
                        {
                          "name": null,
                          "type": 29,
                          "typeName": "TransactionalError",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": []
                    },
                    {
                      "name": "Exhausted",
                      "fields": [],
                      "index": 10,
                      "docs": []
                    },
                    {
                      "name": "Corruption",
                      "fields": [],
                      "index": 11,
                      "docs": []
                    },
                    {
                      "name": "Unavailable",
                      "fields": [],
                      "index": 12,
                      "docs": []
                    },
                    {
                      "name": "RootNotAllowed",
                      "fields": [],
                      "index": 13,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 26,
            "type": {
              "path": [
                "sp_runtime",
                "ModuleError"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "index",
                      "type": 2,
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": "error",
                      "type": 17,
                      "typeName": "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 27,
            "type": {
              "path": [
                "sp_runtime",
                "TokenError"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FundsUnavailable",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "OnlyProvider",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "BelowMinimum",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "CannotCreate",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "UnknownAsset",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Frozen",
                      "fields": [],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Unsupported",
                      "fields": [],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "CannotCreateHold",
                      "fields": [],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "NotExpendable",
                      "fields": [],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "Blocked",
                      "fields": [],
                      "index": 9,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 28,
            "type": {
              "path": [
                "sp_arithmetic",
                "ArithmeticError"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Underflow",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Overflow",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "DivisionByZero",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 29,
            "type": {
              "path": [
                "sp_runtime",
                "TransactionalError"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "LimitReached",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "NoLayer",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 30,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Event"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BatchInterrupted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "error",
                          "type": 25,
                          "typeName": "DispatchError",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Batch of dispatches did not complete fully. Index of first failing dispatch given, as",
                        "well as the error."
                      ]
                    },
                    {
                      "name": "BatchCompleted",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Batch of dispatches completed fully with no error."
                      ]
                    },
                    {
                      "name": "BatchCompletedWithErrors",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Batch of dispatches completed but has errors."
                      ]
                    },
                    {
                      "name": "ItemCompleted",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "A single item within a Batch of dispatches has completed with no error."
                      ]
                    },
                    {
                      "name": "ItemFailed",
                      "fields": [
                        {
                          "name": "error",
                          "type": 25,
                          "typeName": "DispatchError",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A single item within a Batch of dispatches has completed with error."
                      ]
                    },
                    {
                      "name": "DispatchedAs",
                      "fields": [
                        {
                          "name": "result",
                          "type": 31,
                          "typeName": "DispatchResult",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A call was dispatched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 31,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 32
                },
                {
                  "name": "E",
                  "type": 25
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "name": null,
                          "type": 32,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "name": null,
                          "type": 25,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 32,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": []
              },
              "docs": []
            }
          },
          {
            "id": 33,
            "type": {
              "path": [
                "pallet_indices",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "IndexAssigned",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "T::AccountIndex",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A account index was assigned."
                      ]
                    },
                    {
                      "name": "IndexFreed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "T::AccountIndex",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A account index has been freed up (unassigned)."
                      ]
                    },
                    {
                      "name": "IndexFrozen",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "T::AccountIndex",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A account index has been frozen to its current account ID."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 34,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Endowed",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "free_balance",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An account was created with some free balance."
                      ]
                    },
                    {
                      "name": "DustLost",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An account was removed whose balance was non-zero but below ExistentialDeposit,",
                        "resulting in an outright loss."
                      ]
                    },
                    {
                      "name": "Transfer",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Transfer succeeded."
                      ]
                    },
                    {
                      "name": "BalanceSet",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "free",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A balance was set by root."
                      ]
                    },
                    {
                      "name": "Reserved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Some balance was reserved (moved from free to reserved)."
                      ]
                    },
                    {
                      "name": "Unreserved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Some balance was unreserved (moved from reserved to free)."
                      ]
                    },
                    {
                      "name": "ReserveRepatriated",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        },
                        {
                          "name": "destination_status",
                          "type": 35,
                          "typeName": "Status",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Some balance was moved from the reserve of the first account to the second account.",
                        "Final argument indicates the destination balance type."
                      ]
                    },
                    {
                      "name": "Deposit",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Some amount was deposited (e.g. for transaction fees)."
                      ]
                    },
                    {
                      "name": "Withdraw",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Some amount was withdrawn from the account (e.g. for transaction fees)."
                      ]
                    },
                    {
                      "name": "Slashed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Some amount was removed from the account (e.g. for misbehavior)."
                      ]
                    },
                    {
                      "name": "Minted",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Some amount was minted into an account."
                      ]
                    },
                    {
                      "name": "Burned",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Some amount was burned from an account."
                      ]
                    },
                    {
                      "name": "Suspended",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "Some amount was suspended from an account (it can be restored later)."
                      ]
                    },
                    {
                      "name": "Restored",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "Some amount was restored into an account."
                      ]
                    },
                    {
                      "name": "Upgraded",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "An account was upgraded."
                      ]
                    },
                    {
                      "name": "Issued",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Total issuance was increased by `amount`, creating a credit to be balanced."
                      ]
                    },
                    {
                      "name": "Rescinded",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Total issuance was decreased by `amount`, creating a debt to be balanced."
                      ]
                    },
                    {
                      "name": "Locked",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "Some balance was locked."
                      ]
                    },
                    {
                      "name": "Unlocked",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "Some balance was unlocked."
                      ]
                    },
                    {
                      "name": "Frozen",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "Some balance was frozen."
                      ]
                    },
                    {
                      "name": "Thawed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "Some balance was thawed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 35,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "tokens",
                "misc",
                "BalanceStatus"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Free",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Reserved",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 36,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TransactionFeePaid",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "actual_fee",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "tip",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                        "has been paid by `who`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 37,
            "type": {
              "path": [
                "pallet_asset_tx_payment",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AssetTxFeePaid",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "actual_fee",
                          "type": 6,
                          "typeName": "AssetBalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "tip",
                          "type": 6,
                          "typeName": "AssetBalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "asset_id",
                          "type": 38,
                          "typeName": "Option<ChargeAssetIdOf<T>>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                        "has been paid by `who` in an asset `asset_id`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 38,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 39,
            "type": {
              "path": [
                "pallet_asset_conversion_tx_payment",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AssetTxFeePaid",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "actual_fee",
                          "type": 6,
                          "typeName": "AssetBalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "tip",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "ChargeAssetIdOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                        "has been paid by `who` in an asset `asset_id`."
                      ]
                    },
                    {
                      "name": "AssetRefundFailed",
                      "fields": [
                        {
                          "name": "native_amount_kept",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A swap of the refund in native currency back to asset failed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 40,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "SolutionStored",
                      "fields": [
                        {
                          "name": "compute",
                          "type": 41,
                          "typeName": "ElectionCompute",
                          "docs": []
                        },
                        {
                          "name": "origin",
                          "type": 42,
                          "typeName": "Option<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "prev_ejected",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A solution was stored with the given compute.",
                        "",
                        "The `origin` indicates the origin of the solution. If `origin` is `Some(AccountId)`,",
                        "the stored solution was submited in the signed phase by a miner with the `AccountId`.",
                        "Otherwise, the solution was stored either during the unsigned phase or by",
                        "`T::ForceOrigin`. The `bool` is `true` when a previous solution was ejected to make",
                        "room for this one."
                      ]
                    },
                    {
                      "name": "ElectionFinalized",
                      "fields": [
                        {
                          "name": "compute",
                          "type": 41,
                          "typeName": "ElectionCompute",
                          "docs": []
                        },
                        {
                          "name": "score",
                          "type": 44,
                          "typeName": "ElectionScore",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The election has been finalized, with the given computation and score."
                      ]
                    },
                    {
                      "name": "ElectionFailed",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "An election failed.",
                        "",
                        "Not much can be said about which computes failed in the process."
                      ]
                    },
                    {
                      "name": "Rewarded",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "<T as frame_system::Config>::AccountId",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "An account has been rewarded for their signed submission being finalized."
                      ]
                    },
                    {
                      "name": "Slashed",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "<T as frame_system::Config>::AccountId",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An account has been slashed for submitting an invalid signed submission."
                      ]
                    },
                    {
                      "name": "PhaseTransitioned",
                      "fields": [
                        {
                          "name": "from",
                          "type": 45,
                          "typeName": "Phase<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "to",
                          "type": 45,
                          "typeName": "Phase<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "round",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "There was a phase transition in a given round."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 41,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "ElectionCompute"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "OnChain",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Signed",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Unsigned",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Fallback",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Emergency",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 42,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 43,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "primitive": "Bool"
              },
              "docs": []
            }
          },
          {
            "id": 44,
            "type": {
              "path": [
                "sp_npos_elections",
                "ElectionScore"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "minimal_stake",
                      "type": 6,
                      "typeName": "ExtendedBalance",
                      "docs": []
                    },
                    {
                      "name": "sum_stake",
                      "type": 6,
                      "typeName": "ExtendedBalance",
                      "docs": []
                    },
                    {
                      "name": "sum_stake_squared",
                      "type": 6,
                      "typeName": "ExtendedBalance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 45,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "Phase"
              ],
              "params": [
                {
                  "name": "Bn",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Off",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Signed",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Unsigned",
                      "fields": [
                        {
                          "name": null,
                          "type": 46,
                          "typeName": "(bool, Bn)",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Emergency",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 46,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  43,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 47,
            "type": {
              "path": [
                "pallet_staking",
                "pallet",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "EraPaid",
                      "fields": [
                        {
                          "name": "era_index",
                          "type": 4,
                          "typeName": "EraIndex",
                          "docs": []
                        },
                        {
                          "name": "validator_payout",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "remainder",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "The era payout has been set; the first balance is the validator-payout; the second is",
                        "the remainder from the maximum amount of reward."
                      ]
                    },
                    {
                      "name": "Rewarded",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 48,
                          "typeName": "RewardDestination<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The nominator has been rewarded by this amount to this destination."
                      ]
                    },
                    {
                      "name": "Slashed",
                      "fields": [
                        {
                          "name": "staker",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A staker (validator or nominator) has been slashed by the given amount."
                      ]
                    },
                    {
                      "name": "SlashReported",
                      "fields": [
                        {
                          "name": "validator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "fraction",
                          "type": 49,
                          "typeName": "Perbill",
                          "docs": []
                        },
                        {
                          "name": "slash_era",
                          "type": 4,
                          "typeName": "EraIndex",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A slash for the given validator, for the given percentage of their stake, at the given",
                        "era as been reported."
                      ]
                    },
                    {
                      "name": "OldSlashingReportDiscarded",
                      "fields": [
                        {
                          "name": "session_index",
                          "type": 4,
                          "typeName": "SessionIndex",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An old slashing report from a prior era was discarded because it could",
                        "not be processed."
                      ]
                    },
                    {
                      "name": "StakersElected",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "A new set of stakers was elected."
                      ]
                    },
                    {
                      "name": "Bonded",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "An account has bonded this amount. \\[stash, amount\\]",
                        "",
                        "NOTE: This event is only emitted when funds are bonded via a dispatchable. Notably,",
                        "it will not be emitted for staking rewards when they are added to stake."
                      ]
                    },
                    {
                      "name": "Unbonded",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "An account has unbonded this amount."
                      ]
                    },
                    {
                      "name": "Withdrawn",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "An account has called `withdraw_unbonded` and removed unbonding chunks worth `Balance`",
                        "from the unlocking queue."
                      ]
                    },
                    {
                      "name": "Kicked",
                      "fields": [
                        {
                          "name": "nominator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A nominator has been kicked from a validator."
                      ]
                    },
                    {
                      "name": "StakingElectionFailed",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The election failed. No new era is planned."
                      ]
                    },
                    {
                      "name": "Chilled",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "An account has stopped participating as either a validator or nominator."
                      ]
                    },
                    {
                      "name": "PayoutStarted",
                      "fields": [
                        {
                          "name": "era_index",
                          "type": 4,
                          "typeName": "EraIndex",
                          "docs": []
                        },
                        {
                          "name": "validator_stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "The stakers' rewards are getting paid."
                      ]
                    },
                    {
                      "name": "ValidatorPrefsSet",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "prefs",
                          "type": 50,
                          "typeName": "ValidatorPrefs",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "A validator has set their preferences."
                      ]
                    },
                    {
                      "name": "SnapshotVotersSizeExceeded",
                      "fields": [
                        {
                          "name": "size",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Voters size limit reached."
                      ]
                    },
                    {
                      "name": "SnapshotTargetsSizeExceeded",
                      "fields": [
                        {
                          "name": "size",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Targets size limit reached."
                      ]
                    },
                    {
                      "name": "ForceEra",
                      "fields": [
                        {
                          "name": "mode",
                          "type": 52,
                          "typeName": "Forcing",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "A new force era mode was set."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 48,
            "type": {
              "path": [
                "pallet_staking",
                "RewardDestination"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Staked",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Stash",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Controller",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Account",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "None",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 49,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Perbill"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 50,
            "type": {
              "path": [
                "pallet_staking",
                "ValidatorPrefs"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "commission",
                      "type": 51,
                      "typeName": "Perbill",
                      "docs": []
                    },
                    {
                      "name": "blocked",
                      "type": 43,
                      "typeName": "bool",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 51,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "compact": {
                  "type": 49
                }
              },
              "docs": []
            }
          },
          {
            "id": 52,
            "type": {
              "path": [
                "pallet_staking",
                "Forcing"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotForcing",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "ForceNew",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "ForceNone",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "ForceAlways",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 53,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Event"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewSession",
                      "fields": [
                        {
                          "name": "session_index",
                          "type": 4,
                          "typeName": "SessionIndex",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New session has happened. Note that the argument is the session index, not the",
                        "block number as the type might suggest."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 54,
            "type": {
              "path": [
                "pallet_democracy",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Proposed",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "PropIndex",
                          "docs": []
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A motion has been proposed by a public account."
                      ]
                    },
                    {
                      "name": "Tabled",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "PropIndex",
                          "docs": []
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A public proposal has been tabled for referendum vote."
                      ]
                    },
                    {
                      "name": "ExternalTabled",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "An external proposal has been tabled."
                      ]
                    },
                    {
                      "name": "Started",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        },
                        {
                          "name": "threshold",
                          "type": 55,
                          "typeName": "VoteThreshold",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A referendum has begun."
                      ]
                    },
                    {
                      "name": "Passed",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A proposal has been approved by referendum."
                      ]
                    },
                    {
                      "name": "NotPassed",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A proposal has been rejected by referendum."
                      ]
                    },
                    {
                      "name": "Cancelled",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A referendum has been cancelled."
                      ]
                    },
                    {
                      "name": "Delegated",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "An account has delegated their vote to another account."
                      ]
                    },
                    {
                      "name": "Undelegated",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "An account has cancelled a previous delegation operation."
                      ]
                    },
                    {
                      "name": "Vetoed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "until",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "An external proposal has been vetoed."
                      ]
                    },
                    {
                      "name": "Blacklisted",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "A proposal_hash has been blacklisted permanently."
                      ]
                    },
                    {
                      "name": "Voted",
                      "fields": [
                        {
                          "name": "voter",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "ref_index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        },
                        {
                          "name": "vote",
                          "type": 56,
                          "typeName": "AccountVote<BalanceOf<T>>",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "An account has voted in a referendum"
                      ]
                    },
                    {
                      "name": "Seconded",
                      "fields": [
                        {
                          "name": "seconder",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "prop_index",
                          "type": 4,
                          "typeName": "PropIndex",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "An account has secconded a proposal"
                      ]
                    },
                    {
                      "name": "ProposalCanceled",
                      "fields": [
                        {
                          "name": "prop_index",
                          "type": 4,
                          "typeName": "PropIndex",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "A proposal got canceled."
                      ]
                    },
                    {
                      "name": "MetadataSet",
                      "fields": [
                        {
                          "name": "owner",
                          "type": 58,
                          "typeName": "MetadataOwner",
                          "docs": [
                            "Metadata owner."
                          ]
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [
                            "Preimage hash."
                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Metadata for a proposal or a referendum has been set."
                      ]
                    },
                    {
                      "name": "MetadataCleared",
                      "fields": [
                        {
                          "name": "owner",
                          "type": 58,
                          "typeName": "MetadataOwner",
                          "docs": [
                            "Metadata owner."
                          ]
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [
                            "Preimage hash."
                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Metadata for a proposal or a referendum has been cleared."
                      ]
                    },
                    {
                      "name": "MetadataTransferred",
                      "fields": [
                        {
                          "name": "prev_owner",
                          "type": 58,
                          "typeName": "MetadataOwner",
                          "docs": [
                            "Previous metadata owner."
                          ]
                        },
                        {
                          "name": "owner",
                          "type": 58,
                          "typeName": "MetadataOwner",
                          "docs": [
                            "New metadata owner."
                          ]
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [
                            "Preimage hash."
                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Metadata has been transferred to new owner."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 55,
            "type": {
              "path": [
                "pallet_democracy",
                "vote_threshold",
                "VoteThreshold"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "SuperMajorityApprove",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "SuperMajorityAgainst",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "SimpleMajority",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 56,
            "type": {
              "path": [
                "pallet_democracy",
                "vote",
                "AccountVote"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Standard",
                      "fields": [
                        {
                          "name": "vote",
                          "type": 57,
                          "typeName": "Vote",
                          "docs": []
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Split",
                      "fields": [
                        {
                          "name": "aye",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        },
                        {
                          "name": "nay",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 57,
            "type": {
              "path": [
                "pallet_democracy",
                "vote",
                "Vote"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 2,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 58,
            "type": {
              "path": [
                "pallet_democracy",
                "types",
                "MetadataOwner"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "External",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Proposal",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "PropIndex",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Referendum",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 59,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Proposed",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex",
                          "docs": []
                        },
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "threshold",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A motion (given hash) has been proposed (by given account) with a threshold (given",
                        "`MemberCount`)."
                      ]
                    },
                    {
                      "name": "Voted",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "voted",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        },
                        {
                          "name": "yes",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        },
                        {
                          "name": "no",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A motion (given hash) has been voted on by given account, leaving",
                        "a tally (yes votes and no votes given respectively as `MemberCount`)."
                      ]
                    },
                    {
                      "name": "Approved",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A motion was approved by the required threshold."
                      ]
                    },
                    {
                      "name": "Disapproved",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A motion was not approved by the required threshold."
                      ]
                    },
                    {
                      "name": "Executed",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "result",
                          "type": 31,
                          "typeName": "DispatchResult",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A motion was executed; result will be `Ok` if it returned without error."
                      ]
                    },
                    {
                      "name": "MemberExecuted",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "result",
                          "type": 31,
                          "typeName": "DispatchResult",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A single member did some action; result will be `Ok` if it returned without error."
                      ]
                    },
                    {
                      "name": "Closed",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "yes",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        },
                        {
                          "name": "no",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A proposal was closed because its threshold was reached or after its duration was up."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 60,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Proposed",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex",
                          "docs": []
                        },
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "threshold",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A motion (given hash) has been proposed (by given account) with a threshold (given",
                        "`MemberCount`)."
                      ]
                    },
                    {
                      "name": "Voted",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "voted",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        },
                        {
                          "name": "yes",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        },
                        {
                          "name": "no",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A motion (given hash) has been voted on by given account, leaving",
                        "a tally (yes votes and no votes given respectively as `MemberCount`)."
                      ]
                    },
                    {
                      "name": "Approved",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A motion was approved by the required threshold."
                      ]
                    },
                    {
                      "name": "Disapproved",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A motion was not approved by the required threshold."
                      ]
                    },
                    {
                      "name": "Executed",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "result",
                          "type": 31,
                          "typeName": "DispatchResult",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A motion was executed; result will be `Ok` if it returned without error."
                      ]
                    },
                    {
                      "name": "MemberExecuted",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "result",
                          "type": 31,
                          "typeName": "DispatchResult",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A single member did some action; result will be `Ok` if it returned without error."
                      ]
                    },
                    {
                      "name": "Closed",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "yes",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        },
                        {
                          "name": "no",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A proposal was closed because its threshold was reached or after its duration was up."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 61,
            "type": {
              "path": [
                "pallet_elections_phragmen",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewTerm",
                      "fields": [
                        {
                          "name": "new_members",
                          "type": 62,
                          "typeName": "Vec<(<T as frame_system::Config>::AccountId, BalanceOf<T>)>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A new term with new_members. This indicates that enough candidates existed to run",
                        "the election, not that enough have has been elected. The inner value must be examined",
                        "for this purpose. A `NewTerm(\\[\\])` indicates that some candidates got their bond",
                        "slashed and none were elected, whilst `EmptyTerm` means that no candidates existed to",
                        "begin with."
                      ]
                    },
                    {
                      "name": "EmptyTerm",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "No (or not enough) candidates existed for this round. This is different from",
                        "`NewTerm(\\[\\])`. See the description of `NewTerm`."
                      ]
                    },
                    {
                      "name": "ElectionError",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Internal error happened while trying to perform election."
                      ]
                    },
                    {
                      "name": "MemberKicked",
                      "fields": [
                        {
                          "name": "member",
                          "type": 0,
                          "typeName": "<T as frame_system::Config>::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A member has been removed. This should always be followed by either `NewTerm` or",
                        "`EmptyTerm`."
                      ]
                    },
                    {
                      "name": "Renounced",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "<T as frame_system::Config>::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Someone has renounced their candidacy."
                      ]
                    },
                    {
                      "name": "CandidateSlashed",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "<T as frame_system::Config>::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A candidate was slashed by amount due to failing to obtain a seat as member or",
                        "runner-up.",
                        "",
                        "Note that old members and runners-up are also candidates."
                      ]
                    },
                    {
                      "name": "SeatHolderSlashed",
                      "fields": [
                        {
                          "name": "seat_holder",
                          "type": 0,
                          "typeName": "<T as frame_system::Config>::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A seat holder was slashed by amount by being forcefully removed from the set."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 62,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 63
                }
              },
              "docs": []
            }
          },
          {
            "id": 63,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  6
                ]
              },
              "docs": []
            }
          },
          {
            "id": 64,
            "type": {
              "path": [
                "pallet_membership",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "MemberAdded",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The given member was added; see the transaction for who."
                      ]
                    },
                    {
                      "name": "MemberRemoved",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The given member was removed; see the transaction for who."
                      ]
                    },
                    {
                      "name": "MembersSwapped",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Two members were swapped; see the transaction for who."
                      ]
                    },
                    {
                      "name": "MembersReset",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The membership was reset; see the transaction for who the new set is."
                      ]
                    },
                    {
                      "name": "KeyChanged",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "One of the members' keys changed."
                      ]
                    },
                    {
                      "name": "Dummy",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Phantom member, never used."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 65,
            "type": {
              "path": [
                "pallet_grandpa",
                "pallet",
                "Event"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewAuthorities",
                      "fields": [
                        {
                          "name": "authority_set",
                          "type": 66,
                          "typeName": "AuthorityList",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New authority set has been applied."
                      ]
                    },
                    {
                      "name": "Paused",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Current authority set has been paused."
                      ]
                    },
                    {
                      "name": "Resumed",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Current authority set has been resumed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 66,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 67
                }
              },
              "docs": []
            }
          },
          {
            "id": 67,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  68,
                  11
                ]
              },
              "docs": []
            }
          },
          {
            "id": 68,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "app",
                "Public"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 69,
                      "typeName": "ed25519::Public",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 69,
            "type": {
              "path": [
                "sp_core",
                "ed25519",
                "Public"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 70,
            "type": {
              "path": [
                "pallet_treasury",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Proposed",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New proposal."
                      ]
                    },
                    {
                      "name": "Spending",
                      "fields": [
                        {
                          "name": "budget_remaining",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "We have ended a spend period and will now allocate funds."
                      ]
                    },
                    {
                      "name": "Awarded",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex",
                          "docs": []
                        },
                        {
                          "name": "award",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Some funds have been allocated."
                      ]
                    },
                    {
                      "name": "Rejected",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex",
                          "docs": []
                        },
                        {
                          "name": "slashed",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A proposal was rejected; funds were slashed."
                      ]
                    },
                    {
                      "name": "Burnt",
                      "fields": [
                        {
                          "name": "burnt_funds",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Some of our funds have been burnt."
                      ]
                    },
                    {
                      "name": "Rollover",
                      "fields": [
                        {
                          "name": "rollover_balance",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Spending has finished; this is the amount that rolls over until next spend."
                      ]
                    },
                    {
                      "name": "Deposit",
                      "fields": [
                        {
                          "name": "value",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Some funds have been deposited."
                      ]
                    },
                    {
                      "name": "SpendApproved",
                      "fields": [
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A new spend proposal has been approved."
                      ]
                    },
                    {
                      "name": "UpdatedInactive",
                      "fields": [
                        {
                          "name": "reactivated",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "deactivated",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "The inactive funds of the pallet have been updated."
                      ]
                    },
                    {
                      "name": "AssetSpendApproved",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex",
                          "docs": []
                        },
                        {
                          "name": "asset_kind",
                          "type": 4,
                          "typeName": "T::AssetKind",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "AssetBalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::Beneficiary",
                          "docs": []
                        },
                        {
                          "name": "valid_from",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "expire_at",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A new asset spend proposal has been approved."
                      ]
                    },
                    {
                      "name": "AssetSpendVoided",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "An approved spend was voided."
                      ]
                    },
                    {
                      "name": "Paid",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex",
                          "docs": []
                        },
                        {
                          "name": "payment_id",
                          "type": 32,
                          "typeName": "<T::Paymaster as Pay>::Id",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A payment happened."
                      ]
                    },
                    {
                      "name": "PaymentFailed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex",
                          "docs": []
                        },
                        {
                          "name": "payment_id",
                          "type": 32,
                          "typeName": "<T::Paymaster as Pay>::Id",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A payment failed and can be retried."
                      ]
                    },
                    {
                      "name": "SpendProcessed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "A spend was processed and removed from the storage. It might have been successfully",
                        "paid or it may have expired."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 71,
            "type": {
              "path": [
                "pallet_asset_rate",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AssetRateCreated",
                      "fields": [
                        {
                          "name": "asset_kind",
                          "type": 4,
                          "typeName": "T::AssetKind",
                          "docs": []
                        },
                        {
                          "name": "rate",
                          "type": 72,
                          "typeName": "FixedU128",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "AssetRateRemoved",
                      "fields": [
                        {
                          "name": "asset_kind",
                          "type": 4,
                          "typeName": "T::AssetKind",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "AssetRateUpdated",
                      "fields": [
                        {
                          "name": "asset_kind",
                          "type": 4,
                          "typeName": "T::AssetKind",
                          "docs": []
                        },
                        {
                          "name": "old",
                          "type": 72,
                          "typeName": "FixedU128",
                          "docs": []
                        },
                        {
                          "name": "new",
                          "type": 72,
                          "typeName": "FixedU128",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 72,
            "type": {
              "path": [
                "sp_arithmetic",
                "fixed_point",
                "FixedU128"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 6,
                      "typeName": "u128",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 73,
            "type": {
              "path": [
                "pallet_contracts",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Instantiated",
                      "fields": [
                        {
                          "name": "deployer",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "contract",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Contract deployed by address at the specified address."
                      ]
                    },
                    {
                      "name": "Terminated",
                      "fields": [
                        {
                          "name": "contract",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The contract that was terminated."
                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account that received the contracts remaining balance"
                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Contract has been removed.",
                        "",
                        "# Note",
                        "",
                        "The only way for a contract to be removed and emitting this event is by calling",
                        "`seal_terminate`."
                      ]
                    },
                    {
                      "name": "CodeStored",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "deposit_held",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "uploader",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Code with the specified hash has been stored."
                      ]
                    },
                    {
                      "name": "ContractEmitted",
                      "fields": [
                        {
                          "name": "contract",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The contract that emitted the event."
                          ]
                        },
                        {
                          "name": "data",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": [
                            "Data supplied by the contract. Metadata generated during contract compilation",
                            "is needed to decode it."
                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A custom event emitted by the contract."
                      ]
                    },
                    {
                      "name": "CodeRemoved",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "deposit_released",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "remover",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A code with the specified hash was removed."
                      ]
                    },
                    {
                      "name": "ContractCodeUpdated",
                      "fields": [
                        {
                          "name": "contract",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The contract that has been updated."
                          ]
                        },
                        {
                          "name": "new_code_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [
                            "New code hash that was set for the contract."
                          ]
                        },
                        {
                          "name": "old_code_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [
                            "Previous code hash of the contract."
                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A contract's code was updated."
                      ]
                    },
                    {
                      "name": "Called",
                      "fields": [
                        {
                          "name": "caller",
                          "type": 74,
                          "typeName": "Origin<T>",
                          "docs": [
                            "The caller of the `contract`."
                          ]
                        },
                        {
                          "name": "contract",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The contract that was called."
                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A contract was called either by a plain account or another contract.",
                        "",
                        "# Note",
                        "",
                        "Please keep in mind that like all events this is only emitted for successful",
                        "calls. This is because on failure all storage changes including events are",
                        "rolled back."
                      ]
                    },
                    {
                      "name": "DelegateCalled",
                      "fields": [
                        {
                          "name": "contract",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The contract that performed the delegate call and hence in whose context",
                            "the `code_hash` is executed."
                          ]
                        },
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "CodeHash<T>",
                          "docs": [
                            "The code hash that was delegate called."
                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A contract delegate called a code hash.",
                        "",
                        "# Note",
                        "",
                        "Please keep in mind that like all events this is only emitted for successful",
                        "calls. This is because on failure all storage changes including events are",
                        "rolled back."
                      ]
                    },
                    {
                      "name": "StorageDepositTransferredAndHeld",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Some funds have been transferred and held as storage deposit."
                      ]
                    },
                    {
                      "name": "StorageDepositTransferredAndReleased",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Some storage deposit funds have been transferred and released."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 74,
            "type": {
              "path": [
                "pallet_contracts",
                "Origin"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 75
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Root",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Signed",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 75,
            "type": {
              "path": [
                "kitchensink_runtime",
                "Runtime"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 76,
            "type": {
              "path": [
                "pallet_sudo",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Sudid",
                      "fields": [
                        {
                          "name": "sudo_result",
                          "type": 31,
                          "typeName": "DispatchResult",
                          "docs": [
                            "The result of the call made by the sudo user."
                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A sudo call just took place."
                      ]
                    },
                    {
                      "name": "KeyChanged",
                      "fields": [
                        {
                          "name": "old",
                          "type": 42,
                          "typeName": "Option<T::AccountId>",
                          "docs": [
                            "The old sudo key (if one was previously set)."
                          ]
                        },
                        {
                          "name": "new",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The new sudo key (if one was set)."
                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The sudo key has been updated."
                      ]
                    },
                    {
                      "name": "KeyRemoved",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The key was permanently removed."
                      ]
                    },
                    {
                      "name": "SudoAsDone",
                      "fields": [
                        {
                          "name": "sudo_result",
                          "type": 31,
                          "typeName": "DispatchResult",
                          "docs": [
                            "The result of the call made by the sudo user."
                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A [sudo_as](Pallet::sudo_as) call just took place."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 77,
            "type": {
              "path": [
                "pallet_im_online",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "HeartbeatReceived",
                      "fields": [
                        {
                          "name": "authority_id",
                          "type": 78,
                          "typeName": "T::AuthorityId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A new heartbeat was received from `AuthorityId`."
                      ]
                    },
                    {
                      "name": "AllGood",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "At the end of the session, no offence was committed."
                      ]
                    },
                    {
                      "name": "SomeOffline",
                      "fields": [
                        {
                          "name": "offline",
                          "type": 80,
                          "typeName": "Vec<IdentificationTuple<T>>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "At the end of the session, at least one validator was found to be offline."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 78,
            "type": {
              "path": [
                "pallet_im_online",
                "sr25519",
                "app_sr25519",
                "Public"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 79,
                      "typeName": "sr25519::Public",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 79,
            "type": {
              "path": [
                "sp_core",
                "sr25519",
                "Public"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 80,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 81
                }
              },
              "docs": []
            }
          },
          {
            "id": 81,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  82
                ]
              },
              "docs": []
            }
          },
          {
            "id": 82,
            "type": {
              "path": [
                "sp_staking",
                "Exposure"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "total",
                      "type": 83,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "own",
                      "type": 83,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "others",
                      "type": 84,
                      "typeName": "Vec<IndividualExposure<AccountId, Balance>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 83,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "compact": {
                  "type": 6
                }
              },
              "docs": []
            }
          },
          {
            "id": 84,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 85
                }
              },
              "docs": []
            }
          },
          {
            "id": 85,
            "type": {
              "path": [
                "sp_staking",
                "IndividualExposure"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "who",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "type": 83,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 86,
            "type": {
              "path": [
                "pallet_offences",
                "pallet",
                "Event"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Offence",
                      "fields": [
                        {
                          "name": "kind",
                          "type": 87,
                          "typeName": "Kind",
                          "docs": []
                        },
                        {
                          "name": "timeslot",
                          "type": 13,
                          "typeName": "OpaqueTimeSlot",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "There is an offence reported of the given `kind` happened at the `session_index` and",
                        "(kind-specific) time slot. This event is not deposited for duplicate slashes.",
                        "\\[kind, timeslot\\]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Events type."
              ]
            }
          },
          {
            "id": 87,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 16,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 88,
            "type": {
              "path": [
                "pallet_identity",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "IdentitySet",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A name was set or reset (which will remove all judgements)."
                      ]
                    },
                    {
                      "name": "IdentityCleared",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A name was cleared, and the given balance returned."
                      ]
                    },
                    {
                      "name": "IdentityKilled",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A name was removed and the given balance slashed."
                      ]
                    },
                    {
                      "name": "JudgementRequested",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "registrar_index",
                          "type": 4,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A judgement was asked from a registrar."
                      ]
                    },
                    {
                      "name": "JudgementUnrequested",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "registrar_index",
                          "type": 4,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A judgement request was retracted."
                      ]
                    },
                    {
                      "name": "JudgementGiven",
                      "fields": [
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "registrar_index",
                          "type": 4,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A judgement was given by a registrar."
                      ]
                    },
                    {
                      "name": "RegistrarAdded",
                      "fields": [
                        {
                          "name": "registrar_index",
                          "type": 4,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A registrar was added."
                      ]
                    },
                    {
                      "name": "SubIdentityAdded",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "main",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A sub-identity was added to an identity and the deposit paid."
                      ]
                    },
                    {
                      "name": "SubIdentityRemoved",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "main",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "A sub-identity was removed from an identity and the deposit freed."
                      ]
                    },
                    {
                      "name": "SubIdentityRevoked",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "main",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A sub-identity was cleared, and the given deposit repatriated from the",
                        "main identity account to the sub-identity account."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 89,
            "type": {
              "path": [
                "pallet_society",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Founded",
                      "fields": [
                        {
                          "name": "founder",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "The society is founded by the given identity."
                      ]
                    },
                    {
                      "name": "Bid",
                      "fields": [
                        {
                          "name": "candidate_id",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "offer",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A membership bid just happened. The given account is the candidate's ID and their offer",
                        "is the second."
                      ]
                    },
                    {
                      "name": "Vouch",
                      "fields": [
                        {
                          "name": "candidate_id",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "offer",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "vouching",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A membership bid just happened by vouching. The given account is the candidate's ID and",
                        "their offer is the second. The vouching party is the third."
                      ]
                    },
                    {
                      "name": "AutoUnbid",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A candidate was dropped (due to an excess of bids in the system)."
                      ]
                    },
                    {
                      "name": "Unbid",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A candidate was dropped (by their request)."
                      ]
                    },
                    {
                      "name": "Unvouch",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A candidate was dropped (by request of who vouched for them)."
                      ]
                    },
                    {
                      "name": "Inducted",
                      "fields": [
                        {
                          "name": "primary",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "candidates",
                          "type": 90,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A group of candidates have been inducted. The batch's primary is the first value, the",
                        "batch in full is the second."
                      ]
                    },
                    {
                      "name": "SuspendedMemberJudgement",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "judged",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A suspended member has been judged."
                      ]
                    },
                    {
                      "name": "CandidateSuspended",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "A candidate has been suspended"
                      ]
                    },
                    {
                      "name": "MemberSuspended",
                      "fields": [
                        {
                          "name": "member",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A member has been suspended"
                      ]
                    },
                    {
                      "name": "Challenged",
                      "fields": [
                        {
                          "name": "member",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "A member has been challenged"
                      ]
                    },
                    {
                      "name": "Vote",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "voter",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "vote",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A vote has been placed"
                      ]
                    },
                    {
                      "name": "DefenderVote",
                      "fields": [
                        {
                          "name": "voter",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "vote",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A vote has been placed for a defending member"
                      ]
                    },
                    {
                      "name": "NewParams",
                      "fields": [
                        {
                          "name": "params",
                          "type": 91,
                          "typeName": "GroupParamsFor<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "A new set of \\[params\\] has been set for the group."
                      ]
                    },
                    {
                      "name": "Unfounded",
                      "fields": [
                        {
                          "name": "founder",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Society is unfounded."
                      ]
                    },
                    {
                      "name": "Deposit",
                      "fields": [
                        {
                          "name": "value",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Some funds were deposited into the society account."
                      ]
                    },
                    {
                      "name": "Elevated",
                      "fields": [
                        {
                          "name": "member",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "rank",
                          "type": 4,
                          "typeName": "Rank",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "A \\[member\\] got elevated to \\[rank\\]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 90,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 0
                }
              },
              "docs": []
            }
          },
          {
            "id": 91,
            "type": {
              "path": [
                "pallet_society",
                "GroupParams"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max_members",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_intake",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "max_strikes",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "candidate_deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 92,
            "type": {
              "path": [
                "pallet_recovery",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "RecoveryCreated",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A recovery process has been set up for an account."
                      ]
                    },
                    {
                      "name": "RecoveryInitiated",
                      "fields": [
                        {
                          "name": "lost_account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "rescuer_account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A recovery process has been initiated for lost account by rescuer account."
                      ]
                    },
                    {
                      "name": "RecoveryVouched",
                      "fields": [
                        {
                          "name": "lost_account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "rescuer_account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "sender",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A recovery process for lost account by rescuer account has been vouched for by sender."
                      ]
                    },
                    {
                      "name": "RecoveryClosed",
                      "fields": [
                        {
                          "name": "lost_account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "rescuer_account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A recovery process for lost account by rescuer account has been closed."
                      ]
                    },
                    {
                      "name": "AccountRecovered",
                      "fields": [
                        {
                          "name": "lost_account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "rescuer_account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Lost account has been successfully recovered by rescuer account."
                      ]
                    },
                    {
                      "name": "RecoveryRemoved",
                      "fields": [
                        {
                          "name": "lost_account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A recovery process has been removed for an account."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Events type."
              ]
            }
          },
          {
            "id": 93,
            "type": {
              "path": [
                "pallet_vesting",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "VestingUpdated",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "unvested",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "The amount vested has been updated. This could indicate a change in funds available.",
                        "The balance given is the amount which is left unvested (and thus locked)."
                      ]
                    },
                    {
                      "name": "VestingCompleted",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An \\[account\\] has become fully vested."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 94,
            "type": {
              "path": [
                "pallet_scheduler",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Scheduled",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Scheduled some task."
                      ]
                    },
                    {
                      "name": "Canceled",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Canceled some task."
                      ]
                    },
                    {
                      "name": "Dispatched",
                      "fields": [
                        {
                          "name": "task",
                          "type": 95,
                          "typeName": "TaskAddress<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "id",
                          "type": 96,
                          "typeName": "Option<TaskName>",
                          "docs": []
                        },
                        {
                          "name": "result",
                          "type": 31,
                          "typeName": "DispatchResult",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Dispatched some task."
                      ]
                    },
                    {
                      "name": "CallUnavailable",
                      "fields": [
                        {
                          "name": "task",
                          "type": 95,
                          "typeName": "TaskAddress<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "id",
                          "type": 96,
                          "typeName": "Option<TaskName>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "The call for the provided hash was not found so the task has been aborted."
                      ]
                    },
                    {
                      "name": "PeriodicFailed",
                      "fields": [
                        {
                          "name": "task",
                          "type": 95,
                          "typeName": "TaskAddress<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "id",
                          "type": 96,
                          "typeName": "Option<TaskName>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "The given task was unable to be renewed since the agenda is full at that block."
                      ]
                    },
                    {
                      "name": "PermanentlyOverweight",
                      "fields": [
                        {
                          "name": "task",
                          "type": 95,
                          "typeName": "TaskAddress<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "id",
                          "type": 96,
                          "typeName": "Option<TaskName>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "The given task can never be executed since it is overweight."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Events type."
              ]
            }
          },
          {
            "id": 95,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 96,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 1
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 97,
            "type": {
              "path": [
                "pallet_glutton",
                "pallet",
                "Event"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PalletInitialized",
                      "fields": [
                        {
                          "name": "reinit",
                          "type": 43,
                          "typeName": "bool",
                          "docs": [
                            "Whether the pallet has been re-initialized."
                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "The pallet has been (re)initialized."
                      ]
                    },
                    {
                      "name": "ComputationLimitSet",
                      "fields": [
                        {
                          "name": "compute",
                          "type": 98,
                          "typeName": "FixedU64",
                          "docs": [
                            "The computation limit."
                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The computation limit has been updated."
                      ]
                    },
                    {
                      "name": "StorageLimitSet",
                      "fields": [
                        {
                          "name": "storage",
                          "type": 98,
                          "typeName": "FixedU64",
                          "docs": [
                            "The storage limit."
                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "The storage limit has been updated."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 98,
            "type": {
              "path": [
                "sp_arithmetic",
                "fixed_point",
                "FixedU64"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 11,
                      "typeName": "u64",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 99,
            "type": {
              "path": [
                "pallet_preimage",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noted",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A preimage has been noted."
                      ]
                    },
                    {
                      "name": "Requested",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A preimage has been requested."
                      ]
                    },
                    {
                      "name": "Cleared",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A preimage has ben cleared."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 100,
            "type": {
              "path": [
                "pallet_proxy",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ProxyExecuted",
                      "fields": [
                        {
                          "name": "result",
                          "type": 31,
                          "typeName": "DispatchResult",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A proxy was executed correctly, with the given."
                      ]
                    },
                    {
                      "name": "PureCreated",
                      "fields": [
                        {
                          "name": "pure",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "proxy_type",
                          "type": 101,
                          "typeName": "T::ProxyType",
                          "docs": []
                        },
                        {
                          "name": "disambiguation_index",
                          "type": 102,
                          "typeName": "u16",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A pure account has been created by new proxy with given",
                        "disambiguation index and proxy type."
                      ]
                    },
                    {
                      "name": "Announced",
                      "fields": [
                        {
                          "name": "real",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "proxy",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "An announcement was placed to make a call in the future."
                      ]
                    },
                    {
                      "name": "ProxyAdded",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "delegatee",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "proxy_type",
                          "type": 101,
                          "typeName": "T::ProxyType",
                          "docs": []
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A proxy was added."
                      ]
                    },
                    {
                      "name": "ProxyRemoved",
                      "fields": [
                        {
                          "name": "delegator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "delegatee",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "proxy_type",
                          "type": 101,
                          "typeName": "T::ProxyType",
                          "docs": []
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A proxy was removed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 101,
            "type": {
              "path": [
                "kitchensink_runtime",
                "ProxyType"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Any",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "NonTransfer",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Governance",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Staking",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 102,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "primitive": "U16"
              },
              "docs": []
            }
          },
          {
            "id": 103,
            "type": {
              "path": [
                "pallet_multisig",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewMultisig",
                      "fields": [
                        {
                          "name": "approving",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A new multisig operation has begun."
                      ]
                    },
                    {
                      "name": "MultisigApproval",
                      "fields": [
                        {
                          "name": "approving",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "timepoint",
                          "type": 104,
                          "typeName": "Timepoint<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A multisig operation has been approved by someone."
                      ]
                    },
                    {
                      "name": "MultisigExecuted",
                      "fields": [
                        {
                          "name": "approving",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "timepoint",
                          "type": 104,
                          "typeName": "Timepoint<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash",
                          "docs": []
                        },
                        {
                          "name": "result",
                          "type": 31,
                          "typeName": "DispatchResult",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A multisig operation has been executed."
                      ]
                    },
                    {
                      "name": "MultisigCancelled",
                      "fields": [
                        {
                          "name": "cancelling",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "timepoint",
                          "type": 104,
                          "typeName": "Timepoint<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "multisig",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "CallHash",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A multisig operation has been cancelled."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 104,
            "type": {
              "path": [
                "pallet_multisig",
                "Timepoint"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "height",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "index",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 105,
            "type": {
              "path": [
                "pallet_bounties",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BountyProposed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "New bounty proposal."
                      ]
                    },
                    {
                      "name": "BountyRejected",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "bond",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A bounty proposal was rejected; funds were slashed."
                      ]
                    },
                    {
                      "name": "BountyBecameActive",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A bounty proposal is funded and became active."
                      ]
                    },
                    {
                      "name": "BountyAwarded",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A bounty is awarded to a beneficiary."
                      ]
                    },
                    {
                      "name": "BountyClaimed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "payout",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A bounty is claimed by beneficiary."
                      ]
                    },
                    {
                      "name": "BountyCanceled",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A bounty is cancelled."
                      ]
                    },
                    {
                      "name": "BountyExtended",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A bounty expiry is extended."
                      ]
                    },
                    {
                      "name": "BountyApproved",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A bounty is approved."
                      ]
                    },
                    {
                      "name": "CuratorProposed",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 4,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "curator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "A bounty curator is proposed."
                      ]
                    },
                    {
                      "name": "CuratorUnassigned",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 4,
                          "typeName": "BountyIndex",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A bounty curator is unassigned."
                      ]
                    },
                    {
                      "name": "CuratorAccepted",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 4,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "curator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "A bounty curator is accepted."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 106,
            "type": {
              "path": [
                "pallet_tips",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewTip",
                      "fields": [
                        {
                          "name": "tip_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A new tip suggestion has been opened."
                      ]
                    },
                    {
                      "name": "TipClosing",
                      "fields": [
                        {
                          "name": "tip_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A tip suggestion has reached threshold and is closing."
                      ]
                    },
                    {
                      "name": "TipClosed",
                      "fields": [
                        {
                          "name": "tip_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "payout",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A tip suggestion has been closed."
                      ]
                    },
                    {
                      "name": "TipRetracted",
                      "fields": [
                        {
                          "name": "tip_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A tip suggestion has been retracted."
                      ]
                    },
                    {
                      "name": "TipSlashed",
                      "fields": [
                        {
                          "name": "tip_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "finder",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A tip suggestion has been slashed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 107,
            "type": {
              "path": [
                "pallet_assets",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Created",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "creator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Some asset class was created."
                      ]
                    },
                    {
                      "name": "Issued",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Some assets were issued."
                      ]
                    },
                    {
                      "name": "Transferred",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Some assets were transferred."
                      ]
                    },
                    {
                      "name": "Burned",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Some assets were destroyed."
                      ]
                    },
                    {
                      "name": "TeamChanged",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "issuer",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "admin",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "freezer",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "The management team changed."
                      ]
                    },
                    {
                      "name": "OwnerChanged",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "The owner changed."
                      ]
                    },
                    {
                      "name": "Frozen",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Some account `who` was frozen."
                      ]
                    },
                    {
                      "name": "Thawed",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Some account `who` was thawed."
                      ]
                    },
                    {
                      "name": "AssetFrozen",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Some asset `asset_id` was frozen."
                      ]
                    },
                    {
                      "name": "AssetThawed",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Some asset `asset_id` was thawed."
                      ]
                    },
                    {
                      "name": "AccountsDestroyed",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "accounts_destroyed",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "accounts_remaining",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Accounts were destroyed for given asset."
                      ]
                    },
                    {
                      "name": "ApprovalsDestroyed",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "approvals_destroyed",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "approvals_remaining",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Approvals were destroyed for given asset."
                      ]
                    },
                    {
                      "name": "DestructionStarted",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "An asset class is in the process of being destroyed."
                      ]
                    },
                    {
                      "name": "Destroyed",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "An asset class was destroyed."
                      ]
                    },
                    {
                      "name": "ForceCreated",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Some asset class was force-created."
                      ]
                    },
                    {
                      "name": "MetadataSet",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "name",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "symbol",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "decimals",
                          "type": 2,
                          "typeName": "u8",
                          "docs": []
                        },
                        {
                          "name": "is_frozen",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "New metadata has been set for an asset."
                      ]
                    },
                    {
                      "name": "MetadataCleared",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Metadata has been cleared for an asset."
                      ]
                    },
                    {
                      "name": "ApprovedTransfer",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "source",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "(Additional) funds have been approved for transfer to a destination account."
                      ]
                    },
                    {
                      "name": "ApprovalCancelled",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "An approval for account `delegate` was cancelled by `owner`."
                      ]
                    },
                    {
                      "name": "TransferredApproved",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "destination",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "An `amount` was transferred in its entirety from `owner` to `destination` by",
                        "the approved `delegate`."
                      ]
                    },
                    {
                      "name": "AssetStatusChanged",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "An asset has had its attributes changed by the `Force` origin."
                      ]
                    },
                    {
                      "name": "AssetMinBalanceChanged",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "new_min_balance",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "The min_balance of an asset has been updated by the asset owner."
                      ]
                    },
                    {
                      "name": "Touched",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "depositor",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "Some account `who` was created with a deposit from `depositor`."
                      ]
                    },
                    {
                      "name": "Blocked",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": [
                        "Some account `who` was blocked."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 108,
            "type": {
              "path": [
                "pallet_assets",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Created",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "creator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Some asset class was created."
                      ]
                    },
                    {
                      "name": "Issued",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Some assets were issued."
                      ]
                    },
                    {
                      "name": "Transferred",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Some assets were transferred."
                      ]
                    },
                    {
                      "name": "Burned",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Some assets were destroyed."
                      ]
                    },
                    {
                      "name": "TeamChanged",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "issuer",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "admin",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "freezer",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "The management team changed."
                      ]
                    },
                    {
                      "name": "OwnerChanged",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "The owner changed."
                      ]
                    },
                    {
                      "name": "Frozen",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Some account `who` was frozen."
                      ]
                    },
                    {
                      "name": "Thawed",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Some account `who` was thawed."
                      ]
                    },
                    {
                      "name": "AssetFrozen",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Some asset `asset_id` was frozen."
                      ]
                    },
                    {
                      "name": "AssetThawed",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Some asset `asset_id` was thawed."
                      ]
                    },
                    {
                      "name": "AccountsDestroyed",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "accounts_destroyed",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "accounts_remaining",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Accounts were destroyed for given asset."
                      ]
                    },
                    {
                      "name": "ApprovalsDestroyed",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "approvals_destroyed",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "approvals_remaining",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Approvals were destroyed for given asset."
                      ]
                    },
                    {
                      "name": "DestructionStarted",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "An asset class is in the process of being destroyed."
                      ]
                    },
                    {
                      "name": "Destroyed",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "An asset class was destroyed."
                      ]
                    },
                    {
                      "name": "ForceCreated",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Some asset class was force-created."
                      ]
                    },
                    {
                      "name": "MetadataSet",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "name",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "symbol",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "decimals",
                          "type": 2,
                          "typeName": "u8",
                          "docs": []
                        },
                        {
                          "name": "is_frozen",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "New metadata has been set for an asset."
                      ]
                    },
                    {
                      "name": "MetadataCleared",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Metadata has been cleared for an asset."
                      ]
                    },
                    {
                      "name": "ApprovedTransfer",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "source",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "(Additional) funds have been approved for transfer to a destination account."
                      ]
                    },
                    {
                      "name": "ApprovalCancelled",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "An approval for account `delegate` was cancelled by `owner`."
                      ]
                    },
                    {
                      "name": "TransferredApproved",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "destination",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "An `amount` was transferred in its entirety from `owner` to `destination` by",
                        "the approved `delegate`."
                      ]
                    },
                    {
                      "name": "AssetStatusChanged",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "An asset has had its attributes changed by the `Force` origin."
                      ]
                    },
                    {
                      "name": "AssetMinBalanceChanged",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "new_min_balance",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "The min_balance of an asset has been updated by the asset owner."
                      ]
                    },
                    {
                      "name": "Touched",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "depositor",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "Some account `who` was created with a deposit from `depositor`."
                      ]
                    },
                    {
                      "name": "Blocked",
                      "fields": [
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "T::AssetId",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": [
                        "Some account `who` was blocked."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 109,
            "type": {
              "path": [
                "pallet_lottery",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "LotteryStarted",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "A lottery has been started!"
                      ]
                    },
                    {
                      "name": "CallsUpdated",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "A new set of calls have been set!"
                      ]
                    },
                    {
                      "name": "Winner",
                      "fields": [
                        {
                          "name": "winner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "lottery_balance",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A winner has been chosen!"
                      ]
                    },
                    {
                      "name": "TicketBought",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "call_index",
                          "type": 110,
                          "typeName": "CallIndex",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A ticket has been bought!"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 110,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  2,
                  2
                ]
              },
              "docs": []
            }
          },
          {
            "id": 111,
            "type": {
              "path": [
                "pallet_nis",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BidPlaced",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "duration",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A bid was successfully placed."
                      ]
                    },
                    {
                      "name": "BidRetracted",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "duration",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A bid was successfully removed (before being accepted)."
                      ]
                    },
                    {
                      "name": "BidDropped",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "duration",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A bid was dropped from a queue because of another, more substantial, bid was present."
                      ]
                    },
                    {
                      "name": "Issued",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReceiptIndex",
                          "docs": [
                            "The identity of the receipt."
                          ]
                        },
                        {
                          "name": "expiry",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [
                            "The block number at which the receipt may be thawed."
                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The owner of the receipt."
                          ]
                        },
                        {
                          "name": "proportion",
                          "type": 112,
                          "typeName": "Perquintill",
                          "docs": [
                            "The proportion of the effective total issuance which the receipt represents."
                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [
                            "The amount of funds which were debited from the owner."
                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A bid was accepted. The balance may not be released until expiry."
                      ]
                    },
                    {
                      "name": "Thawed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReceiptIndex",
                          "docs": [
                            "The identity of the receipt."
                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The owner."
                          ]
                        },
                        {
                          "name": "proportion",
                          "type": 112,
                          "typeName": "Perquintill",
                          "docs": [
                            "The proportion of the effective total issuance by which the owner was debited."
                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [
                            "The amount by which the owner was credited."
                          ]
                        },
                        {
                          "name": "dropped",
                          "type": 43,
                          "typeName": "bool",
                          "docs": [
                            "If `true` then the receipt is done."
                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An receipt has been (at least partially) thawed."
                      ]
                    },
                    {
                      "name": "Funded",
                      "fields": [
                        {
                          "name": "deficit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "An automatic funding of the deficit was made."
                      ]
                    },
                    {
                      "name": "Transferred",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReceiptIndex",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A receipt was transfered."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 112,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Perquintill"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 11,
                      "typeName": "u64",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 113,
            "type": {
              "path": [
                "pallet_uniques",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Created",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "creator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A `collection` was created."
                      ]
                    },
                    {
                      "name": "ForceCreated",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A `collection` was force-created."
                      ]
                    },
                    {
                      "name": "Destroyed",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A `collection` was destroyed."
                      ]
                    },
                    {
                      "name": "Issued",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "An `item` was issued."
                      ]
                    },
                    {
                      "name": "Transferred",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An `item` was transferred."
                      ]
                    },
                    {
                      "name": "Burned",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "An `item` was destroyed."
                      ]
                    },
                    {
                      "name": "Frozen",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Some `item` was frozen."
                      ]
                    },
                    {
                      "name": "Thawed",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Some `item` was thawed."
                      ]
                    },
                    {
                      "name": "CollectionFrozen",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Some `collection` was frozen."
                      ]
                    },
                    {
                      "name": "CollectionThawed",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Some `collection` was thawed."
                      ]
                    },
                    {
                      "name": "OwnerChanged",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "new_owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "The owner changed."
                      ]
                    },
                    {
                      "name": "TeamChanged",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "issuer",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "admin",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "freezer",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "The management team changed."
                      ]
                    },
                    {
                      "name": "ApprovedTransfer",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "An `item` of a `collection` has been approved by the `owner` for transfer by",
                        "a `delegate`."
                      ]
                    },
                    {
                      "name": "ApprovalCancelled",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "An approval for a `delegate` account to transfer the `item` of an item",
                        "`collection` was cancelled by its `owner`."
                      ]
                    },
                    {
                      "name": "ItemStatusChanged",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "A `collection` has had its attributes changed by the `Force` origin."
                      ]
                    },
                    {
                      "name": "CollectionMetadataSet",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "data",
                          "type": 114,
                          "typeName": "BoundedVec<u8, T::StringLimit>",
                          "docs": []
                        },
                        {
                          "name": "is_frozen",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "New metadata has been set for a `collection`."
                      ]
                    },
                    {
                      "name": "CollectionMetadataCleared",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Metadata has been cleared for a `collection`."
                      ]
                    },
                    {
                      "name": "MetadataSet",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "data",
                          "type": 114,
                          "typeName": "BoundedVec<u8, T::StringLimit>",
                          "docs": []
                        },
                        {
                          "name": "is_frozen",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "New metadata has been set for an item."
                      ]
                    },
                    {
                      "name": "MetadataCleared",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "Metadata has been cleared for an item."
                      ]
                    },
                    {
                      "name": "Redeposited",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "successful_items",
                          "type": 115,
                          "typeName": "Vec<T::ItemId>",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "Metadata has been cleared for an item."
                      ]
                    },
                    {
                      "name": "AttributeSet",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "maybe_item",
                          "type": 38,
                          "typeName": "Option<T::ItemId>",
                          "docs": []
                        },
                        {
                          "name": "key",
                          "type": 116,
                          "typeName": "BoundedVec<u8, T::KeyLimit>",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 117,
                          "typeName": "BoundedVec<u8, T::ValueLimit>",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "New attribute metadata has been set for a `collection` or `item`."
                      ]
                    },
                    {
                      "name": "AttributeCleared",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "maybe_item",
                          "type": 38,
                          "typeName": "Option<T::ItemId>",
                          "docs": []
                        },
                        {
                          "name": "key",
                          "type": 116,
                          "typeName": "BoundedVec<u8, T::KeyLimit>",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "Attribute metadata has been cleared for a `collection` or `item`."
                      ]
                    },
                    {
                      "name": "OwnershipAcceptanceChanged",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "maybe_collection",
                          "type": 38,
                          "typeName": "Option<T::CollectionId>",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "Ownership acceptance has changed for an account."
                      ]
                    },
                    {
                      "name": "CollectionMaxSupplySet",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "max_supply",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": [
                        "Max supply has been set for a collection."
                      ]
                    },
                    {
                      "name": "ItemPriceSet",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "price",
                          "type": 6,
                          "typeName": "ItemPrice<T, I>",
                          "docs": []
                        },
                        {
                          "name": "whitelisted_buyer",
                          "type": 42,
                          "typeName": "Option<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 24,
                      "docs": [
                        "The price was set for the instance."
                      ]
                    },
                    {
                      "name": "ItemPriceRemoved",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": [
                        "The price for the instance was removed."
                      ]
                    },
                    {
                      "name": "ItemBought",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "price",
                          "type": 6,
                          "typeName": "ItemPrice<T, I>",
                          "docs": []
                        },
                        {
                          "name": "seller",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "buyer",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 26,
                      "docs": [
                        "An item was bought."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 114,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 115,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 4
                }
              },
              "docs": []
            }
          },
          {
            "id": 116,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 117,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 118,
            "type": {
              "path": [
                "pallet_nfts",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Created",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "creator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A `collection` was created."
                      ]
                    },
                    {
                      "name": "ForceCreated",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A `collection` was force-created."
                      ]
                    },
                    {
                      "name": "Destroyed",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A `collection` was destroyed."
                      ]
                    },
                    {
                      "name": "Issued",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "An `item` was issued."
                      ]
                    },
                    {
                      "name": "Transferred",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An `item` was transferred."
                      ]
                    },
                    {
                      "name": "Burned",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "An `item` was destroyed."
                      ]
                    },
                    {
                      "name": "ItemTransferLocked",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "An `item` became non-transferable."
                      ]
                    },
                    {
                      "name": "ItemTransferUnlocked",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "An `item` became transferable."
                      ]
                    },
                    {
                      "name": "ItemPropertiesLocked",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "lock_metadata",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        },
                        {
                          "name": "lock_attributes",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "`item` metadata or attributes were locked."
                      ]
                    },
                    {
                      "name": "CollectionLocked",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Some `collection` was locked."
                      ]
                    },
                    {
                      "name": "OwnerChanged",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "new_owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "The owner changed."
                      ]
                    },
                    {
                      "name": "TeamChanged",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "issuer",
                          "type": 42,
                          "typeName": "Option<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "admin",
                          "type": 42,
                          "typeName": "Option<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "freezer",
                          "type": 42,
                          "typeName": "Option<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "The management team changed."
                      ]
                    },
                    {
                      "name": "TransferApproved",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "deadline",
                          "type": 38,
                          "typeName": "Option<BlockNumberFor<T>>",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "An `item` of a `collection` has been approved by the `owner` for transfer by",
                        "a `delegate`."
                      ]
                    },
                    {
                      "name": "ApprovalCancelled",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "An approval for a `delegate` account to transfer the `item` of an item",
                        "`collection` was cancelled by its `owner`."
                      ]
                    },
                    {
                      "name": "AllApprovalsCancelled",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "All approvals of an item got cancelled."
                      ]
                    },
                    {
                      "name": "CollectionConfigChanged",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "A `collection` has had its config changed by the `Force` origin."
                      ]
                    },
                    {
                      "name": "CollectionMetadataSet",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "data",
                          "type": 119,
                          "typeName": "BoundedVec<u8, T::StringLimit>",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "New metadata has been set for a `collection`."
                      ]
                    },
                    {
                      "name": "CollectionMetadataCleared",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "Metadata has been cleared for a `collection`."
                      ]
                    },
                    {
                      "name": "ItemMetadataSet",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "data",
                          "type": 119,
                          "typeName": "BoundedVec<u8, T::StringLimit>",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "New metadata has been set for an item."
                      ]
                    },
                    {
                      "name": "ItemMetadataCleared",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "Metadata has been cleared for an item."
                      ]
                    },
                    {
                      "name": "Redeposited",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "successful_items",
                          "type": 115,
                          "typeName": "Vec<T::ItemId>",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "The deposit for a set of `item`s within a `collection` has been updated."
                      ]
                    },
                    {
                      "name": "AttributeSet",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "maybe_item",
                          "type": 38,
                          "typeName": "Option<T::ItemId>",
                          "docs": []
                        },
                        {
                          "name": "key",
                          "type": 117,
                          "typeName": "BoundedVec<u8, T::KeyLimit>",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 119,
                          "typeName": "BoundedVec<u8, T::ValueLimit>",
                          "docs": []
                        },
                        {
                          "name": "namespace",
                          "type": 120,
                          "typeName": "AttributeNamespace<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "New attribute metadata has been set for a `collection` or `item`."
                      ]
                    },
                    {
                      "name": "AttributeCleared",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "maybe_item",
                          "type": 38,
                          "typeName": "Option<T::ItemId>",
                          "docs": []
                        },
                        {
                          "name": "key",
                          "type": 117,
                          "typeName": "BoundedVec<u8, T::KeyLimit>",
                          "docs": []
                        },
                        {
                          "name": "namespace",
                          "type": 120,
                          "typeName": "AttributeNamespace<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "Attribute metadata has been cleared for a `collection` or `item`."
                      ]
                    },
                    {
                      "name": "ItemAttributesApprovalAdded",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": [
                        "A new approval to modify item attributes was added."
                      ]
                    },
                    {
                      "name": "ItemAttributesApprovalRemoved",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 24,
                      "docs": [
                        "A new approval to modify item attributes was removed."
                      ]
                    },
                    {
                      "name": "OwnershipAcceptanceChanged",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "maybe_collection",
                          "type": 38,
                          "typeName": "Option<T::CollectionId>",
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": [
                        "Ownership acceptance has changed for an account."
                      ]
                    },
                    {
                      "name": "CollectionMaxSupplySet",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "max_supply",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 26,
                      "docs": [
                        "Max supply has been set for a collection."
                      ]
                    },
                    {
                      "name": "CollectionMintSettingsUpdated",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        }
                      ],
                      "index": 27,
                      "docs": [
                        "Mint settings for a collection had changed."
                      ]
                    },
                    {
                      "name": "NextCollectionIdIncremented",
                      "fields": [
                        {
                          "name": "next_id",
                          "type": 38,
                          "typeName": "Option<T::CollectionId>",
                          "docs": []
                        }
                      ],
                      "index": 28,
                      "docs": [
                        "Event gets emitted when the `NextCollectionId` gets incremented."
                      ]
                    },
                    {
                      "name": "ItemPriceSet",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "price",
                          "type": 6,
                          "typeName": "ItemPrice<T, I>",
                          "docs": []
                        },
                        {
                          "name": "whitelisted_buyer",
                          "type": 42,
                          "typeName": "Option<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 29,
                      "docs": [
                        "The price was set for the item."
                      ]
                    },
                    {
                      "name": "ItemPriceRemoved",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        }
                      ],
                      "index": 30,
                      "docs": [
                        "The price for the item was removed."
                      ]
                    },
                    {
                      "name": "ItemBought",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "price",
                          "type": 6,
                          "typeName": "ItemPrice<T, I>",
                          "docs": []
                        },
                        {
                          "name": "seller",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "buyer",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 31,
                      "docs": [
                        "An item was bought."
                      ]
                    },
                    {
                      "name": "TipSent",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "sender",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "receiver",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "DepositBalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 32,
                      "docs": [
                        "A tip was sent."
                      ]
                    },
                    {
                      "name": "SwapCreated",
                      "fields": [
                        {
                          "name": "offered_collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "offered_item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "desired_collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "desired_item",
                          "type": 38,
                          "typeName": "Option<T::ItemId>",
                          "docs": []
                        },
                        {
                          "name": "price",
                          "type": 121,
                          "typeName": "Option<PriceWithDirection<ItemPrice<T, I>>>",
                          "docs": []
                        },
                        {
                          "name": "deadline",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 33,
                      "docs": [
                        "An `item` swap intent was created."
                      ]
                    },
                    {
                      "name": "SwapCancelled",
                      "fields": [
                        {
                          "name": "offered_collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "offered_item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "desired_collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "desired_item",
                          "type": 38,
                          "typeName": "Option<T::ItemId>",
                          "docs": []
                        },
                        {
                          "name": "price",
                          "type": 121,
                          "typeName": "Option<PriceWithDirection<ItemPrice<T, I>>>",
                          "docs": []
                        },
                        {
                          "name": "deadline",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 34,
                      "docs": [
                        "The swap was cancelled."
                      ]
                    },
                    {
                      "name": "SwapClaimed",
                      "fields": [
                        {
                          "name": "sent_collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "sent_item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "sent_item_owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "received_collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "received_item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "received_item_owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "price",
                          "type": 121,
                          "typeName": "Option<PriceWithDirection<ItemPrice<T, I>>>",
                          "docs": []
                        },
                        {
                          "name": "deadline",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 35,
                      "docs": [
                        "The swap has been claimed."
                      ]
                    },
                    {
                      "name": "PreSignedAttributesSet",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "namespace",
                          "type": 120,
                          "typeName": "AttributeNamespace<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 36,
                      "docs": [
                        "New attributes have been set for an `item` of the `collection`."
                      ]
                    },
                    {
                      "name": "PalletAttributeSet",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 38,
                          "typeName": "Option<T::ItemId>",
                          "docs": []
                        },
                        {
                          "name": "attribute",
                          "type": 124,
                          "typeName": "PalletAttributes<T::CollectionId>",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 119,
                          "typeName": "BoundedVec<u8, T::ValueLimit>",
                          "docs": []
                        }
                      ],
                      "index": 37,
                      "docs": [
                        "A new attribute in the `Pallet` namespace was set for the `collection` or an `item`",
                        "within that `collection`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 119,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 120,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "AttributeNamespace"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Pallet",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "CollectionOwner",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "ItemOwner",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Account",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 121,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 122
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 122,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 122,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "PriceWithDirection"
              ],
              "params": [
                {
                  "name": "Amount",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Amount",
                      "docs": []
                    },
                    {
                      "name": "direction",
                      "type": 123,
                      "typeName": "PriceDirection",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 123,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "PriceDirection"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Send",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Receive",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 124,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "PalletAttributes"
              ],
              "params": [
                {
                  "name": "CollectionId",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "UsedToClaim",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "CollectionId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "TransferDisabled",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 125,
            "type": {
              "path": [
                "pallet_nft_fractionalization",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NftFractionalized",
                      "fields": [
                        {
                          "name": "nft_collection",
                          "type": 4,
                          "typeName": "T::NftCollectionId",
                          "docs": []
                        },
                        {
                          "name": "nft",
                          "type": 4,
                          "typeName": "T::NftId",
                          "docs": []
                        },
                        {
                          "name": "fractions",
                          "type": 6,
                          "typeName": "AssetBalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "asset",
                          "type": 4,
                          "typeName": "AssetIdOf<T>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An NFT was successfully fractionalized."
                      ]
                    },
                    {
                      "name": "NftUnified",
                      "fields": [
                        {
                          "name": "nft_collection",
                          "type": 4,
                          "typeName": "T::NftCollectionId",
                          "docs": []
                        },
                        {
                          "name": "nft",
                          "type": 4,
                          "typeName": "T::NftId",
                          "docs": []
                        },
                        {
                          "name": "asset",
                          "type": 4,
                          "typeName": "AssetIdOf<T>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An NFT was successfully returned back."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 126,
            "type": {
              "path": [
                "pallet_salary",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Inducted",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A member is inducted into the payroll."
                      ]
                    },
                    {
                      "name": "Registered",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A member registered for a payout."
                      ]
                    },
                    {
                      "name": "Paid",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "id",
                          "type": 32,
                          "typeName": "<T::Paymaster as Pay>::Id",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A payment happened."
                      ]
                    },
                    {
                      "name": "CycleStarted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "CycleIndexOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "The next cycle begins."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 127,
            "type": {
              "path": [
                "pallet_core_fellowship",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ParamsChanged",
                      "fields": [
                        {
                          "name": "params",
                          "type": 128,
                          "typeName": "ParamsOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Parameters for the pallet have changed."
                      ]
                    },
                    {
                      "name": "ActiveChanged",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "is_active",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Member activity flag has been set."
                      ]
                    },
                    {
                      "name": "Inducted",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Member has begun being tracked in this pallet."
                      ]
                    },
                    {
                      "name": "Offboarded",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Member has been removed from being tracked in this pallet (i.e. because rank is now",
                        "zero)."
                      ]
                    },
                    {
                      "name": "Promoted",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "to_rank",
                          "type": 102,
                          "typeName": "RankOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "Member has been promoted to the given rank."
                      ]
                    },
                    {
                      "name": "Demoted",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "to_rank",
                          "type": 102,
                          "typeName": "RankOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "Member has been demoted to the given (non-zero) rank."
                      ]
                    },
                    {
                      "name": "Proven",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "at_rank",
                          "type": 102,
                          "typeName": "RankOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "Member has been proven at their current rank, postponing auto-demotion."
                      ]
                    },
                    {
                      "name": "Requested",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "wish",
                          "type": 131,
                          "typeName": "Wish",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "Member has stated evidence of their efforts their request for rank."
                      ]
                    },
                    {
                      "name": "EvidenceJudged",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The member/candidate."
                          ]
                        },
                        {
                          "name": "wish",
                          "type": 131,
                          "typeName": "Wish",
                          "docs": [
                            "The desired outcome for which the evidence was presented."
                          ]
                        },
                        {
                          "name": "evidence",
                          "type": 132,
                          "typeName": "Evidence<T, I>",
                          "docs": [
                            "The evidence of efforts."
                          ]
                        },
                        {
                          "name": "old_rank",
                          "type": 102,
                          "typeName": "u16",
                          "docs": [
                            "The old rank, prior to this change."
                          ]
                        },
                        {
                          "name": "new_rank",
                          "type": 133,
                          "typeName": "Option<u16>",
                          "docs": [
                            "New rank. If `None` then candidate record was removed entirely."
                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "Some submitted evidence was judged and removed. There may or may not have been a change",
                        "to the rank, but in any case, `last_proof` is reset."
                      ]
                    },
                    {
                      "name": "Imported",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "rank",
                          "type": 102,
                          "typeName": "RankOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Pre-ranked account has been inducted at their current rank."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 128,
            "type": {
              "path": [
                "pallet_core_fellowship",
                "ParamsType"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "active_salary",
                      "type": 129,
                      "typeName": "[Balance; RANKS]",
                      "docs": []
                    },
                    {
                      "name": "passive_salary",
                      "type": 129,
                      "typeName": "[Balance; RANKS]",
                      "docs": []
                    },
                    {
                      "name": "demotion_period",
                      "type": 130,
                      "typeName": "[BlockNumber; RANKS]",
                      "docs": []
                    },
                    {
                      "name": "min_promotion_period",
                      "type": 130,
                      "typeName": "[BlockNumber; RANKS]",
                      "docs": []
                    },
                    {
                      "name": "offboard_timeout",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 129,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 9,
                  "type": 6
                }
              },
              "docs": []
            }
          },
          {
            "id": 130,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 9,
                  "type": 4
                }
              },
              "docs": []
            }
          },
          {
            "id": 131,
            "type": {
              "path": [
                "pallet_core_fellowship",
                "Wish"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Retention",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Promotion",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 132,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 133,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 102
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 102,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 134,
            "type": {
              "path": [
                "pallet_transaction_storage",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Stored",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Stored data under specified index."
                      ]
                    },
                    {
                      "name": "Renewed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Renewed data under specified index."
                      ]
                    },
                    {
                      "name": "ProofChecked",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Storage proof was successfully checked."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 135,
            "type": {
              "path": [
                "pallet_bags_list",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Rebagged",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "from",
                          "type": 11,
                          "typeName": "T::Score",
                          "docs": []
                        },
                        {
                          "name": "to",
                          "type": 11,
                          "typeName": "T::Score",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Moved an account from one bag to another."
                      ]
                    },
                    {
                      "name": "ScoreUpdated",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "new_score",
                          "type": 11,
                          "typeName": "T::Score",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Updated the score of some account to the given amount."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 136,
            "type": {
              "path": [
                "pallet_state_trie_migration",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Migrated",
                      "fields": [
                        {
                          "name": "top",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "child",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "compute",
                          "type": 137,
                          "typeName": "MigrationCompute",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Given number of `(top, child)` keys were migrated respectively, with the given",
                        "`compute`."
                      ]
                    },
                    {
                      "name": "Slashed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Some account got slashed by the given amount."
                      ]
                    },
                    {
                      "name": "AutoMigrationFinished",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The auto migration task finished."
                      ]
                    },
                    {
                      "name": "Halted",
                      "fields": [
                        {
                          "name": "error",
                          "type": 138,
                          "typeName": "Error<T>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Migration got halted due to an error or miss-configuration."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Inner events of this pallet."
              ]
            }
          },
          {
            "id": 137,
            "type": {
              "path": [
                "pallet_state_trie_migration",
                "pallet",
                "MigrationCompute"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Signed",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Auto",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 138,
            "type": {
              "path": [
                "pallet_state_trie_migration",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "MaxSignedLimits",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Max signed limits not respected."
                      ]
                    },
                    {
                      "name": "KeyTooLong",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "A key was longer than the configured maximum.",
                        "",
                        "This means that the migration halted at the current [`Progress`] and",
                        "can be resumed with a larger [`crate::Config::MaxKeyLen`] value.",
                        "Retrying with the same [`crate::Config::MaxKeyLen`] value will not work.",
                        "The value should only be increased to avoid a storage migration for the currently",
                        "stored [`crate::Progress::LastKey`]."
                      ]
                    },
                    {
                      "name": "NotEnoughFunds",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "submitter does not have enough funds."
                      ]
                    },
                    {
                      "name": "BadWitness",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Bad witness data provided."
                      ]
                    },
                    {
                      "name": "SignedMigrationNotAllowed",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Signed migration is not allowed because the maximum limit is not set yet."
                      ]
                    },
                    {
                      "name": "BadChildRoot",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Bad child root provided."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 139,
            "type": {
              "path": [
                "pallet_child_bounties",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Added",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "child_index",
                          "type": 4,
                          "typeName": "BountyIndex",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A child-bounty is added."
                      ]
                    },
                    {
                      "name": "Awarded",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "child_index",
                          "type": 4,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A child-bounty is awarded to a beneficiary."
                      ]
                    },
                    {
                      "name": "Claimed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "child_index",
                          "type": 4,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "payout",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A child-bounty is claimed by beneficiary."
                      ]
                    },
                    {
                      "name": "Canceled",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "child_index",
                          "type": 4,
                          "typeName": "BountyIndex",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A child-bounty is cancelled."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 140,
            "type": {
              "path": [
                "pallet_referenda",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Submitted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "track",
                          "type": 102,
                          "typeName": "TrackIdOf<T, I>",
                          "docs": [
                            "The track (and by extension proposal dispatch origin) of this referendum."
                          ]
                        },
                        {
                          "name": "proposal",
                          "type": 141,
                          "typeName": "BoundedCallOf<T, I>",
                          "docs": [
                            "The proposal for the referendum."
                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A referendum has been submitted."
                      ]
                    },
                    {
                      "name": "DecisionDepositPlaced",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account who placed the deposit."
                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [
                            "The amount placed by the account."
                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The decision deposit has been placed."
                      ]
                    },
                    {
                      "name": "DecisionDepositRefunded",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account who placed the deposit."
                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [
                            "The amount placed by the account."
                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "The decision deposit has been refunded."
                      ]
                    },
                    {
                      "name": "DepositSlashed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account who placed the deposit."
                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [
                            "The amount placed by the account."
                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A deposit has been slashed."
                      ]
                    },
                    {
                      "name": "DecisionStarted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "track",
                          "type": 102,
                          "typeName": "TrackIdOf<T, I>",
                          "docs": [
                            "The track (and by extension proposal dispatch origin) of this referendum."
                          ]
                        },
                        {
                          "name": "proposal",
                          "type": 141,
                          "typeName": "BoundedCallOf<T, I>",
                          "docs": [
                            "The proposal for the referendum."
                          ]
                        },
                        {
                          "name": "tally",
                          "type": 426,
                          "typeName": "T::Tally",
                          "docs": [
                            "The current tally of votes in this referendum."
                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A referendum has moved into the deciding phase."
                      ]
                    },
                    {
                      "name": "ConfirmStarted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "ConfirmAborted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "Confirmed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "tally",
                          "type": 426,
                          "typeName": "T::Tally",
                          "docs": [
                            "The final tally of votes in this referendum."
                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A referendum has ended its confirmation phase and is ready for approval."
                      ]
                    },
                    {
                      "name": "Approved",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "A referendum has been approved and its proposal has been scheduled."
                      ]
                    },
                    {
                      "name": "Rejected",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "tally",
                          "type": 426,
                          "typeName": "T::Tally",
                          "docs": [
                            "The final tally of votes in this referendum."
                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A proposal has been rejected by referendum."
                      ]
                    },
                    {
                      "name": "TimedOut",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "tally",
                          "type": 426,
                          "typeName": "T::Tally",
                          "docs": [
                            "The final tally of votes in this referendum."
                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "A referendum has been timed out without being decided."
                      ]
                    },
                    {
                      "name": "Cancelled",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "tally",
                          "type": 426,
                          "typeName": "T::Tally",
                          "docs": [
                            "The final tally of votes in this referendum."
                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A referendum has been cancelled."
                      ]
                    },
                    {
                      "name": "Killed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "tally",
                          "type": 426,
                          "typeName": "T::Tally",
                          "docs": [
                            "The final tally of votes in this referendum."
                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A referendum has been killed."
                      ]
                    },
                    {
                      "name": "SubmissionDepositRefunded",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account who placed the deposit."
                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [
                            "The amount placed by the account."
                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "The submission deposit has been refunded."
                      ]
                    },
                    {
                      "name": "MetadataSet",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [
                            "Preimage hash."
                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Metadata for a referendum has been set."
                      ]
                    },
                    {
                      "name": "MetadataCleared",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [
                            "Preimage hash."
                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Metadata for a referendum has been cleared."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 141,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "preimages",
                "Bounded"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 142
                },
                {
                  "name": "H",
                  "type": 425
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Legacy",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "H::Output",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Inline",
                      "fields": [
                        {
                          "name": null,
                          "type": 114,
                          "typeName": "BoundedInline",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Lookup",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "H::Output",
                          "docs": []
                        },
                        {
                          "name": "len",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 142,
            "type": {
              "path": [
                "kitchensink_runtime",
                "RuntimeCall"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "System",
                      "fields": [
                        {
                          "name": null,
                          "type": 143,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Utility",
                      "fields": [
                        {
                          "name": null,
                          "type": 147,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Utility, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Babe",
                      "fields": [
                        {
                          "name": null,
                          "type": 155,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Babe, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Timestamp",
                      "fields": [
                        {
                          "name": null,
                          "type": 165,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Indices",
                      "fields": [
                        {
                          "name": null,
                          "type": 166,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Indices, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Balances",
                      "fields": [
                        {
                          "name": null,
                          "type": 169,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "ElectionProviderMultiPhase",
                      "fields": [
                        {
                          "name": null,
                          "type": 170,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ElectionProviderMultiPhase, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": []
                    },
                    {
                      "name": "Staking",
                      "fields": [
                        {
                          "name": null,
                          "type": 228,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Staking, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": []
                    },
                    {
                      "name": "Session",
                      "fields": [
                        {
                          "name": null,
                          "type": 235,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Session, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": []
                    },
                    {
                      "name": "Democracy",
                      "fields": [
                        {
                          "name": null,
                          "type": 239,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Democracy, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": []
                    },
                    {
                      "name": "Council",
                      "fields": [
                        {
                          "name": null,
                          "type": 242,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Council, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": []
                    },
                    {
                      "name": "TechnicalCommittee",
                      "fields": [
                        {
                          "name": null,
                          "type": 243,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TechnicalCommittee, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": []
                    },
                    {
                      "name": "Elections",
                      "fields": [
                        {
                          "name": null,
                          "type": 244,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Elections, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": []
                    },
                    {
                      "name": "TechnicalMembership",
                      "fields": [
                        {
                          "name": null,
                          "type": 246,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TechnicalMembership, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": []
                    },
                    {
                      "name": "Grandpa",
                      "fields": [
                        {
                          "name": null,
                          "type": 247,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Grandpa, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": []
                    },
                    {
                      "name": "Treasury",
                      "fields": [
                        {
                          "name": null,
                          "type": 259,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Treasury, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": []
                    },
                    {
                      "name": "AssetRate",
                      "fields": [
                        {
                          "name": null,
                          "type": 260,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<AssetRate, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": []
                    },
                    {
                      "name": "Contracts",
                      "fields": [
                        {
                          "name": null,
                          "type": 261,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Contracts, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": []
                    },
                    {
                      "name": "Sudo",
                      "fields": [
                        {
                          "name": null,
                          "type": 264,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Sudo, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": []
                    },
                    {
                      "name": "ImOnline",
                      "fields": [
                        {
                          "name": null,
                          "type": 265,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ImOnline, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": []
                    },
                    {
                      "name": "Identity",
                      "fields": [
                        {
                          "name": null,
                          "type": 269,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Identity, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 28,
                      "docs": []
                    },
                    {
                      "name": "Society",
                      "fields": [
                        {
                          "name": null,
                          "type": 308,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Society, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 29,
                      "docs": []
                    },
                    {
                      "name": "Recovery",
                      "fields": [
                        {
                          "name": null,
                          "type": 309,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Recovery, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 30,
                      "docs": []
                    },
                    {
                      "name": "Vesting",
                      "fields": [
                        {
                          "name": null,
                          "type": 310,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Vesting, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 31,
                      "docs": []
                    },
                    {
                      "name": "Scheduler",
                      "fields": [
                        {
                          "name": null,
                          "type": 312,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Scheduler, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 32,
                      "docs": []
                    },
                    {
                      "name": "Glutton",
                      "fields": [
                        {
                          "name": null,
                          "type": 314,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Glutton, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 33,
                      "docs": []
                    },
                    {
                      "name": "Preimage",
                      "fields": [
                        {
                          "name": null,
                          "type": 315,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Preimage, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 34,
                      "docs": []
                    },
                    {
                      "name": "Proxy",
                      "fields": [
                        {
                          "name": null,
                          "type": 317,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Proxy, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 35,
                      "docs": []
                    },
                    {
                      "name": "Multisig",
                      "fields": [
                        {
                          "name": null,
                          "type": 319,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Multisig, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 36,
                      "docs": []
                    },
                    {
                      "name": "Bounties",
                      "fields": [
                        {
                          "name": null,
                          "type": 321,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Bounties, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 37,
                      "docs": []
                    },
                    {
                      "name": "Tips",
                      "fields": [
                        {
                          "name": null,
                          "type": 322,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Tips, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 38,
                      "docs": []
                    },
                    {
                      "name": "Assets",
                      "fields": [
                        {
                          "name": null,
                          "type": 323,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Assets, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 39,
                      "docs": []
                    },
                    {
                      "name": "PoolAssets",
                      "fields": [
                        {
                          "name": null,
                          "type": 324,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PoolAssets, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 40,
                      "docs": []
                    },
                    {
                      "name": "Lottery",
                      "fields": [
                        {
                          "name": null,
                          "type": 325,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Lottery, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 42,
                      "docs": []
                    },
                    {
                      "name": "Nis",
                      "fields": [
                        {
                          "name": null,
                          "type": 326,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Nis, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 43,
                      "docs": []
                    },
                    {
                      "name": "Uniques",
                      "fields": [
                        {
                          "name": null,
                          "type": 328,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Uniques, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 44,
                      "docs": []
                    },
                    {
                      "name": "Nfts",
                      "fields": [
                        {
                          "name": null,
                          "type": 332,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Nfts, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 45,
                      "docs": []
                    },
                    {
                      "name": "NftFractionalization",
                      "fields": [
                        {
                          "name": null,
                          "type": 353,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<NftFractionalization, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 46,
                      "docs": []
                    },
                    {
                      "name": "Salary",
                      "fields": [
                        {
                          "name": null,
                          "type": 354,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Salary, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 47,
                      "docs": []
                    },
                    {
                      "name": "CoreFellowship",
                      "fields": [
                        {
                          "name": null,
                          "type": 355,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<CoreFellowship, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 48,
                      "docs": []
                    },
                    {
                      "name": "TransactionStorage",
                      "fields": [
                        {
                          "name": null,
                          "type": 356,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TransactionStorage, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 49,
                      "docs": []
                    },
                    {
                      "name": "VoterList",
                      "fields": [
                        {
                          "name": null,
                          "type": 358,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<VoterList, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 50,
                      "docs": []
                    },
                    {
                      "name": "StateTrieMigration",
                      "fields": [
                        {
                          "name": null,
                          "type": 359,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<StateTrieMigration, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 51,
                      "docs": []
                    },
                    {
                      "name": "ChildBounties",
                      "fields": [
                        {
                          "name": null,
                          "type": 365,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ChildBounties, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 52,
                      "docs": []
                    },
                    {
                      "name": "Referenda",
                      "fields": [
                        {
                          "name": null,
                          "type": 366,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Referenda, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 53,
                      "docs": []
                    },
                    {
                      "name": "Remark",
                      "fields": [
                        {
                          "name": null,
                          "type": 368,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Remark, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 54,
                      "docs": []
                    },
                    {
                      "name": "RootTesting",
                      "fields": [
                        {
                          "name": null,
                          "type": 369,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<RootTesting, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 55,
                      "docs": []
                    },
                    {
                      "name": "ConvictionVoting",
                      "fields": [
                        {
                          "name": null,
                          "type": 370,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ConvictionVoting, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 56,
                      "docs": []
                    },
                    {
                      "name": "Whitelist",
                      "fields": [
                        {
                          "name": null,
                          "type": 374,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Whitelist, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 57,
                      "docs": []
                    },
                    {
                      "name": "AllianceMotion",
                      "fields": [
                        {
                          "name": null,
                          "type": 375,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<AllianceMotion, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 58,
                      "docs": []
                    },
                    {
                      "name": "Alliance",
                      "fields": [
                        {
                          "name": null,
                          "type": 376,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Alliance, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 59,
                      "docs": []
                    },
                    {
                      "name": "NominationPools",
                      "fields": [
                        {
                          "name": null,
                          "type": 385,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<NominationPools, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 60,
                      "docs": []
                    },
                    {
                      "name": "RankedPolls",
                      "fields": [
                        {
                          "name": null,
                          "type": 398,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<RankedPolls, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 61,
                      "docs": []
                    },
                    {
                      "name": "RankedCollective",
                      "fields": [
                        {
                          "name": null,
                          "type": 399,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<RankedCollective, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 62,
                      "docs": []
                    },
                    {
                      "name": "AssetConversion",
                      "fields": [
                        {
                          "name": null,
                          "type": 400,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<AssetConversion, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 63,
                      "docs": []
                    },
                    {
                      "name": "FastUnstake",
                      "fields": [
                        {
                          "name": null,
                          "type": 404,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<FastUnstake, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 64,
                      "docs": []
                    },
                    {
                      "name": "MessageQueue",
                      "fields": [
                        {
                          "name": null,
                          "type": 405,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<MessageQueue, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 65,
                      "docs": []
                    },
                    {
                      "name": "Pov",
                      "fields": [
                        {
                          "name": null,
                          "type": 406,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Pov, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 66,
                      "docs": []
                    },
                    {
                      "name": "TxPause",
                      "fields": [
                        {
                          "name": null,
                          "type": 407,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TxPause, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 67,
                      "docs": []
                    },
                    {
                      "name": "SafeMode",
                      "fields": [
                        {
                          "name": null,
                          "type": 409,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<SafeMode, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 68,
                      "docs": []
                    },
                    {
                      "name": "Broker",
                      "fields": [
                        {
                          "name": null,
                          "type": 410,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Broker, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 70,
                      "docs": []
                    },
                    {
                      "name": "Mixnet",
                      "fields": [
                        {
                          "name": null,
                          "type": 419,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Mixnet, Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 71,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 143,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "remark",
                      "fields": [
                        {
                          "name": "remark",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::remark`]."
                      ]
                    },
                    {
                      "name": "set_heap_pages",
                      "fields": [
                        {
                          "name": "pages",
                          "type": 11,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_heap_pages`]."
                      ]
                    },
                    {
                      "name": "set_code",
                      "fields": [
                        {
                          "name": "code",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_code`]."
                      ]
                    },
                    {
                      "name": "set_code_without_checks",
                      "fields": [
                        {
                          "name": "code",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::set_code_without_checks`]."
                      ]
                    },
                    {
                      "name": "set_storage",
                      "fields": [
                        {
                          "name": "items",
                          "type": 144,
                          "typeName": "Vec<KeyValue>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::set_storage`]."
                      ]
                    },
                    {
                      "name": "kill_storage",
                      "fields": [
                        {
                          "name": "keys",
                          "type": 146,
                          "typeName": "Vec<Key>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::kill_storage`]."
                      ]
                    },
                    {
                      "name": "kill_prefix",
                      "fields": [
                        {
                          "name": "prefix",
                          "type": 13,
                          "typeName": "Key",
                          "docs": []
                        },
                        {
                          "name": "subkeys",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::kill_prefix`]."
                      ]
                    },
                    {
                      "name": "remark_with_event",
                      "fields": [
                        {
                          "name": "remark",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::remark_with_event`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 144,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 145
                }
              },
              "docs": []
            }
          },
          {
            "id": 145,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  13,
                  13
                ]
              },
              "docs": []
            }
          },
          {
            "id": 146,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 13
                }
              },
              "docs": []
            }
          },
          {
            "id": 147,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "batch",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 148,
                          "typeName": "Vec<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::batch`]."
                      ]
                    },
                    {
                      "name": "as_derivative",
                      "fields": [
                        {
                          "name": "index",
                          "type": 102,
                          "typeName": "u16",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 142,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::as_derivative`]."
                      ]
                    },
                    {
                      "name": "batch_all",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 148,
                          "typeName": "Vec<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::batch_all`]."
                      ]
                    },
                    {
                      "name": "dispatch_as",
                      "fields": [
                        {
                          "name": "as_origin",
                          "type": 149,
                          "typeName": "Box<T::PalletsOrigin>",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 142,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::dispatch_as`]."
                      ]
                    },
                    {
                      "name": "force_batch",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 148,
                          "typeName": "Vec<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::force_batch`]."
                      ]
                    },
                    {
                      "name": "with_weight",
                      "fields": [
                        {
                          "name": "call",
                          "type": 142,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        },
                        {
                          "name": "weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::with_weight`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 148,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 142
                }
              },
              "docs": []
            }
          },
          {
            "id": 149,
            "type": {
              "path": [
                "kitchensink_runtime",
                "OriginCaller"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "system",
                      "fields": [
                        {
                          "name": null,
                          "type": 150,
                          "typeName": "frame_system::Origin<Runtime>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Council",
                      "fields": [
                        {
                          "name": null,
                          "type": 151,
                          "typeName": "pallet_collective::Origin<Runtime, pallet_collective::Instance1>",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": []
                    },
                    {
                      "name": "TechnicalCommittee",
                      "fields": [
                        {
                          "name": null,
                          "type": 152,
                          "typeName": "pallet_collective::Origin<Runtime, pallet_collective::Instance2>",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": []
                    },
                    {
                      "name": "AllianceMotion",
                      "fields": [
                        {
                          "name": null,
                          "type": 153,
                          "typeName": "pallet_collective::Origin<Runtime, pallet_collective::Instance3>",
                          "docs": []
                        }
                      ],
                      "index": 58,
                      "docs": []
                    },
                    {
                      "name": "Void",
                      "fields": [
                        {
                          "name": null,
                          "type": 154,
                          "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::\n__private::Void",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 150,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "RawOrigin"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Root",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Signed",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "None",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 151,
            "type": {
              "path": [
                "pallet_collective",
                "RawOrigin"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Members",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Member",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "_Phantom",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 152,
            "type": {
              "path": [
                "pallet_collective",
                "RawOrigin"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Members",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Member",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "_Phantom",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 153,
            "type": {
              "path": [
                "pallet_collective",
                "RawOrigin"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Members",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Member",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "_Phantom",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 154,
            "type": {
              "path": [
                "sp_core",
                "Void"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 155,
            "type": {
              "path": [
                "pallet_babe",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "report_equivocation",
                      "fields": [
                        {
                          "name": "equivocation_proof",
                          "type": 156,
                          "typeName": "Box<EquivocationProof<HeaderFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "key_owner_proof",
                          "type": 161,
                          "typeName": "T::KeyOwnerProof",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::report_equivocation`]."
                      ]
                    },
                    {
                      "name": "report_equivocation_unsigned",
                      "fields": [
                        {
                          "name": "equivocation_proof",
                          "type": 156,
                          "typeName": "Box<EquivocationProof<HeaderFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "key_owner_proof",
                          "type": 161,
                          "typeName": "T::KeyOwnerProof",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::report_equivocation_unsigned`]."
                      ]
                    },
                    {
                      "name": "plan_config_change",
                      "fields": [
                        {
                          "name": "config",
                          "type": 162,
                          "typeName": "NextConfigDescriptor",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::plan_config_change`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 156,
            "type": {
              "path": [
                "sp_consensus_slots",
                "EquivocationProof"
              ],
              "params": [
                {
                  "name": "Header",
                  "type": 157
                },
                {
                  "name": "Id",
                  "type": 159
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "offender",
                      "type": 159,
                      "typeName": "Id",
                      "docs": []
                    },
                    {
                      "name": "slot",
                      "type": 160,
                      "typeName": "Slot",
                      "docs": []
                    },
                    {
                      "name": "first_header",
                      "type": 157,
                      "typeName": "Header",
                      "docs": []
                    },
                    {
                      "name": "second_header",
                      "type": 157,
                      "typeName": "Header",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 157,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "header",
                "Header"
              ],
              "params": [
                {
                  "name": "Number",
                  "type": 4
                },
                {
                  "name": "Hash",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parent_hash",
                      "type": 12,
                      "typeName": "Hash::Output",
                      "docs": []
                    },
                    {
                      "name": "number",
                      "type": 158,
                      "typeName": "Number",
                      "docs": []
                    },
                    {
                      "name": "state_root",
                      "type": 12,
                      "typeName": "Hash::Output",
                      "docs": []
                    },
                    {
                      "name": "extrinsics_root",
                      "type": 12,
                      "typeName": "Hash::Output",
                      "docs": []
                    },
                    {
                      "name": "digest",
                      "type": 14,
                      "typeName": "Digest",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 158,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "compact": {
                  "type": 4
                }
              },
              "docs": []
            }
          },
          {
            "id": 159,
            "type": {
              "path": [
                "sp_consensus_babe",
                "app",
                "Public"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 79,
                      "typeName": "sr25519::Public",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 160,
            "type": {
              "path": [
                "sp_consensus_slots",
                "Slot"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 11,
                      "typeName": "u64",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 161,
            "type": {
              "path": [
                "sp_session",
                "MembershipProof"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "session",
                      "type": 4,
                      "typeName": "SessionIndex",
                      "docs": []
                    },
                    {
                      "name": "trie_nodes",
                      "type": 146,
                      "typeName": "Vec<Vec<u8>>",
                      "docs": []
                    },
                    {
                      "name": "validator_count",
                      "type": 4,
                      "typeName": "ValidatorCount",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 162,
            "type": {
              "path": [
                "sp_consensus_babe",
                "digests",
                "NextConfigDescriptor"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V1",
                      "fields": [
                        {
                          "name": "c",
                          "type": 163,
                          "typeName": "(u64, u64)",
                          "docs": []
                        },
                        {
                          "name": "allowed_slots",
                          "type": 164,
                          "typeName": "AllowedSlots",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 163,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  11,
                  11
                ]
              },
              "docs": []
            }
          },
          {
            "id": 164,
            "type": {
              "path": [
                "sp_consensus_babe",
                "AllowedSlots"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PrimarySlots",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "PrimaryAndSecondaryPlainSlots",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "PrimaryAndSecondaryVRFSlots",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 165,
            "type": {
              "path": [
                "pallet_timestamp",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set",
                      "fields": [
                        {
                          "name": "now",
                          "type": 10,
                          "typeName": "T::Moment",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 166,
            "type": {
              "path": [
                "pallet_indices",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "claim",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "T::AccountIndex",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::claim`]."
                      ]
                    },
                    {
                      "name": "transfer",
                      "fields": [
                        {
                          "name": "new",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "T::AccountIndex",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::transfer`]."
                      ]
                    },
                    {
                      "name": "free",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "T::AccountIndex",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::free`]."
                      ]
                    },
                    {
                      "name": "force_transfer",
                      "fields": [
                        {
                          "name": "new",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "T::AccountIndex",
                          "docs": []
                        },
                        {
                          "name": "freeze",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::force_transfer`]."
                      ]
                    },
                    {
                      "name": "freeze",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "T::AccountIndex",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::freeze`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 167,
            "type": {
              "path": [
                "sp_runtime",
                "multiaddress",
                "MultiAddress"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "AccountIndex",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Id",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Index",
                      "fields": [
                        {
                          "name": null,
                          "type": 158,
                          "typeName": "AccountIndex",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Raw",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Address32",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Address20",
                      "fields": [
                        {
                          "name": null,
                          "type": 168,
                          "typeName": "[u8; 20]",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 168,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 20,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 169,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "transfer_allow_death",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::transfer_allow_death`]."
                      ]
                    },
                    {
                      "name": "force_transfer",
                      "fields": [
                        {
                          "name": "source",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::force_transfer`]."
                      ]
                    },
                    {
                      "name": "transfer_keep_alive",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::transfer_keep_alive`]."
                      ]
                    },
                    {
                      "name": "transfer_all",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "keep_alive",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::transfer_all`]."
                      ]
                    },
                    {
                      "name": "force_unreserve",
                      "fields": [
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::force_unreserve`]."
                      ]
                    },
                    {
                      "name": "upgrade_accounts",
                      "fields": [
                        {
                          "name": "who",
                          "type": 90,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::upgrade_accounts`]."
                      ]
                    },
                    {
                      "name": "force_set_balance",
                      "fields": [
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "new_free",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::force_set_balance`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 170,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "submit_unsigned",
                      "fields": [
                        {
                          "name": "raw_solution",
                          "type": 171,
                          "typeName": "Box<RawSolution<SolutionOf<T::MinerConfig>>>",
                          "docs": []
                        },
                        {
                          "name": "witness",
                          "type": 223,
                          "typeName": "SolutionOrSnapshotSize",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::submit_unsigned`]."
                      ]
                    },
                    {
                      "name": "set_minimum_untrusted_score",
                      "fields": [
                        {
                          "name": "maybe_next_score",
                          "type": 224,
                          "typeName": "Option<ElectionScore>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_minimum_untrusted_score`]."
                      ]
                    },
                    {
                      "name": "set_emergency_election_result",
                      "fields": [
                        {
                          "name": "supports",
                          "type": 225,
                          "typeName": "Supports<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_emergency_election_result`]."
                      ]
                    },
                    {
                      "name": "submit",
                      "fields": [
                        {
                          "name": "raw_solution",
                          "type": 171,
                          "typeName": "Box<RawSolution<SolutionOf<T::MinerConfig>>>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::submit`]."
                      ]
                    },
                    {
                      "name": "governance_fallback",
                      "fields": [
                        {
                          "name": "maybe_max_voters",
                          "type": 38,
                          "typeName": "Option<u32>",
                          "docs": []
                        },
                        {
                          "name": "maybe_max_targets",
                          "type": 38,
                          "typeName": "Option<u32>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::governance_fallback`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 171,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "RawSolution"
              ],
              "params": [
                {
                  "name": "S",
                  "type": 172
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "solution",
                      "type": 172,
                      "typeName": "S",
                      "docs": []
                    },
                    {
                      "name": "score",
                      "type": 44,
                      "typeName": "ElectionScore",
                      "docs": []
                    },
                    {
                      "name": "round",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 172,
            "type": {
              "path": [
                "kitchensink_runtime",
                "NposSolution16"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "votes1",
                      "type": 173,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes2",
                      "type": 176,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes3",
                      "type": 181,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes4",
                      "type": 184,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes5",
                      "type": 187,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes6",
                      "type": 190,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes7",
                      "type": 193,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes8",
                      "type": 196,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes9",
                      "type": 199,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes10",
                      "type": 202,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes11",
                      "type": 205,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes12",
                      "type": 208,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes13",
                      "type": 211,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes14",
                      "type": 214,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes15",
                      "type": 217,
                      "typeName": null,
                      "docs": []
                    },
                    {
                      "name": "votes16",
                      "type": 220,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 173,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 174
                }
              },
              "docs": []
            }
          },
          {
            "id": 174,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  158,
                  175
                ]
              },
              "docs": []
            }
          },
          {
            "id": 175,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "compact": {
                  "type": 102
                }
              },
              "docs": []
            }
          },
          {
            "id": 176,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 177
                }
              },
              "docs": []
            }
          },
          {
            "id": 177,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  158,
                  178,
                  175
                ]
              },
              "docs": []
            }
          },
          {
            "id": 178,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  175,
                  179
                ]
              },
              "docs": []
            }
          },
          {
            "id": 179,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "compact": {
                  "type": 180
                }
              },
              "docs": []
            }
          },
          {
            "id": 180,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "PerU16"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 102,
                      "typeName": "u16",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 181,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 182
                }
              },
              "docs": []
            }
          },
          {
            "id": 182,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  158,
                  183,
                  175
                ]
              },
              "docs": []
            }
          },
          {
            "id": 183,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 2,
                  "type": 178
                }
              },
              "docs": []
            }
          },
          {
            "id": 184,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 185
                }
              },
              "docs": []
            }
          },
          {
            "id": 185,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  158,
                  186,
                  175
                ]
              },
              "docs": []
            }
          },
          {
            "id": 186,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 3,
                  "type": 178
                }
              },
              "docs": []
            }
          },
          {
            "id": 187,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 188
                }
              },
              "docs": []
            }
          },
          {
            "id": 188,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  158,
                  189,
                  175
                ]
              },
              "docs": []
            }
          },
          {
            "id": 189,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 4,
                  "type": 178
                }
              },
              "docs": []
            }
          },
          {
            "id": 190,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 191
                }
              },
              "docs": []
            }
          },
          {
            "id": 191,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  158,
                  192,
                  175
                ]
              },
              "docs": []
            }
          },
          {
            "id": 192,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 5,
                  "type": 178
                }
              },
              "docs": []
            }
          },
          {
            "id": 193,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 194
                }
              },
              "docs": []
            }
          },
          {
            "id": 194,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  158,
                  195,
                  175
                ]
              },
              "docs": []
            }
          },
          {
            "id": 195,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 6,
                  "type": 178
                }
              },
              "docs": []
            }
          },
          {
            "id": 196,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 197
                }
              },
              "docs": []
            }
          },
          {
            "id": 197,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  158,
                  198,
                  175
                ]
              },
              "docs": []
            }
          },
          {
            "id": 198,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 7,
                  "type": 178
                }
              },
              "docs": []
            }
          },
          {
            "id": 199,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 200
                }
              },
              "docs": []
            }
          },
          {
            "id": 200,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  158,
                  201,
                  175
                ]
              },
              "docs": []
            }
          },
          {
            "id": 201,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 8,
                  "type": 178
                }
              },
              "docs": []
            }
          },
          {
            "id": 202,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 203
                }
              },
              "docs": []
            }
          },
          {
            "id": 203,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  158,
                  204,
                  175
                ]
              },
              "docs": []
            }
          },
          {
            "id": 204,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 9,
                  "type": 178
                }
              },
              "docs": []
            }
          },
          {
            "id": 205,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 206
                }
              },
              "docs": []
            }
          },
          {
            "id": 206,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  158,
                  207,
                  175
                ]
              },
              "docs": []
            }
          },
          {
            "id": 207,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 10,
                  "type": 178
                }
              },
              "docs": []
            }
          },
          {
            "id": 208,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 209
                }
              },
              "docs": []
            }
          },
          {
            "id": 209,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  158,
                  210,
                  175
                ]
              },
              "docs": []
            }
          },
          {
            "id": 210,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 11,
                  "type": 178
                }
              },
              "docs": []
            }
          },
          {
            "id": 211,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 212
                }
              },
              "docs": []
            }
          },
          {
            "id": 212,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  158,
                  213,
                  175
                ]
              },
              "docs": []
            }
          },
          {
            "id": 213,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 12,
                  "type": 178
                }
              },
              "docs": []
            }
          },
          {
            "id": 214,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 215
                }
              },
              "docs": []
            }
          },
          {
            "id": 215,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  158,
                  216,
                  175
                ]
              },
              "docs": []
            }
          },
          {
            "id": 216,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 13,
                  "type": 178
                }
              },
              "docs": []
            }
          },
          {
            "id": 217,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 218
                }
              },
              "docs": []
            }
          },
          {
            "id": 218,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  158,
                  219,
                  175
                ]
              },
              "docs": []
            }
          },
          {
            "id": 219,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 14,
                  "type": 178
                }
              },
              "docs": []
            }
          },
          {
            "id": 220,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 221
                }
              },
              "docs": []
            }
          },
          {
            "id": 221,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  158,
                  222,
                  175
                ]
              },
              "docs": []
            }
          },
          {
            "id": 222,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 15,
                  "type": 178
                }
              },
              "docs": []
            }
          },
          {
            "id": 223,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "SolutionOrSnapshotSize"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "voters",
                      "type": 158,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "targets",
                      "type": 158,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 224,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 44
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 44,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 225,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 226
                }
              },
              "docs": []
            }
          },
          {
            "id": 226,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  227
                ]
              },
              "docs": []
            }
          },
          {
            "id": 227,
            "type": {
              "path": [
                "sp_npos_elections",
                "Support"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "total",
                      "type": 6,
                      "typeName": "ExtendedBalance",
                      "docs": []
                    },
                    {
                      "name": "voters",
                      "type": 62,
                      "typeName": "Vec<(AccountId, ExtendedBalance)>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 228,
            "type": {
              "path": [
                "pallet_staking",
                "pallet",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "bond",
                      "fields": [
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "payee",
                          "type": 48,
                          "typeName": "RewardDestination<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::bond`]."
                      ]
                    },
                    {
                      "name": "bond_extra",
                      "fields": [
                        {
                          "name": "max_additional",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::bond_extra`]."
                      ]
                    },
                    {
                      "name": "unbond",
                      "fields": [
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::unbond`]."
                      ]
                    },
                    {
                      "name": "withdraw_unbonded",
                      "fields": [
                        {
                          "name": "num_slashing_spans",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::withdraw_unbonded`]."
                      ]
                    },
                    {
                      "name": "validate",
                      "fields": [
                        {
                          "name": "prefs",
                          "type": 50,
                          "typeName": "ValidatorPrefs",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::validate`]."
                      ]
                    },
                    {
                      "name": "nominate",
                      "fields": [
                        {
                          "name": "targets",
                          "type": 229,
                          "typeName": "Vec<AccountIdLookupOf<T>>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::nominate`]."
                      ]
                    },
                    {
                      "name": "chill",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::chill`]."
                      ]
                    },
                    {
                      "name": "set_payee",
                      "fields": [
                        {
                          "name": "payee",
                          "type": 48,
                          "typeName": "RewardDestination<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::set_payee`]."
                      ]
                    },
                    {
                      "name": "set_controller",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::set_controller`]."
                      ]
                    },
                    {
                      "name": "set_validator_count",
                      "fields": [
                        {
                          "name": "new",
                          "type": 158,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::set_validator_count`]."
                      ]
                    },
                    {
                      "name": "increase_validator_count",
                      "fields": [
                        {
                          "name": "additional",
                          "type": 158,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::increase_validator_count`]."
                      ]
                    },
                    {
                      "name": "scale_validator_count",
                      "fields": [
                        {
                          "name": "factor",
                          "type": 230,
                          "typeName": "Percent",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::scale_validator_count`]."
                      ]
                    },
                    {
                      "name": "force_no_eras",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::force_no_eras`]."
                      ]
                    },
                    {
                      "name": "force_new_era",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::force_new_era`]."
                      ]
                    },
                    {
                      "name": "set_invulnerables",
                      "fields": [
                        {
                          "name": "invulnerables",
                          "type": 90,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::set_invulnerables`]."
                      ]
                    },
                    {
                      "name": "force_unstake",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "num_slashing_spans",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::force_unstake`]."
                      ]
                    },
                    {
                      "name": "force_new_era_always",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::force_new_era_always`]."
                      ]
                    },
                    {
                      "name": "cancel_deferred_slash",
                      "fields": [
                        {
                          "name": "era",
                          "type": 4,
                          "typeName": "EraIndex",
                          "docs": []
                        },
                        {
                          "name": "slash_indices",
                          "type": 115,
                          "typeName": "Vec<u32>",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "See [`Pallet::cancel_deferred_slash`]."
                      ]
                    },
                    {
                      "name": "payout_stakers",
                      "fields": [
                        {
                          "name": "validator_stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "era",
                          "type": 4,
                          "typeName": "EraIndex",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "See [`Pallet::payout_stakers`]."
                      ]
                    },
                    {
                      "name": "rebond",
                      "fields": [
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "See [`Pallet::rebond`]."
                      ]
                    },
                    {
                      "name": "reap_stash",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "num_slashing_spans",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "See [`Pallet::reap_stash`]."
                      ]
                    },
                    {
                      "name": "kick",
                      "fields": [
                        {
                          "name": "who",
                          "type": 229,
                          "typeName": "Vec<AccountIdLookupOf<T>>",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "See [`Pallet::kick`]."
                      ]
                    },
                    {
                      "name": "set_staking_configs",
                      "fields": [
                        {
                          "name": "min_nominator_bond",
                          "type": 231,
                          "typeName": "ConfigOp<BalanceOf<T>>",
                          "docs": []
                        },
                        {
                          "name": "min_validator_bond",
                          "type": 231,
                          "typeName": "ConfigOp<BalanceOf<T>>",
                          "docs": []
                        },
                        {
                          "name": "max_nominator_count",
                          "type": 232,
                          "typeName": "ConfigOp<u32>",
                          "docs": []
                        },
                        {
                          "name": "max_validator_count",
                          "type": 232,
                          "typeName": "ConfigOp<u32>",
                          "docs": []
                        },
                        {
                          "name": "chill_threshold",
                          "type": 233,
                          "typeName": "ConfigOp<Percent>",
                          "docs": []
                        },
                        {
                          "name": "min_commission",
                          "type": 234,
                          "typeName": "ConfigOp<Perbill>",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "See [`Pallet::set_staking_configs`]."
                      ]
                    },
                    {
                      "name": "chill_other",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": [
                        "See [`Pallet::chill_other`]."
                      ]
                    },
                    {
                      "name": "force_apply_min_commission",
                      "fields": [
                        {
                          "name": "validator_stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 24,
                      "docs": [
                        "See [`Pallet::force_apply_min_commission`]."
                      ]
                    },
                    {
                      "name": "set_min_commission",
                      "fields": [
                        {
                          "name": "new",
                          "type": 49,
                          "typeName": "Perbill",
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": [
                        "See [`Pallet::set_min_commission`]."
                      ]
                    },
                    {
                      "name": "payout_stakers_by_page",
                      "fields": [
                        {
                          "name": "validator_stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "era",
                          "type": 4,
                          "typeName": "EraIndex",
                          "docs": []
                        },
                        {
                          "name": "page",
                          "type": 4,
                          "typeName": "Page",
                          "docs": []
                        }
                      ],
                      "index": 26,
                      "docs": [
                        "See [`Pallet::payout_stakers_by_page`]."
                      ]
                    },
                    {
                      "name": "update_payee",
                      "fields": [
                        {
                          "name": "controller",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 27,
                      "docs": [
                        "See [`Pallet::update_payee`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 229,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 167
                }
              },
              "docs": []
            }
          },
          {
            "id": 230,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Percent"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 2,
                      "typeName": "u8",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 231,
            "type": {
              "path": [
                "pallet_staking",
                "pallet",
                "pallet",
                "ConfigOp"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noop",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Set",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "T",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Remove",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 232,
            "type": {
              "path": [
                "pallet_staking",
                "pallet",
                "pallet",
                "ConfigOp"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noop",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Set",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "T",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Remove",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 233,
            "type": {
              "path": [
                "pallet_staking",
                "pallet",
                "pallet",
                "ConfigOp"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 230
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noop",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Set",
                      "fields": [
                        {
                          "name": null,
                          "type": 230,
                          "typeName": "T",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Remove",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 234,
            "type": {
              "path": [
                "pallet_staking",
                "pallet",
                "pallet",
                "ConfigOp"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 49
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noop",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Set",
                      "fields": [
                        {
                          "name": null,
                          "type": 49,
                          "typeName": "T",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Remove",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 235,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_keys",
                      "fields": [
                        {
                          "name": "keys",
                          "type": 236,
                          "typeName": "T::Keys",
                          "docs": []
                        },
                        {
                          "name": "proof",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_keys`]."
                      ]
                    },
                    {
                      "name": "purge_keys",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::purge_keys`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 236,
            "type": {
              "path": [
                "kitchensink_runtime",
                "SessionKeys"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "grandpa",
                      "type": 68,
                      "typeName": "<Grandpa as $crate::BoundToRuntimeAppPublic>::Public",
                      "docs": []
                    },
                    {
                      "name": "babe",
                      "type": 159,
                      "typeName": "<Babe as $crate::BoundToRuntimeAppPublic>::Public",
                      "docs": []
                    },
                    {
                      "name": "im_online",
                      "type": 78,
                      "typeName": "<ImOnline as $crate::BoundToRuntimeAppPublic>::Public",
                      "docs": []
                    },
                    {
                      "name": "authority_discovery",
                      "type": 237,
                      "typeName": "<AuthorityDiscovery as $crate::BoundToRuntimeAppPublic>::Public",
                      "docs": []
                    },
                    {
                      "name": "mixnet",
                      "type": 238,
                      "typeName": "<Mixnet as $crate::BoundToRuntimeAppPublic>::Public",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 237,
            "type": {
              "path": [
                "sp_authority_discovery",
                "app",
                "Public"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 79,
                      "typeName": "sr25519::Public",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 238,
            "type": {
              "path": [
                "sp_mixnet",
                "types",
                "app",
                "Public"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 79,
                      "typeName": "sr25519::Public",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 239,
            "type": {
              "path": [
                "pallet_democracy",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "propose",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 141,
                          "typeName": "BoundedCallOf<T>",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::propose`]."
                      ]
                    },
                    {
                      "name": "second",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 158,
                          "typeName": "PropIndex",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::second`]."
                      ]
                    },
                    {
                      "name": "vote",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 158,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        },
                        {
                          "name": "vote",
                          "type": 56,
                          "typeName": "AccountVote<BalanceOf<T>>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::vote`]."
                      ]
                    },
                    {
                      "name": "emergency_cancel",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::emergency_cancel`]."
                      ]
                    },
                    {
                      "name": "external_propose",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 141,
                          "typeName": "BoundedCallOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::external_propose`]."
                      ]
                    },
                    {
                      "name": "external_propose_majority",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 141,
                          "typeName": "BoundedCallOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::external_propose_majority`]."
                      ]
                    },
                    {
                      "name": "external_propose_default",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 141,
                          "typeName": "BoundedCallOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::external_propose_default`]."
                      ]
                    },
                    {
                      "name": "fast_track",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "voting_period",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::fast_track`]."
                      ]
                    },
                    {
                      "name": "veto_external",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::veto_external`]."
                      ]
                    },
                    {
                      "name": "cancel_referendum",
                      "fields": [
                        {
                          "name": "ref_index",
                          "type": 158,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::cancel_referendum`]."
                      ]
                    },
                    {
                      "name": "delegate",
                      "fields": [
                        {
                          "name": "to",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "conviction",
                          "type": 240,
                          "typeName": "Conviction",
                          "docs": []
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::delegate`]."
                      ]
                    },
                    {
                      "name": "undelegate",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::undelegate`]."
                      ]
                    },
                    {
                      "name": "clear_public_proposals",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::clear_public_proposals`]."
                      ]
                    },
                    {
                      "name": "unlock",
                      "fields": [
                        {
                          "name": "target",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::unlock`]."
                      ]
                    },
                    {
                      "name": "remove_vote",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::remove_vote`]."
                      ]
                    },
                    {
                      "name": "remove_other_vote",
                      "fields": [
                        {
                          "name": "target",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::remove_other_vote`]."
                      ]
                    },
                    {
                      "name": "blacklist",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "maybe_ref_index",
                          "type": 38,
                          "typeName": "Option<ReferendumIndex>",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::blacklist`]."
                      ]
                    },
                    {
                      "name": "cancel_proposal",
                      "fields": [
                        {
                          "name": "prop_index",
                          "type": 158,
                          "typeName": "PropIndex",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "See [`Pallet::cancel_proposal`]."
                      ]
                    },
                    {
                      "name": "set_metadata",
                      "fields": [
                        {
                          "name": "owner",
                          "type": 58,
                          "typeName": "MetadataOwner",
                          "docs": []
                        },
                        {
                          "name": "maybe_hash",
                          "type": 241,
                          "typeName": "Option<T::Hash>",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "See [`Pallet::set_metadata`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 240,
            "type": {
              "path": [
                "pallet_democracy",
                "conviction",
                "Conviction"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Locked1x",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Locked2x",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Locked3x",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Locked4x",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Locked5x",
                      "fields": [],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Locked6x",
                      "fields": [],
                      "index": 6,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 241,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 12
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 12,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 242,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_members",
                      "fields": [
                        {
                          "name": "new_members",
                          "type": 90,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "prime",
                          "type": 42,
                          "typeName": "Option<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "old_count",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_members`]."
                      ]
                    },
                    {
                      "name": "execute",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 142,
                          "typeName": "Box<<T as Config<I>>::Proposal>",
                          "docs": []
                        },
                        {
                          "name": "length_bound",
                          "type": 158,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::execute`]."
                      ]
                    },
                    {
                      "name": "propose",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 158,
                          "typeName": "MemberCount",
                          "docs": []
                        },
                        {
                          "name": "proposal",
                          "type": 142,
                          "typeName": "Box<<T as Config<I>>::Proposal>",
                          "docs": []
                        },
                        {
                          "name": "length_bound",
                          "type": 158,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::propose`]."
                      ]
                    },
                    {
                      "name": "vote",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 158,
                          "typeName": "ProposalIndex",
                          "docs": []
                        },
                        {
                          "name": "approve",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::vote`]."
                      ]
                    },
                    {
                      "name": "disapprove_proposal",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::disapprove_proposal`]."
                      ]
                    },
                    {
                      "name": "close",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 158,
                          "typeName": "ProposalIndex",
                          "docs": []
                        },
                        {
                          "name": "proposal_weight_bound",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        },
                        {
                          "name": "length_bound",
                          "type": 158,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::close`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 243,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_members",
                      "fields": [
                        {
                          "name": "new_members",
                          "type": 90,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "prime",
                          "type": 42,
                          "typeName": "Option<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "old_count",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_members`]."
                      ]
                    },
                    {
                      "name": "execute",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 142,
                          "typeName": "Box<<T as Config<I>>::Proposal>",
                          "docs": []
                        },
                        {
                          "name": "length_bound",
                          "type": 158,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::execute`]."
                      ]
                    },
                    {
                      "name": "propose",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 158,
                          "typeName": "MemberCount",
                          "docs": []
                        },
                        {
                          "name": "proposal",
                          "type": 142,
                          "typeName": "Box<<T as Config<I>>::Proposal>",
                          "docs": []
                        },
                        {
                          "name": "length_bound",
                          "type": 158,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::propose`]."
                      ]
                    },
                    {
                      "name": "vote",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 158,
                          "typeName": "ProposalIndex",
                          "docs": []
                        },
                        {
                          "name": "approve",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::vote`]."
                      ]
                    },
                    {
                      "name": "disapprove_proposal",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::disapprove_proposal`]."
                      ]
                    },
                    {
                      "name": "close",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 158,
                          "typeName": "ProposalIndex",
                          "docs": []
                        },
                        {
                          "name": "proposal_weight_bound",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        },
                        {
                          "name": "length_bound",
                          "type": 158,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::close`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 244,
            "type": {
              "path": [
                "pallet_elections_phragmen",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "vote",
                      "fields": [
                        {
                          "name": "votes",
                          "type": 90,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::vote`]."
                      ]
                    },
                    {
                      "name": "remove_voter",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::remove_voter`]."
                      ]
                    },
                    {
                      "name": "submit_candidacy",
                      "fields": [
                        {
                          "name": "candidate_count",
                          "type": 158,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::submit_candidacy`]."
                      ]
                    },
                    {
                      "name": "renounce_candidacy",
                      "fields": [
                        {
                          "name": "renouncing",
                          "type": 245,
                          "typeName": "Renouncing",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::renounce_candidacy`]."
                      ]
                    },
                    {
                      "name": "remove_member",
                      "fields": [
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "slash_bond",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        },
                        {
                          "name": "rerun_election",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::remove_member`]."
                      ]
                    },
                    {
                      "name": "clean_defunct_voters",
                      "fields": [
                        {
                          "name": "num_voters",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "num_defunct",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::clean_defunct_voters`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 245,
            "type": {
              "path": [
                "pallet_elections_phragmen",
                "Renouncing"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Member",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "RunnerUp",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Candidate",
                      "fields": [
                        {
                          "name": null,
                          "type": 158,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 246,
            "type": {
              "path": [
                "pallet_membership",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "add_member",
                      "fields": [
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::add_member`]."
                      ]
                    },
                    {
                      "name": "remove_member",
                      "fields": [
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::remove_member`]."
                      ]
                    },
                    {
                      "name": "swap_member",
                      "fields": [
                        {
                          "name": "remove",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "add",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::swap_member`]."
                      ]
                    },
                    {
                      "name": "reset_members",
                      "fields": [
                        {
                          "name": "members",
                          "type": 90,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::reset_members`]."
                      ]
                    },
                    {
                      "name": "change_key",
                      "fields": [
                        {
                          "name": "new",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::change_key`]."
                      ]
                    },
                    {
                      "name": "set_prime",
                      "fields": [
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::set_prime`]."
                      ]
                    },
                    {
                      "name": "clear_prime",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::clear_prime`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 247,
            "type": {
              "path": [
                "pallet_grandpa",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "report_equivocation",
                      "fields": [
                        {
                          "name": "equivocation_proof",
                          "type": 248,
                          "typeName": "Box<EquivocationProof<T::Hash, BlockNumberFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "key_owner_proof",
                          "type": 161,
                          "typeName": "T::KeyOwnerProof",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::report_equivocation`]."
                      ]
                    },
                    {
                      "name": "report_equivocation_unsigned",
                      "fields": [
                        {
                          "name": "equivocation_proof",
                          "type": 248,
                          "typeName": "Box<EquivocationProof<T::Hash, BlockNumberFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "key_owner_proof",
                          "type": 161,
                          "typeName": "T::KeyOwnerProof",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::report_equivocation_unsigned`]."
                      ]
                    },
                    {
                      "name": "note_stalled",
                      "fields": [
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "best_finalized_block_number",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::note_stalled`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 248,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "EquivocationProof"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "set_id",
                      "type": 11,
                      "typeName": "SetId",
                      "docs": []
                    },
                    {
                      "name": "equivocation",
                      "type": 249,
                      "typeName": "Equivocation<H, N>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 249,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "Equivocation"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Prevote",
                      "fields": [
                        {
                          "name": null,
                          "type": 250,
                          "typeName": "grandpa::Equivocation<AuthorityId, grandpa::Prevote<H, N>,\nAuthoritySignature>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Precommit",
                      "fields": [
                        {
                          "name": null,
                          "type": 256,
                          "typeName": "grandpa::Equivocation<AuthorityId, grandpa::Precommit<H, N>,\nAuthoritySignature>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 250,
            "type": {
              "path": [
                "finality_grandpa",
                "Equivocation"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 68
                },
                {
                  "name": "V",
                  "type": 251
                },
                {
                  "name": "S",
                  "type": 252
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "round_number",
                      "type": 11,
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "identity",
                      "type": 68,
                      "typeName": "Id",
                      "docs": []
                    },
                    {
                      "name": "first",
                      "type": 255,
                      "typeName": "(V, S)",
                      "docs": []
                    },
                    {
                      "name": "second",
                      "type": 255,
                      "typeName": "(V, S)",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 251,
            "type": {
              "path": [
                "finality_grandpa",
                "Prevote"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "target_hash",
                      "type": 12,
                      "typeName": "H",
                      "docs": []
                    },
                    {
                      "name": "target_number",
                      "type": 4,
                      "typeName": "N",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 252,
            "type": {
              "path": [
                "sp_consensus_grandpa",
                "app",
                "Signature"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 253,
                      "typeName": "ed25519::Signature",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 253,
            "type": {
              "path": [
                "sp_core",
                "ed25519",
                "Signature"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 254,
                      "typeName": "[u8; 64]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 254,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 64,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 255,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  251,
                  252
                ]
              },
              "docs": []
            }
          },
          {
            "id": 256,
            "type": {
              "path": [
                "finality_grandpa",
                "Equivocation"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 68
                },
                {
                  "name": "V",
                  "type": 257
                },
                {
                  "name": "S",
                  "type": 252
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "round_number",
                      "type": 11,
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "identity",
                      "type": 68,
                      "typeName": "Id",
                      "docs": []
                    },
                    {
                      "name": "first",
                      "type": 258,
                      "typeName": "(V, S)",
                      "docs": []
                    },
                    {
                      "name": "second",
                      "type": 258,
                      "typeName": "(V, S)",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 257,
            "type": {
              "path": [
                "finality_grandpa",
                "Precommit"
              ],
              "params": [
                {
                  "name": "H",
                  "type": 12
                },
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "target_hash",
                      "type": 12,
                      "typeName": "H",
                      "docs": []
                    },
                    {
                      "name": "target_number",
                      "type": 4,
                      "typeName": "N",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 258,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  257,
                  252
                ]
              },
              "docs": []
            }
          },
          {
            "id": 259,
            "type": {
              "path": [
                "pallet_treasury",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "propose_spend",
                      "fields": [
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::propose_spend`]."
                      ]
                    },
                    {
                      "name": "reject_proposal",
                      "fields": [
                        {
                          "name": "proposal_id",
                          "type": 158,
                          "typeName": "ProposalIndex",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::reject_proposal`]."
                      ]
                    },
                    {
                      "name": "approve_proposal",
                      "fields": [
                        {
                          "name": "proposal_id",
                          "type": 158,
                          "typeName": "ProposalIndex",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::approve_proposal`]."
                      ]
                    },
                    {
                      "name": "spend_local",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::spend_local`]."
                      ]
                    },
                    {
                      "name": "remove_approval",
                      "fields": [
                        {
                          "name": "proposal_id",
                          "type": 158,
                          "typeName": "ProposalIndex",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::remove_approval`]."
                      ]
                    },
                    {
                      "name": "spend",
                      "fields": [
                        {
                          "name": "asset_kind",
                          "type": 4,
                          "typeName": "Box<T::AssetKind>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "AssetBalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 167,
                          "typeName": "Box<BeneficiaryLookupOf<T, I>>",
                          "docs": []
                        },
                        {
                          "name": "valid_from",
                          "type": 38,
                          "typeName": "Option<BlockNumberFor<T>>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::spend`]."
                      ]
                    },
                    {
                      "name": "payout",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::payout`]."
                      ]
                    },
                    {
                      "name": "check_status",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::check_status`]."
                      ]
                    },
                    {
                      "name": "void_spend",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "SpendIndex",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::void_spend`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 260,
            "type": {
              "path": [
                "pallet_asset_rate",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "create",
                      "fields": [
                        {
                          "name": "asset_kind",
                          "type": 4,
                          "typeName": "Box<T::AssetKind>",
                          "docs": []
                        },
                        {
                          "name": "rate",
                          "type": 72,
                          "typeName": "FixedU128",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::create`]."
                      ]
                    },
                    {
                      "name": "update",
                      "fields": [
                        {
                          "name": "asset_kind",
                          "type": 4,
                          "typeName": "Box<T::AssetKind>",
                          "docs": []
                        },
                        {
                          "name": "rate",
                          "type": 72,
                          "typeName": "FixedU128",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::update`]."
                      ]
                    },
                    {
                      "name": "remove",
                      "fields": [
                        {
                          "name": "asset_kind",
                          "type": 4,
                          "typeName": "Box<T::AssetKind>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::remove`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 261,
            "type": {
              "path": [
                "pallet_contracts",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "call_old_weight",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "gas_limit",
                          "type": 10,
                          "typeName": "OldWeight",
                          "docs": []
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 262,
                          "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>",
                          "docs": []
                        },
                        {
                          "name": "data",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::call_old_weight`]."
                      ]
                    },
                    {
                      "name": "instantiate_with_code_old_weight",
                      "fields": [
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "gas_limit",
                          "type": 10,
                          "typeName": "OldWeight",
                          "docs": []
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 262,
                          "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>",
                          "docs": []
                        },
                        {
                          "name": "code",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "data",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "salt",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::instantiate_with_code_old_weight`]."
                      ]
                    },
                    {
                      "name": "instantiate_old_weight",
                      "fields": [
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "gas_limit",
                          "type": 10,
                          "typeName": "OldWeight",
                          "docs": []
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 262,
                          "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>",
                          "docs": []
                        },
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "CodeHash<T>",
                          "docs": []
                        },
                        {
                          "name": "data",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "salt",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::instantiate_old_weight`]."
                      ]
                    },
                    {
                      "name": "upload_code",
                      "fields": [
                        {
                          "name": "code",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 262,
                          "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>",
                          "docs": []
                        },
                        {
                          "name": "determinism",
                          "type": 263,
                          "typeName": "Determinism",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::upload_code`]."
                      ]
                    },
                    {
                      "name": "remove_code",
                      "fields": [
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "CodeHash<T>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::remove_code`]."
                      ]
                    },
                    {
                      "name": "set_code",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "CodeHash<T>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::set_code`]."
                      ]
                    },
                    {
                      "name": "call",
                      "fields": [
                        {
                          "name": "dest",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "gas_limit",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 262,
                          "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>",
                          "docs": []
                        },
                        {
                          "name": "data",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::call`]."
                      ]
                    },
                    {
                      "name": "instantiate_with_code",
                      "fields": [
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "gas_limit",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 262,
                          "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>",
                          "docs": []
                        },
                        {
                          "name": "code",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "data",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "salt",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::instantiate_with_code`]."
                      ]
                    },
                    {
                      "name": "instantiate",
                      "fields": [
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "gas_limit",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        },
                        {
                          "name": "storage_deposit_limit",
                          "type": 262,
                          "typeName": "Option<<BalanceOf<T> as codec::HasCompact>::Type>",
                          "docs": []
                        },
                        {
                          "name": "code_hash",
                          "type": 12,
                          "typeName": "CodeHash<T>",
                          "docs": []
                        },
                        {
                          "name": "data",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "salt",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::instantiate`]."
                      ]
                    },
                    {
                      "name": "migrate",
                      "fields": [
                        {
                          "name": "weight_limit",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::migrate`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 262,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 83
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 83,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 263,
            "type": {
              "path": [
                "pallet_contracts",
                "wasm",
                "Determinism"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Enforced",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Relaxed",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 264,
            "type": {
              "path": [
                "pallet_sudo",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "sudo",
                      "fields": [
                        {
                          "name": "call",
                          "type": 142,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::sudo`]."
                      ]
                    },
                    {
                      "name": "sudo_unchecked_weight",
                      "fields": [
                        {
                          "name": "call",
                          "type": 142,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        },
                        {
                          "name": "weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::sudo_unchecked_weight`]."
                      ]
                    },
                    {
                      "name": "set_key",
                      "fields": [
                        {
                          "name": "new",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_key`]."
                      ]
                    },
                    {
                      "name": "sudo_as",
                      "fields": [
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 142,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::sudo_as`]."
                      ]
                    },
                    {
                      "name": "remove_key",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::remove_key`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 265,
            "type": {
              "path": [
                "pallet_im_online",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "heartbeat",
                      "fields": [
                        {
                          "name": "heartbeat",
                          "type": 266,
                          "typeName": "Heartbeat<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "signature",
                          "type": 267,
                          "typeName": "<T::AuthorityId as RuntimeAppPublic>::Signature",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::heartbeat`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 266,
            "type": {
              "path": [
                "pallet_im_online",
                "Heartbeat"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "block_number",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "session_index",
                      "type": 4,
                      "typeName": "SessionIndex",
                      "docs": []
                    },
                    {
                      "name": "authority_index",
                      "type": 4,
                      "typeName": "AuthIndex",
                      "docs": []
                    },
                    {
                      "name": "validators_len",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 267,
            "type": {
              "path": [
                "pallet_im_online",
                "sr25519",
                "app_sr25519",
                "Signature"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 268,
                      "typeName": "sr25519::Signature",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 268,
            "type": {
              "path": [
                "sp_core",
                "sr25519",
                "Signature"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 254,
                      "typeName": "[u8; 64]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 269,
            "type": {
              "path": [
                "pallet_identity",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "add_registrar",
                      "fields": [
                        {
                          "name": "account",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::add_registrar`]."
                      ]
                    },
                    {
                      "name": "set_identity",
                      "fields": [
                        {
                          "name": "info",
                          "type": 270,
                          "typeName": "Box<T::IdentityInformation>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_identity`]."
                      ]
                    },
                    {
                      "name": "set_subs",
                      "fields": [
                        {
                          "name": "subs",
                          "type": 305,
                          "typeName": "Vec<(T::AccountId, Data)>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_subs`]."
                      ]
                    },
                    {
                      "name": "clear_identity",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::clear_identity`]."
                      ]
                    },
                    {
                      "name": "request_judgement",
                      "fields": [
                        {
                          "name": "reg_index",
                          "type": 158,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        },
                        {
                          "name": "max_fee",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::request_judgement`]."
                      ]
                    },
                    {
                      "name": "cancel_request",
                      "fields": [
                        {
                          "name": "reg_index",
                          "type": 4,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::cancel_request`]."
                      ]
                    },
                    {
                      "name": "set_fee",
                      "fields": [
                        {
                          "name": "index",
                          "type": 158,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        },
                        {
                          "name": "fee",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::set_fee`]."
                      ]
                    },
                    {
                      "name": "set_account_id",
                      "fields": [
                        {
                          "name": "index",
                          "type": 158,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        },
                        {
                          "name": "new",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::set_account_id`]."
                      ]
                    },
                    {
                      "name": "set_fields",
                      "fields": [
                        {
                          "name": "index",
                          "type": 158,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        },
                        {
                          "name": "fields",
                          "type": 11,
                          "typeName": "<T::IdentityInformation as IdentityInformationProvider>::\nFieldsIdentifier",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::set_fields`]."
                      ]
                    },
                    {
                      "name": "provide_judgement",
                      "fields": [
                        {
                          "name": "reg_index",
                          "type": 158,
                          "typeName": "RegistrarIndex",
                          "docs": []
                        },
                        {
                          "name": "target",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "judgement",
                          "type": 307,
                          "typeName": "Judgement<BalanceOf<T>>",
                          "docs": []
                        },
                        {
                          "name": "identity",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::provide_judgement`]."
                      ]
                    },
                    {
                      "name": "kill_identity",
                      "fields": [
                        {
                          "name": "target",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::kill_identity`]."
                      ]
                    },
                    {
                      "name": "add_sub",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "data",
                          "type": 273,
                          "typeName": "Data",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::add_sub`]."
                      ]
                    },
                    {
                      "name": "rename_sub",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "data",
                          "type": 273,
                          "typeName": "Data",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::rename_sub`]."
                      ]
                    },
                    {
                      "name": "remove_sub",
                      "fields": [
                        {
                          "name": "sub",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::remove_sub`]."
                      ]
                    },
                    {
                      "name": "quit_sub",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::quit_sub`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Identity pallet declaration."
              ]
            }
          },
          {
            "id": 270,
            "type": {
              "path": [
                "pallet_identity",
                "legacy",
                "IdentityInfo"
              ],
              "params": [
                {
                  "name": "FieldLimit",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "additional",
                      "type": 271,
                      "typeName": "BoundedVec<(Data, Data), FieldLimit>",
                      "docs": []
                    },
                    {
                      "name": "display",
                      "type": 273,
                      "typeName": "Data",
                      "docs": []
                    },
                    {
                      "name": "legal",
                      "type": 273,
                      "typeName": "Data",
                      "docs": []
                    },
                    {
                      "name": "web",
                      "type": 273,
                      "typeName": "Data",
                      "docs": []
                    },
                    {
                      "name": "riot",
                      "type": 273,
                      "typeName": "Data",
                      "docs": []
                    },
                    {
                      "name": "email",
                      "type": 273,
                      "typeName": "Data",
                      "docs": []
                    },
                    {
                      "name": "pgp_fingerprint",
                      "type": 304,
                      "typeName": "Option<[u8; 20]>",
                      "docs": []
                    },
                    {
                      "name": "image",
                      "type": 273,
                      "typeName": "Data",
                      "docs": []
                    },
                    {
                      "name": "twitter",
                      "type": 273,
                      "typeName": "Data",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 271,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 272
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 303,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 272,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  273,
                  273
                ]
              },
              "docs": []
            }
          },
          {
            "id": 273,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "Data"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Raw0",
                      "fields": [
                        {
                          "name": null,
                          "type": 274,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Raw1",
                      "fields": [
                        {
                          "name": null,
                          "type": 275,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Raw2",
                      "fields": [
                        {
                          "name": null,
                          "type": 276,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Raw3",
                      "fields": [
                        {
                          "name": null,
                          "type": 277,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Raw4",
                      "fields": [
                        {
                          "name": null,
                          "type": 17,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Raw5",
                      "fields": [
                        {
                          "name": null,
                          "type": 278,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "Raw6",
                      "fields": [
                        {
                          "name": null,
                          "type": 279,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "Raw7",
                      "fields": [
                        {
                          "name": null,
                          "type": 280,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "Raw8",
                      "fields": [
                        {
                          "name": null,
                          "type": 281,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": []
                    },
                    {
                      "name": "Raw9",
                      "fields": [
                        {
                          "name": null,
                          "type": 282,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": []
                    },
                    {
                      "name": "Raw10",
                      "fields": [
                        {
                          "name": null,
                          "type": 283,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": []
                    },
                    {
                      "name": "Raw11",
                      "fields": [
                        {
                          "name": null,
                          "type": 284,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": []
                    },
                    {
                      "name": "Raw12",
                      "fields": [
                        {
                          "name": null,
                          "type": 285,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": []
                    },
                    {
                      "name": "Raw13",
                      "fields": [
                        {
                          "name": null,
                          "type": 286,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": []
                    },
                    {
                      "name": "Raw14",
                      "fields": [
                        {
                          "name": null,
                          "type": 287,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": []
                    },
                    {
                      "name": "Raw15",
                      "fields": [
                        {
                          "name": null,
                          "type": 288,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": []
                    },
                    {
                      "name": "Raw16",
                      "fields": [
                        {
                          "name": null,
                          "type": 87,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": []
                    },
                    {
                      "name": "Raw17",
                      "fields": [
                        {
                          "name": null,
                          "type": 289,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": []
                    },
                    {
                      "name": "Raw18",
                      "fields": [
                        {
                          "name": null,
                          "type": 290,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": []
                    },
                    {
                      "name": "Raw19",
                      "fields": [
                        {
                          "name": null,
                          "type": 291,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": []
                    },
                    {
                      "name": "Raw20",
                      "fields": [
                        {
                          "name": null,
                          "type": 168,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": []
                    },
                    {
                      "name": "Raw21",
                      "fields": [
                        {
                          "name": null,
                          "type": 292,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": []
                    },
                    {
                      "name": "Raw22",
                      "fields": [
                        {
                          "name": null,
                          "type": 293,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": []
                    },
                    {
                      "name": "Raw23",
                      "fields": [
                        {
                          "name": null,
                          "type": 294,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 24,
                      "docs": []
                    },
                    {
                      "name": "Raw24",
                      "fields": [
                        {
                          "name": null,
                          "type": 295,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": []
                    },
                    {
                      "name": "Raw25",
                      "fields": [
                        {
                          "name": null,
                          "type": 296,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 26,
                      "docs": []
                    },
                    {
                      "name": "Raw26",
                      "fields": [
                        {
                          "name": null,
                          "type": 297,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 27,
                      "docs": []
                    },
                    {
                      "name": "Raw27",
                      "fields": [
                        {
                          "name": null,
                          "type": 298,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 28,
                      "docs": []
                    },
                    {
                      "name": "Raw28",
                      "fields": [
                        {
                          "name": null,
                          "type": 299,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 29,
                      "docs": []
                    },
                    {
                      "name": "Raw29",
                      "fields": [
                        {
                          "name": null,
                          "type": 300,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 30,
                      "docs": []
                    },
                    {
                      "name": "Raw30",
                      "fields": [
                        {
                          "name": null,
                          "type": 301,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 31,
                      "docs": []
                    },
                    {
                      "name": "Raw31",
                      "fields": [
                        {
                          "name": null,
                          "type": 302,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 32,
                      "docs": []
                    },
                    {
                      "name": "Raw32",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 33,
                      "docs": []
                    },
                    {
                      "name": "BlakeTwo256",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 34,
                      "docs": []
                    },
                    {
                      "name": "Sha256",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 35,
                      "docs": []
                    },
                    {
                      "name": "Keccak256",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 36,
                      "docs": []
                    },
                    {
                      "name": "ShaThree256",
                      "fields": [
                        {
                          "name": null,
                          "type": 1,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 37,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 274,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 0,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 275,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 1,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 276,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 2,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 277,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 3,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 278,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 5,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 279,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 6,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 280,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 7,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 281,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 8,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 282,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 9,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 283,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 10,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 284,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 11,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 285,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 12,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 286,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 13,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 287,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 14,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 288,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 15,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 289,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 17,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 290,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 18,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 291,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 19,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 292,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 21,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 293,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 22,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 294,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 23,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 295,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 24,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 296,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 25,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 297,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 26,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 298,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 27,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 299,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 28,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 300,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 29,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 301,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 30,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 302,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 31,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 303,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 272
                }
              },
              "docs": []
            }
          },
          {
            "id": 304,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 168
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 168,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 305,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 306
                }
              },
              "docs": []
            }
          },
          {
            "id": 306,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  273
                ]
              },
              "docs": []
            }
          },
          {
            "id": 307,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "Judgement"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unknown",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "FeePaid",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Reasonable",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "KnownGood",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "OutOfDate",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "LowQuality",
                      "fields": [],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Erroneous",
                      "fields": [],
                      "index": 6,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 308,
            "type": {
              "path": [
                "pallet_society",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "bid",
                      "fields": [
                        {
                          "name": "value",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::bid`]."
                      ]
                    },
                    {
                      "name": "unbid",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::unbid`]."
                      ]
                    },
                    {
                      "name": "vouch",
                      "fields": [
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "tip",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::vouch`]."
                      ]
                    },
                    {
                      "name": "unvouch",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::unvouch`]."
                      ]
                    },
                    {
                      "name": "vote",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "approve",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::vote`]."
                      ]
                    },
                    {
                      "name": "defender_vote",
                      "fields": [
                        {
                          "name": "approve",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::defender_vote`]."
                      ]
                    },
                    {
                      "name": "payout",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::payout`]."
                      ]
                    },
                    {
                      "name": "waive_repay",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::waive_repay`]."
                      ]
                    },
                    {
                      "name": "found_society",
                      "fields": [
                        {
                          "name": "founder",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "max_members",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "max_intake",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "max_strikes",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "candidate_deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "rules",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::found_society`]."
                      ]
                    },
                    {
                      "name": "dissolve",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::dissolve`]."
                      ]
                    },
                    {
                      "name": "judge_suspended_member",
                      "fields": [
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "forgive",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::judge_suspended_member`]."
                      ]
                    },
                    {
                      "name": "set_parameters",
                      "fields": [
                        {
                          "name": "max_members",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "max_intake",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "max_strikes",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "candidate_deposit",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::set_parameters`]."
                      ]
                    },
                    {
                      "name": "punish_skeptic",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::punish_skeptic`]."
                      ]
                    },
                    {
                      "name": "claim_membership",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::claim_membership`]."
                      ]
                    },
                    {
                      "name": "bestow_membership",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::bestow_membership`]."
                      ]
                    },
                    {
                      "name": "kick_candidate",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::kick_candidate`]."
                      ]
                    },
                    {
                      "name": "resign_candidacy",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::resign_candidacy`]."
                      ]
                    },
                    {
                      "name": "drop_candidate",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "See [`Pallet::drop_candidate`]."
                      ]
                    },
                    {
                      "name": "cleanup_candidacy",
                      "fields": [
                        {
                          "name": "candidate",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "max",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "See [`Pallet::cleanup_candidacy`]."
                      ]
                    },
                    {
                      "name": "cleanup_challenge",
                      "fields": [
                        {
                          "name": "challenge_round",
                          "type": 4,
                          "typeName": "RoundIndex",
                          "docs": []
                        },
                        {
                          "name": "max",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "See [`Pallet::cleanup_challenge`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 309,
            "type": {
              "path": [
                "pallet_recovery",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "as_recovered",
                      "fields": [
                        {
                          "name": "account",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 142,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::as_recovered`]."
                      ]
                    },
                    {
                      "name": "set_recovered",
                      "fields": [
                        {
                          "name": "lost",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "rescuer",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_recovered`]."
                      ]
                    },
                    {
                      "name": "create_recovery",
                      "fields": [
                        {
                          "name": "friends",
                          "type": 90,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "threshold",
                          "type": 102,
                          "typeName": "u16",
                          "docs": []
                        },
                        {
                          "name": "delay_period",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::create_recovery`]."
                      ]
                    },
                    {
                      "name": "initiate_recovery",
                      "fields": [
                        {
                          "name": "account",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::initiate_recovery`]."
                      ]
                    },
                    {
                      "name": "vouch_recovery",
                      "fields": [
                        {
                          "name": "lost",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "rescuer",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::vouch_recovery`]."
                      ]
                    },
                    {
                      "name": "claim_recovery",
                      "fields": [
                        {
                          "name": "account",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::claim_recovery`]."
                      ]
                    },
                    {
                      "name": "close_recovery",
                      "fields": [
                        {
                          "name": "rescuer",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::close_recovery`]."
                      ]
                    },
                    {
                      "name": "remove_recovery",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::remove_recovery`]."
                      ]
                    },
                    {
                      "name": "cancel_recovered",
                      "fields": [
                        {
                          "name": "account",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::cancel_recovered`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 310,
            "type": {
              "path": [
                "pallet_vesting",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "vest",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::vest`]."
                      ]
                    },
                    {
                      "name": "vest_other",
                      "fields": [
                        {
                          "name": "target",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::vest_other`]."
                      ]
                    },
                    {
                      "name": "vested_transfer",
                      "fields": [
                        {
                          "name": "target",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "schedule",
                          "type": 311,
                          "typeName": "VestingInfo<BalanceOf<T>, BlockNumberFor<T>>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::vested_transfer`]."
                      ]
                    },
                    {
                      "name": "force_vested_transfer",
                      "fields": [
                        {
                          "name": "source",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "target",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "schedule",
                          "type": 311,
                          "typeName": "VestingInfo<BalanceOf<T>, BlockNumberFor<T>>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::force_vested_transfer`]."
                      ]
                    },
                    {
                      "name": "merge_schedules",
                      "fields": [
                        {
                          "name": "schedule1_index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "schedule2_index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::merge_schedules`]."
                      ]
                    },
                    {
                      "name": "force_remove_vesting_schedule",
                      "fields": [
                        {
                          "name": "target",
                          "type": 167,
                          "typeName": "<T::Lookup as StaticLookup>::Source",
                          "docs": []
                        },
                        {
                          "name": "schedule_index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::force_remove_vesting_schedule`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 311,
            "type": {
              "path": [
                "pallet_vesting",
                "vesting_info",
                "VestingInfo"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "locked",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "per_block",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "starting_block",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 312,
            "type": {
              "path": [
                "pallet_scheduler",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "schedule",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "maybe_periodic",
                          "type": 313,
                          "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "priority",
                          "type": 2,
                          "typeName": "schedule::Priority",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 142,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::schedule`]."
                      ]
                    },
                    {
                      "name": "cancel",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::cancel`]."
                      ]
                    },
                    {
                      "name": "schedule_named",
                      "fields": [
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "TaskName",
                          "docs": []
                        },
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "maybe_periodic",
                          "type": 313,
                          "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "priority",
                          "type": 2,
                          "typeName": "schedule::Priority",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 142,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::schedule_named`]."
                      ]
                    },
                    {
                      "name": "cancel_named",
                      "fields": [
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "TaskName",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::cancel_named`]."
                      ]
                    },
                    {
                      "name": "schedule_after",
                      "fields": [
                        {
                          "name": "after",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "maybe_periodic",
                          "type": 313,
                          "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "priority",
                          "type": 2,
                          "typeName": "schedule::Priority",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 142,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::schedule_after`]."
                      ]
                    },
                    {
                      "name": "schedule_named_after",
                      "fields": [
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "TaskName",
                          "docs": []
                        },
                        {
                          "name": "after",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "maybe_periodic",
                          "type": 313,
                          "typeName": "Option<schedule::Period<BlockNumberFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "priority",
                          "type": 2,
                          "typeName": "schedule::Priority",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 142,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::schedule_named_after`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 313,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 95
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 95,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 314,
            "type": {
              "path": [
                "pallet_glutton",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "initialize_pallet",
                      "fields": [
                        {
                          "name": "new_count",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "witness_count",
                          "type": 38,
                          "typeName": "Option<u32>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::initialize_pallet`]."
                      ]
                    },
                    {
                      "name": "set_compute",
                      "fields": [
                        {
                          "name": "compute",
                          "type": 98,
                          "typeName": "FixedU64",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_compute`]."
                      ]
                    },
                    {
                      "name": "set_storage",
                      "fields": [
                        {
                          "name": "storage",
                          "type": 98,
                          "typeName": "FixedU64",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_storage`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 315,
            "type": {
              "path": [
                "pallet_preimage",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "note_preimage",
                      "fields": [
                        {
                          "name": "bytes",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::note_preimage`]."
                      ]
                    },
                    {
                      "name": "unnote_preimage",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::unnote_preimage`]."
                      ]
                    },
                    {
                      "name": "request_preimage",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::request_preimage`]."
                      ]
                    },
                    {
                      "name": "unrequest_preimage",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::unrequest_preimage`]."
                      ]
                    },
                    {
                      "name": "ensure_updated",
                      "fields": [
                        {
                          "name": "hashes",
                          "type": 316,
                          "typeName": "Vec<T::Hash>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::ensure_updated`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 316,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 12
                }
              },
              "docs": []
            }
          },
          {
            "id": 317,
            "type": {
              "path": [
                "pallet_proxy",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "proxy",
                      "fields": [
                        {
                          "name": "real",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "force_proxy_type",
                          "type": 318,
                          "typeName": "Option<T::ProxyType>",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 142,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::proxy`]."
                      ]
                    },
                    {
                      "name": "add_proxy",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "proxy_type",
                          "type": 101,
                          "typeName": "T::ProxyType",
                          "docs": []
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::add_proxy`]."
                      ]
                    },
                    {
                      "name": "remove_proxy",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "proxy_type",
                          "type": 101,
                          "typeName": "T::ProxyType",
                          "docs": []
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::remove_proxy`]."
                      ]
                    },
                    {
                      "name": "remove_proxies",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::remove_proxies`]."
                      ]
                    },
                    {
                      "name": "create_pure",
                      "fields": [
                        {
                          "name": "proxy_type",
                          "type": 101,
                          "typeName": "T::ProxyType",
                          "docs": []
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 102,
                          "typeName": "u16",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::create_pure`]."
                      ]
                    },
                    {
                      "name": "kill_pure",
                      "fields": [
                        {
                          "name": "spawner",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "proxy_type",
                          "type": 101,
                          "typeName": "T::ProxyType",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 102,
                          "typeName": "u16",
                          "docs": []
                        },
                        {
                          "name": "height",
                          "type": 158,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "ext_index",
                          "type": 158,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::kill_pure`]."
                      ]
                    },
                    {
                      "name": "announce",
                      "fields": [
                        {
                          "name": "real",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::announce`]."
                      ]
                    },
                    {
                      "name": "remove_announcement",
                      "fields": [
                        {
                          "name": "real",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::remove_announcement`]."
                      ]
                    },
                    {
                      "name": "reject_announcement",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "CallHashOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::reject_announcement`]."
                      ]
                    },
                    {
                      "name": "proxy_announced",
                      "fields": [
                        {
                          "name": "delegate",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "real",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "force_proxy_type",
                          "type": 318,
                          "typeName": "Option<T::ProxyType>",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 142,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::proxy_announced`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 318,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 101
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 101,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 319,
            "type": {
              "path": [
                "pallet_multisig",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "as_multi_threshold_1",
                      "fields": [
                        {
                          "name": "other_signatories",
                          "type": 90,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 142,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::as_multi_threshold_1`]."
                      ]
                    },
                    {
                      "name": "as_multi",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 102,
                          "typeName": "u16",
                          "docs": []
                        },
                        {
                          "name": "other_signatories",
                          "type": 90,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "maybe_timepoint",
                          "type": 320,
                          "typeName": "Option<Timepoint<BlockNumberFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "call",
                          "type": 142,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::as_multi`]."
                      ]
                    },
                    {
                      "name": "approve_as_multi",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 102,
                          "typeName": "u16",
                          "docs": []
                        },
                        {
                          "name": "other_signatories",
                          "type": 90,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "maybe_timepoint",
                          "type": 320,
                          "typeName": "Option<Timepoint<BlockNumberFor<T>>>",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        },
                        {
                          "name": "max_weight",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::approve_as_multi`]."
                      ]
                    },
                    {
                      "name": "cancel_as_multi",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 102,
                          "typeName": "u16",
                          "docs": []
                        },
                        {
                          "name": "other_signatories",
                          "type": 90,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "timepoint",
                          "type": 104,
                          "typeName": "Timepoint<BlockNumberFor<T>>",
                          "docs": []
                        },
                        {
                          "name": "call_hash",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::cancel_as_multi`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 320,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 104
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 104,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 321,
            "type": {
              "path": [
                "pallet_bounties",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "propose_bounty",
                      "fields": [
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "description",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::propose_bounty`]."
                      ]
                    },
                    {
                      "name": "approve_bounty",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::approve_bounty`]."
                      ]
                    },
                    {
                      "name": "propose_curator",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "curator",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "fee",
                          "type": 83,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::propose_curator`]."
                      ]
                    },
                    {
                      "name": "unassign_curator",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::unassign_curator`]."
                      ]
                    },
                    {
                      "name": "accept_curator",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::accept_curator`]."
                      ]
                    },
                    {
                      "name": "award_bounty",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::award_bounty`]."
                      ]
                    },
                    {
                      "name": "claim_bounty",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::claim_bounty`]."
                      ]
                    },
                    {
                      "name": "close_bounty",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::close_bounty`]."
                      ]
                    },
                    {
                      "name": "extend_bounty_expiry",
                      "fields": [
                        {
                          "name": "bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "remark",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::extend_bounty_expiry`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 322,
            "type": {
              "path": [
                "pallet_tips",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "report_awesome",
                      "fields": [
                        {
                          "name": "reason",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::report_awesome`]."
                      ]
                    },
                    {
                      "name": "retract_tip",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::retract_tip`]."
                      ]
                    },
                    {
                      "name": "tip_new",
                      "fields": [
                        {
                          "name": "reason",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "tip_value",
                          "type": 83,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::tip_new`]."
                      ]
                    },
                    {
                      "name": "tip",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "tip_value",
                          "type": 83,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::tip`]."
                      ]
                    },
                    {
                      "name": "close_tip",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::close_tip`]."
                      ]
                    },
                    {
                      "name": "slash_tip",
                      "fields": [
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::slash_tip`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 323,
            "type": {
              "path": [
                "pallet_assets",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "create",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "admin",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "min_balance",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::create`]."
                      ]
                    },
                    {
                      "name": "force_create",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "is_sufficient",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        },
                        {
                          "name": "min_balance",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::force_create`]."
                      ]
                    },
                    {
                      "name": "start_destroy",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::start_destroy`]."
                      ]
                    },
                    {
                      "name": "destroy_accounts",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::destroy_accounts`]."
                      ]
                    },
                    {
                      "name": "destroy_approvals",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::destroy_approvals`]."
                      ]
                    },
                    {
                      "name": "finish_destroy",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::finish_destroy`]."
                      ]
                    },
                    {
                      "name": "mint",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::mint`]."
                      ]
                    },
                    {
                      "name": "burn",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::burn`]."
                      ]
                    },
                    {
                      "name": "transfer",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "target",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::transfer`]."
                      ]
                    },
                    {
                      "name": "transfer_keep_alive",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "target",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::transfer_keep_alive`]."
                      ]
                    },
                    {
                      "name": "force_transfer",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "source",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::force_transfer`]."
                      ]
                    },
                    {
                      "name": "freeze",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::freeze`]."
                      ]
                    },
                    {
                      "name": "thaw",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::thaw`]."
                      ]
                    },
                    {
                      "name": "freeze_asset",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::freeze_asset`]."
                      ]
                    },
                    {
                      "name": "thaw_asset",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::thaw_asset`]."
                      ]
                    },
                    {
                      "name": "transfer_ownership",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::transfer_ownership`]."
                      ]
                    },
                    {
                      "name": "set_team",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "issuer",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "admin",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "freezer",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::set_team`]."
                      ]
                    },
                    {
                      "name": "set_metadata",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "name",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "symbol",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "decimals",
                          "type": 2,
                          "typeName": "u8",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "See [`Pallet::set_metadata`]."
                      ]
                    },
                    {
                      "name": "clear_metadata",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "See [`Pallet::clear_metadata`]."
                      ]
                    },
                    {
                      "name": "force_set_metadata",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "name",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "symbol",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "decimals",
                          "type": 2,
                          "typeName": "u8",
                          "docs": []
                        },
                        {
                          "name": "is_frozen",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "See [`Pallet::force_set_metadata`]."
                      ]
                    },
                    {
                      "name": "force_clear_metadata",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "See [`Pallet::force_clear_metadata`]."
                      ]
                    },
                    {
                      "name": "force_asset_status",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "issuer",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "admin",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "freezer",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "min_balance",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        },
                        {
                          "name": "is_sufficient",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        },
                        {
                          "name": "is_frozen",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "See [`Pallet::force_asset_status`]."
                      ]
                    },
                    {
                      "name": "approve_transfer",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "See [`Pallet::approve_transfer`]."
                      ]
                    },
                    {
                      "name": "cancel_approval",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": [
                        "See [`Pallet::cancel_approval`]."
                      ]
                    },
                    {
                      "name": "force_cancel_approval",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 24,
                      "docs": [
                        "See [`Pallet::force_cancel_approval`]."
                      ]
                    },
                    {
                      "name": "transfer_approved",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "destination",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": [
                        "See [`Pallet::transfer_approved`]."
                      ]
                    },
                    {
                      "name": "touch",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        }
                      ],
                      "index": 26,
                      "docs": [
                        "See [`Pallet::touch`]."
                      ]
                    },
                    {
                      "name": "refund",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "allow_burn",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 27,
                      "docs": [
                        "See [`Pallet::refund`]."
                      ]
                    },
                    {
                      "name": "set_min_balance",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "min_balance",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 28,
                      "docs": [
                        "See [`Pallet::set_min_balance`]."
                      ]
                    },
                    {
                      "name": "touch_other",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 29,
                      "docs": [
                        "See [`Pallet::touch_other`]."
                      ]
                    },
                    {
                      "name": "refund_other",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 30,
                      "docs": [
                        "See [`Pallet::refund_other`]."
                      ]
                    },
                    {
                      "name": "block",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 31,
                      "docs": [
                        "See [`Pallet::block`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 324,
            "type": {
              "path": [
                "pallet_assets",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "create",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "admin",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "min_balance",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::create`]."
                      ]
                    },
                    {
                      "name": "force_create",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "is_sufficient",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        },
                        {
                          "name": "min_balance",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::force_create`]."
                      ]
                    },
                    {
                      "name": "start_destroy",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::start_destroy`]."
                      ]
                    },
                    {
                      "name": "destroy_accounts",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::destroy_accounts`]."
                      ]
                    },
                    {
                      "name": "destroy_approvals",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::destroy_approvals`]."
                      ]
                    },
                    {
                      "name": "finish_destroy",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::finish_destroy`]."
                      ]
                    },
                    {
                      "name": "mint",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::mint`]."
                      ]
                    },
                    {
                      "name": "burn",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::burn`]."
                      ]
                    },
                    {
                      "name": "transfer",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "target",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::transfer`]."
                      ]
                    },
                    {
                      "name": "transfer_keep_alive",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "target",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::transfer_keep_alive`]."
                      ]
                    },
                    {
                      "name": "force_transfer",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "source",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::force_transfer`]."
                      ]
                    },
                    {
                      "name": "freeze",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::freeze`]."
                      ]
                    },
                    {
                      "name": "thaw",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::thaw`]."
                      ]
                    },
                    {
                      "name": "freeze_asset",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::freeze_asset`]."
                      ]
                    },
                    {
                      "name": "thaw_asset",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::thaw_asset`]."
                      ]
                    },
                    {
                      "name": "transfer_ownership",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::transfer_ownership`]."
                      ]
                    },
                    {
                      "name": "set_team",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "issuer",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "admin",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "freezer",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::set_team`]."
                      ]
                    },
                    {
                      "name": "set_metadata",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "name",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "symbol",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "decimals",
                          "type": 2,
                          "typeName": "u8",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "See [`Pallet::set_metadata`]."
                      ]
                    },
                    {
                      "name": "clear_metadata",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "See [`Pallet::clear_metadata`]."
                      ]
                    },
                    {
                      "name": "force_set_metadata",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "name",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "symbol",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "decimals",
                          "type": 2,
                          "typeName": "u8",
                          "docs": []
                        },
                        {
                          "name": "is_frozen",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "See [`Pallet::force_set_metadata`]."
                      ]
                    },
                    {
                      "name": "force_clear_metadata",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "See [`Pallet::force_clear_metadata`]."
                      ]
                    },
                    {
                      "name": "force_asset_status",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "issuer",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "admin",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "freezer",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "min_balance",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        },
                        {
                          "name": "is_sufficient",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        },
                        {
                          "name": "is_frozen",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "See [`Pallet::force_asset_status`]."
                      ]
                    },
                    {
                      "name": "approve_transfer",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "See [`Pallet::approve_transfer`]."
                      ]
                    },
                    {
                      "name": "cancel_approval",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": [
                        "See [`Pallet::cancel_approval`]."
                      ]
                    },
                    {
                      "name": "force_cancel_approval",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 24,
                      "docs": [
                        "See [`Pallet::force_cancel_approval`]."
                      ]
                    },
                    {
                      "name": "transfer_approved",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "destination",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": [
                        "See [`Pallet::transfer_approved`]."
                      ]
                    },
                    {
                      "name": "touch",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        }
                      ],
                      "index": 26,
                      "docs": [
                        "See [`Pallet::touch`]."
                      ]
                    },
                    {
                      "name": "refund",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "allow_burn",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 27,
                      "docs": [
                        "See [`Pallet::refund`]."
                      ]
                    },
                    {
                      "name": "set_min_balance",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "min_balance",
                          "type": 6,
                          "typeName": "T::Balance",
                          "docs": []
                        }
                      ],
                      "index": 28,
                      "docs": [
                        "See [`Pallet::set_min_balance`]."
                      ]
                    },
                    {
                      "name": "touch_other",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 29,
                      "docs": [
                        "See [`Pallet::touch_other`]."
                      ]
                    },
                    {
                      "name": "refund_other",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 30,
                      "docs": [
                        "See [`Pallet::refund_other`]."
                      ]
                    },
                    {
                      "name": "block",
                      "fields": [
                        {
                          "name": "id",
                          "type": 158,
                          "typeName": "T::AssetIdParameter",
                          "docs": []
                        },
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 31,
                      "docs": [
                        "See [`Pallet::block`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 325,
            "type": {
              "path": [
                "pallet_lottery",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "buy_ticket",
                      "fields": [
                        {
                          "name": "call",
                          "type": 142,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::buy_ticket`]."
                      ]
                    },
                    {
                      "name": "set_calls",
                      "fields": [
                        {
                          "name": "calls",
                          "type": 148,
                          "typeName": "Vec<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_calls`]."
                      ]
                    },
                    {
                      "name": "start_lottery",
                      "fields": [
                        {
                          "name": "price",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "length",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "repeat",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::start_lottery`]."
                      ]
                    },
                    {
                      "name": "stop_repeat",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::stop_repeat`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 326,
            "type": {
              "path": [
                "pallet_nis",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "place_bid",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "duration",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::place_bid`]."
                      ]
                    },
                    {
                      "name": "retract_bid",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "duration",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::retract_bid`]."
                      ]
                    },
                    {
                      "name": "fund_deficit",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::fund_deficit`]."
                      ]
                    },
                    {
                      "name": "thaw_private",
                      "fields": [
                        {
                          "name": "index",
                          "type": 158,
                          "typeName": "ReceiptIndex",
                          "docs": []
                        },
                        {
                          "name": "maybe_proportion",
                          "type": 327,
                          "typeName": "Option<Perquintill>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::thaw_private`]."
                      ]
                    },
                    {
                      "name": "thaw_communal",
                      "fields": [
                        {
                          "name": "index",
                          "type": 158,
                          "typeName": "ReceiptIndex",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::thaw_communal`]."
                      ]
                    },
                    {
                      "name": "communify",
                      "fields": [
                        {
                          "name": "index",
                          "type": 158,
                          "typeName": "ReceiptIndex",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::communify`]."
                      ]
                    },
                    {
                      "name": "privatize",
                      "fields": [
                        {
                          "name": "index",
                          "type": 158,
                          "typeName": "ReceiptIndex",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::privatize`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 327,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 112
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 112,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 328,
            "type": {
              "path": [
                "pallet_uniques",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "create",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "admin",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::create`]."
                      ]
                    },
                    {
                      "name": "force_create",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "free_holding",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::force_create`]."
                      ]
                    },
                    {
                      "name": "destroy",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "witness",
                          "type": 329,
                          "typeName": "DestroyWitness",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::destroy`]."
                      ]
                    },
                    {
                      "name": "mint",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::mint`]."
                      ]
                    },
                    {
                      "name": "burn",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "check_owner",
                          "type": 330,
                          "typeName": "Option<AccountIdLookupOf<T>>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::burn`]."
                      ]
                    },
                    {
                      "name": "transfer",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::transfer`]."
                      ]
                    },
                    {
                      "name": "redeposit",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "items",
                          "type": 115,
                          "typeName": "Vec<T::ItemId>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::redeposit`]."
                      ]
                    },
                    {
                      "name": "freeze",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::freeze`]."
                      ]
                    },
                    {
                      "name": "thaw",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::thaw`]."
                      ]
                    },
                    {
                      "name": "freeze_collection",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::freeze_collection`]."
                      ]
                    },
                    {
                      "name": "thaw_collection",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::thaw_collection`]."
                      ]
                    },
                    {
                      "name": "transfer_ownership",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::transfer_ownership`]."
                      ]
                    },
                    {
                      "name": "set_team",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "issuer",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "admin",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "freezer",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::set_team`]."
                      ]
                    },
                    {
                      "name": "approve_transfer",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::approve_transfer`]."
                      ]
                    },
                    {
                      "name": "cancel_approval",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "maybe_check_delegate",
                          "type": 330,
                          "typeName": "Option<AccountIdLookupOf<T>>",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::cancel_approval`]."
                      ]
                    },
                    {
                      "name": "force_item_status",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "issuer",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "admin",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "freezer",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "free_holding",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        },
                        {
                          "name": "is_frozen",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::force_item_status`]."
                      ]
                    },
                    {
                      "name": "set_attribute",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "maybe_item",
                          "type": 38,
                          "typeName": "Option<T::ItemId>",
                          "docs": []
                        },
                        {
                          "name": "key",
                          "type": 116,
                          "typeName": "BoundedVec<u8, T::KeyLimit>",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 117,
                          "typeName": "BoundedVec<u8, T::ValueLimit>",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::set_attribute`]."
                      ]
                    },
                    {
                      "name": "clear_attribute",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "maybe_item",
                          "type": 38,
                          "typeName": "Option<T::ItemId>",
                          "docs": []
                        },
                        {
                          "name": "key",
                          "type": 116,
                          "typeName": "BoundedVec<u8, T::KeyLimit>",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "See [`Pallet::clear_attribute`]."
                      ]
                    },
                    {
                      "name": "set_metadata",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "data",
                          "type": 114,
                          "typeName": "BoundedVec<u8, T::StringLimit>",
                          "docs": []
                        },
                        {
                          "name": "is_frozen",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "See [`Pallet::set_metadata`]."
                      ]
                    },
                    {
                      "name": "clear_metadata",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "See [`Pallet::clear_metadata`]."
                      ]
                    },
                    {
                      "name": "set_collection_metadata",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "data",
                          "type": 114,
                          "typeName": "BoundedVec<u8, T::StringLimit>",
                          "docs": []
                        },
                        {
                          "name": "is_frozen",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "See [`Pallet::set_collection_metadata`]."
                      ]
                    },
                    {
                      "name": "clear_collection_metadata",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "See [`Pallet::clear_collection_metadata`]."
                      ]
                    },
                    {
                      "name": "set_accept_ownership",
                      "fields": [
                        {
                          "name": "maybe_collection",
                          "type": 38,
                          "typeName": "Option<T::CollectionId>",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "See [`Pallet::set_accept_ownership`]."
                      ]
                    },
                    {
                      "name": "set_collection_max_supply",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "max_supply",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": [
                        "See [`Pallet::set_collection_max_supply`]."
                      ]
                    },
                    {
                      "name": "set_price",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "price",
                          "type": 331,
                          "typeName": "Option<ItemPrice<T, I>>",
                          "docs": []
                        },
                        {
                          "name": "whitelisted_buyer",
                          "type": 330,
                          "typeName": "Option<AccountIdLookupOf<T>>",
                          "docs": []
                        }
                      ],
                      "index": 24,
                      "docs": [
                        "See [`Pallet::set_price`]."
                      ]
                    },
                    {
                      "name": "buy_item",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "bid_price",
                          "type": 6,
                          "typeName": "ItemPrice<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": [
                        "See [`Pallet::buy_item`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 329,
            "type": {
              "path": [
                "pallet_uniques",
                "types",
                "DestroyWitness"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "items",
                      "type": 158,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "item_metadatas",
                      "type": 158,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "attributes",
                      "type": 158,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 330,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 167
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 167,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 331,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 332,
            "type": {
              "path": [
                "pallet_nfts",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "create",
                      "fields": [
                        {
                          "name": "admin",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "config",
                          "type": 333,
                          "typeName": "CollectionConfigFor<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::create`]."
                      ]
                    },
                    {
                      "name": "force_create",
                      "fields": [
                        {
                          "name": "owner",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "config",
                          "type": 333,
                          "typeName": "CollectionConfigFor<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::force_create`]."
                      ]
                    },
                    {
                      "name": "destroy",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "witness",
                          "type": 340,
                          "typeName": "DestroyWitness",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::destroy`]."
                      ]
                    },
                    {
                      "name": "mint",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "mint_to",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "witness_data",
                          "type": 341,
                          "typeName": "Option<MintWitness<T::ItemId, DepositBalanceOf<T, I>>>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::mint`]."
                      ]
                    },
                    {
                      "name": "force_mint",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "mint_to",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "item_config",
                          "type": 343,
                          "typeName": "ItemConfig",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::force_mint`]."
                      ]
                    },
                    {
                      "name": "burn",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::burn`]."
                      ]
                    },
                    {
                      "name": "transfer",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "dest",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::transfer`]."
                      ]
                    },
                    {
                      "name": "redeposit",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "items",
                          "type": 115,
                          "typeName": "Vec<T::ItemId>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::redeposit`]."
                      ]
                    },
                    {
                      "name": "lock_item_transfer",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::lock_item_transfer`]."
                      ]
                    },
                    {
                      "name": "unlock_item_transfer",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::unlock_item_transfer`]."
                      ]
                    },
                    {
                      "name": "lock_collection",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "lock_settings",
                          "type": 334,
                          "typeName": "CollectionSettings",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::lock_collection`]."
                      ]
                    },
                    {
                      "name": "transfer_ownership",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::transfer_ownership`]."
                      ]
                    },
                    {
                      "name": "set_team",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "issuer",
                          "type": 330,
                          "typeName": "Option<AccountIdLookupOf<T>>",
                          "docs": []
                        },
                        {
                          "name": "admin",
                          "type": 330,
                          "typeName": "Option<AccountIdLookupOf<T>>",
                          "docs": []
                        },
                        {
                          "name": "freezer",
                          "type": 330,
                          "typeName": "Option<AccountIdLookupOf<T>>",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::set_team`]."
                      ]
                    },
                    {
                      "name": "force_collection_owner",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "owner",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::force_collection_owner`]."
                      ]
                    },
                    {
                      "name": "force_collection_config",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "config",
                          "type": 333,
                          "typeName": "CollectionConfigFor<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::force_collection_config`]."
                      ]
                    },
                    {
                      "name": "approve_transfer",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "maybe_deadline",
                          "type": 38,
                          "typeName": "Option<BlockNumberFor<T>>",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::approve_transfer`]."
                      ]
                    },
                    {
                      "name": "cancel_approval",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::cancel_approval`]."
                      ]
                    },
                    {
                      "name": "clear_all_transfer_approvals",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "See [`Pallet::clear_all_transfer_approvals`]."
                      ]
                    },
                    {
                      "name": "lock_item_properties",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "lock_metadata",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        },
                        {
                          "name": "lock_attributes",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "See [`Pallet::lock_item_properties`]."
                      ]
                    },
                    {
                      "name": "set_attribute",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "maybe_item",
                          "type": 38,
                          "typeName": "Option<T::ItemId>",
                          "docs": []
                        },
                        {
                          "name": "namespace",
                          "type": 120,
                          "typeName": "AttributeNamespace<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "key",
                          "type": 117,
                          "typeName": "BoundedVec<u8, T::KeyLimit>",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 119,
                          "typeName": "BoundedVec<u8, T::ValueLimit>",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "See [`Pallet::set_attribute`]."
                      ]
                    },
                    {
                      "name": "force_set_attribute",
                      "fields": [
                        {
                          "name": "set_as",
                          "type": 42,
                          "typeName": "Option<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "maybe_item",
                          "type": 38,
                          "typeName": "Option<T::ItemId>",
                          "docs": []
                        },
                        {
                          "name": "namespace",
                          "type": 120,
                          "typeName": "AttributeNamespace<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "key",
                          "type": 117,
                          "typeName": "BoundedVec<u8, T::KeyLimit>",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 119,
                          "typeName": "BoundedVec<u8, T::ValueLimit>",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "See [`Pallet::force_set_attribute`]."
                      ]
                    },
                    {
                      "name": "clear_attribute",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "maybe_item",
                          "type": 38,
                          "typeName": "Option<T::ItemId>",
                          "docs": []
                        },
                        {
                          "name": "namespace",
                          "type": 120,
                          "typeName": "AttributeNamespace<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "key",
                          "type": 117,
                          "typeName": "BoundedVec<u8, T::KeyLimit>",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "See [`Pallet::clear_attribute`]."
                      ]
                    },
                    {
                      "name": "approve_item_attributes",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "See [`Pallet::approve_item_attributes`]."
                      ]
                    },
                    {
                      "name": "cancel_item_attributes_approval",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "delegate",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "witness",
                          "type": 344,
                          "typeName": "CancelAttributesApprovalWitness",
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": [
                        "See [`Pallet::cancel_item_attributes_approval`]."
                      ]
                    },
                    {
                      "name": "set_metadata",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "data",
                          "type": 119,
                          "typeName": "BoundedVec<u8, T::StringLimit>",
                          "docs": []
                        }
                      ],
                      "index": 24,
                      "docs": [
                        "See [`Pallet::set_metadata`]."
                      ]
                    },
                    {
                      "name": "clear_metadata",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": [
                        "See [`Pallet::clear_metadata`]."
                      ]
                    },
                    {
                      "name": "set_collection_metadata",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "data",
                          "type": 119,
                          "typeName": "BoundedVec<u8, T::StringLimit>",
                          "docs": []
                        }
                      ],
                      "index": 26,
                      "docs": [
                        "See [`Pallet::set_collection_metadata`]."
                      ]
                    },
                    {
                      "name": "clear_collection_metadata",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        }
                      ],
                      "index": 27,
                      "docs": [
                        "See [`Pallet::clear_collection_metadata`]."
                      ]
                    },
                    {
                      "name": "set_accept_ownership",
                      "fields": [
                        {
                          "name": "maybe_collection",
                          "type": 38,
                          "typeName": "Option<T::CollectionId>",
                          "docs": []
                        }
                      ],
                      "index": 28,
                      "docs": [
                        "See [`Pallet::set_accept_ownership`]."
                      ]
                    },
                    {
                      "name": "set_collection_max_supply",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "max_supply",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 29,
                      "docs": [
                        "See [`Pallet::set_collection_max_supply`]."
                      ]
                    },
                    {
                      "name": "update_mint_settings",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "mint_settings",
                          "type": 336,
                          "typeName": "MintSettings<BalanceOf<T, I>, BlockNumberFor<T>, T::CollectionId>",
                          "docs": []
                        }
                      ],
                      "index": 30,
                      "docs": [
                        "See [`Pallet::update_mint_settings`]."
                      ]
                    },
                    {
                      "name": "set_price",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "price",
                          "type": 331,
                          "typeName": "Option<ItemPrice<T, I>>",
                          "docs": []
                        },
                        {
                          "name": "whitelisted_buyer",
                          "type": 330,
                          "typeName": "Option<AccountIdLookupOf<T>>",
                          "docs": []
                        }
                      ],
                      "index": 31,
                      "docs": [
                        "See [`Pallet::set_price`]."
                      ]
                    },
                    {
                      "name": "buy_item",
                      "fields": [
                        {
                          "name": "collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "bid_price",
                          "type": 6,
                          "typeName": "ItemPrice<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 32,
                      "docs": [
                        "See [`Pallet::buy_item`]."
                      ]
                    },
                    {
                      "name": "pay_tips",
                      "fields": [
                        {
                          "name": "tips",
                          "type": 345,
                          "typeName": "BoundedVec<ItemTipOf<T, I>, T::MaxTips>",
                          "docs": []
                        }
                      ],
                      "index": 33,
                      "docs": [
                        "See [`Pallet::pay_tips`]."
                      ]
                    },
                    {
                      "name": "create_swap",
                      "fields": [
                        {
                          "name": "offered_collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "offered_item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "desired_collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "maybe_desired_item",
                          "type": 38,
                          "typeName": "Option<T::ItemId>",
                          "docs": []
                        },
                        {
                          "name": "maybe_price",
                          "type": 121,
                          "typeName": "Option<PriceWithDirection<ItemPrice<T, I>>>",
                          "docs": []
                        },
                        {
                          "name": "duration",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 34,
                      "docs": [
                        "See [`Pallet::create_swap`]."
                      ]
                    },
                    {
                      "name": "cancel_swap",
                      "fields": [
                        {
                          "name": "offered_collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "offered_item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        }
                      ],
                      "index": 35,
                      "docs": [
                        "See [`Pallet::cancel_swap`]."
                      ]
                    },
                    {
                      "name": "claim_swap",
                      "fields": [
                        {
                          "name": "send_collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "send_item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "receive_collection",
                          "type": 4,
                          "typeName": "T::CollectionId",
                          "docs": []
                        },
                        {
                          "name": "receive_item",
                          "type": 4,
                          "typeName": "T::ItemId",
                          "docs": []
                        },
                        {
                          "name": "witness_price",
                          "type": 121,
                          "typeName": "Option<PriceWithDirection<ItemPrice<T, I>>>",
                          "docs": []
                        }
                      ],
                      "index": 36,
                      "docs": [
                        "See [`Pallet::claim_swap`]."
                      ]
                    },
                    {
                      "name": "mint_pre_signed",
                      "fields": [
                        {
                          "name": "mint_data",
                          "type": 348,
                          "typeName": "Box<PreSignedMintOf<T, I>>",
                          "docs": []
                        },
                        {
                          "name": "signature",
                          "type": 349,
                          "typeName": "T::OffchainSignature",
                          "docs": []
                        },
                        {
                          "name": "signer",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 37,
                      "docs": [
                        "See [`Pallet::mint_pre_signed`]."
                      ]
                    },
                    {
                      "name": "set_attributes_pre_signed",
                      "fields": [
                        {
                          "name": "data",
                          "type": 352,
                          "typeName": "PreSignedAttributesOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "signature",
                          "type": 349,
                          "typeName": "T::OffchainSignature",
                          "docs": []
                        },
                        {
                          "name": "signer",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 38,
                      "docs": [
                        "See [`Pallet::set_attributes_pre_signed`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 333,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "CollectionConfig"
              ],
              "params": [
                {
                  "name": "Price",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "CollectionId",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "settings",
                      "type": 334,
                      "typeName": "CollectionSettings",
                      "docs": []
                    },
                    {
                      "name": "max_supply",
                      "type": 38,
                      "typeName": "Option<u32>",
                      "docs": []
                    },
                    {
                      "name": "mint_settings",
                      "type": 336,
                      "typeName": "MintSettings<Price, BlockNumber, CollectionId>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 334,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "BitFlags"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 335
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 11,
                      "typeName": "CollectionSetting",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 335,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "CollectionSetting"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TransferableItems",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "UnlockedMetadata",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "UnlockedAttributes",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "UnlockedMaxSupply",
                      "fields": [],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "DepositRequired",
                      "fields": [],
                      "index": 16,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 336,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "MintSettings"
              ],
              "params": [
                {
                  "name": "Price",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "CollectionId",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "mint_type",
                      "type": 337,
                      "typeName": "MintType<CollectionId>",
                      "docs": []
                    },
                    {
                      "name": "price",
                      "type": 331,
                      "typeName": "Option<Price>",
                      "docs": []
                    },
                    {
                      "name": "start_block",
                      "type": 38,
                      "typeName": "Option<BlockNumber>",
                      "docs": []
                    },
                    {
                      "name": "end_block",
                      "type": 38,
                      "typeName": "Option<BlockNumber>",
                      "docs": []
                    },
                    {
                      "name": "default_item_settings",
                      "type": 338,
                      "typeName": "ItemSettings",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 337,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "MintType"
              ],
              "params": [
                {
                  "name": "CollectionId",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Issuer",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Public",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "HolderOf",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "CollectionId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 338,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "BitFlags"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 339
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 11,
                      "typeName": "ItemSetting",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 339,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "ItemSetting"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Transferable",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "UnlockedMetadata",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "UnlockedAttributes",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 340,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "DestroyWitness"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "item_metadatas",
                      "type": 158,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "item_configs",
                      "type": 158,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "attributes",
                      "type": 158,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 341,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 342
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 342,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 342,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "MintWitness"
              ],
              "params": [
                {
                  "name": "ItemId",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "owned_item",
                      "type": 38,
                      "typeName": "Option<ItemId>",
                      "docs": []
                    },
                    {
                      "name": "mint_price",
                      "type": 331,
                      "typeName": "Option<Balance>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 343,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "ItemConfig"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "settings",
                      "type": 338,
                      "typeName": "ItemSettings",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 344,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "CancelAttributesApprovalWitness"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "account_attributes",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 345,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 346
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 347,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 346,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "ItemTip"
              ],
              "params": [
                {
                  "name": "CollectionId",
                  "type": 4
                },
                {
                  "name": "ItemId",
                  "type": 4
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Amount",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "collection",
                      "type": 4,
                      "typeName": "CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "type": 4,
                      "typeName": "ItemId",
                      "docs": []
                    },
                    {
                      "name": "receiver",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Amount",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 347,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 346
                }
              },
              "docs": []
            }
          },
          {
            "id": 348,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "PreSignedMint"
              ],
              "params": [
                {
                  "name": "CollectionId",
                  "type": 4
                },
                {
                  "name": "ItemId",
                  "type": 4
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Deadline",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "collection",
                      "type": 4,
                      "typeName": "CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "type": 4,
                      "typeName": "ItemId",
                      "docs": []
                    },
                    {
                      "name": "attributes",
                      "type": 144,
                      "typeName": "Vec<(Vec<u8>, Vec<u8>)>",
                      "docs": []
                    },
                    {
                      "name": "metadata",
                      "type": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "only_account",
                      "type": 42,
                      "typeName": "Option<AccountId>",
                      "docs": []
                    },
                    {
                      "name": "deadline",
                      "type": 4,
                      "typeName": "Deadline",
                      "docs": []
                    },
                    {
                      "name": "mint_price",
                      "type": 331,
                      "typeName": "Option<Balance>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 349,
            "type": {
              "path": [
                "sp_runtime",
                "MultiSignature"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ed25519",
                      "fields": [
                        {
                          "name": null,
                          "type": 253,
                          "typeName": "ed25519::Signature",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Sr25519",
                      "fields": [
                        {
                          "name": null,
                          "type": 268,
                          "typeName": "sr25519::Signature",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Ecdsa",
                      "fields": [
                        {
                          "name": null,
                          "type": 350,
                          "typeName": "ecdsa::Signature",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 350,
            "type": {
              "path": [
                "sp_core",
                "ecdsa",
                "Signature"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 351,
                      "typeName": "[u8; SIGNATURE_SERIALIZED_SIZE]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 351,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 65,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 352,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "PreSignedAttributes"
              ],
              "params": [
                {
                  "name": "CollectionId",
                  "type": 4
                },
                {
                  "name": "ItemId",
                  "type": 4
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Deadline",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "collection",
                      "type": 4,
                      "typeName": "CollectionId",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "type": 4,
                      "typeName": "ItemId",
                      "docs": []
                    },
                    {
                      "name": "attributes",
                      "type": 144,
                      "typeName": "Vec<(Vec<u8>, Vec<u8>)>",
                      "docs": []
                    },
                    {
                      "name": "namespace",
                      "type": 120,
                      "typeName": "AttributeNamespace<AccountId>",
                      "docs": []
                    },
                    {
                      "name": "deadline",
                      "type": 4,
                      "typeName": "Deadline",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 353,
            "type": {
              "path": [
                "pallet_nft_fractionalization",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "fractionalize",
                      "fields": [
                        {
                          "name": "nft_collection_id",
                          "type": 4,
                          "typeName": "T::NftCollectionId",
                          "docs": []
                        },
                        {
                          "name": "nft_id",
                          "type": 4,
                          "typeName": "T::NftId",
                          "docs": []
                        },
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "AssetIdOf<T>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "fractions",
                          "type": 6,
                          "typeName": "AssetBalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::fractionalize`]."
                      ]
                    },
                    {
                      "name": "unify",
                      "fields": [
                        {
                          "name": "nft_collection_id",
                          "type": 4,
                          "typeName": "T::NftCollectionId",
                          "docs": []
                        },
                        {
                          "name": "nft_id",
                          "type": 4,
                          "typeName": "T::NftId",
                          "docs": []
                        },
                        {
                          "name": "asset_id",
                          "type": 4,
                          "typeName": "AssetIdOf<T>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::unify`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 354,
            "type": {
              "path": [
                "pallet_salary",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "init",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::init`]."
                      ]
                    },
                    {
                      "name": "bump",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::bump`]."
                      ]
                    },
                    {
                      "name": "induct",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::induct`]."
                      ]
                    },
                    {
                      "name": "register",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::register`]."
                      ]
                    },
                    {
                      "name": "payout",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::payout`]."
                      ]
                    },
                    {
                      "name": "payout_other",
                      "fields": [
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::payout_other`]."
                      ]
                    },
                    {
                      "name": "check_payment",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::check_payment`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 355,
            "type": {
              "path": [
                "pallet_core_fellowship",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "bump",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::bump`]."
                      ]
                    },
                    {
                      "name": "set_params",
                      "fields": [
                        {
                          "name": "params",
                          "type": 128,
                          "typeName": "Box<ParamsOf<T, I>>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::set_params`]."
                      ]
                    },
                    {
                      "name": "set_active",
                      "fields": [
                        {
                          "name": "is_active",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::set_active`]."
                      ]
                    },
                    {
                      "name": "approve",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "at_rank",
                          "type": 102,
                          "typeName": "RankOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::approve`]."
                      ]
                    },
                    {
                      "name": "induct",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::induct`]."
                      ]
                    },
                    {
                      "name": "promote",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "to_rank",
                          "type": 102,
                          "typeName": "RankOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::promote`]."
                      ]
                    },
                    {
                      "name": "offboard",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::offboard`]."
                      ]
                    },
                    {
                      "name": "submit_evidence",
                      "fields": [
                        {
                          "name": "wish",
                          "type": 131,
                          "typeName": "Wish",
                          "docs": []
                        },
                        {
                          "name": "evidence",
                          "type": 132,
                          "typeName": "Evidence<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::submit_evidence`]."
                      ]
                    },
                    {
                      "name": "import",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::import`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 356,
            "type": {
              "path": [
                "pallet_transaction_storage",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "store",
                      "fields": [
                        {
                          "name": "data",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::store`]."
                      ]
                    },
                    {
                      "name": "renew",
                      "fields": [
                        {
                          "name": "block",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::renew`]."
                      ]
                    },
                    {
                      "name": "check_proof",
                      "fields": [
                        {
                          "name": "proof",
                          "type": 357,
                          "typeName": "TransactionStorageProof",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::check_proof`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 357,
            "type": {
              "path": [
                "sp_transaction_storage_proof",
                "TransactionStorageProof"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "chunk",
                      "type": 13,
                      "typeName": "Vec<u8>",
                      "docs": []
                    },
                    {
                      "name": "proof",
                      "type": 146,
                      "typeName": "Vec<Vec<u8>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 358,
            "type": {
              "path": [
                "pallet_bags_list",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "rebag",
                      "fields": [
                        {
                          "name": "dislocated",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::rebag`]."
                      ]
                    },
                    {
                      "name": "put_in_front_of",
                      "fields": [
                        {
                          "name": "lighter",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::put_in_front_of`]."
                      ]
                    },
                    {
                      "name": "put_in_front_of_other",
                      "fields": [
                        {
                          "name": "heavier",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "lighter",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::put_in_front_of_other`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 359,
            "type": {
              "path": [
                "pallet_state_trie_migration",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "control_auto_migration",
                      "fields": [
                        {
                          "name": "maybe_config",
                          "type": 360,
                          "typeName": "Option<MigrationLimits>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::control_auto_migration`]."
                      ]
                    },
                    {
                      "name": "continue_migrate",
                      "fields": [
                        {
                          "name": "limits",
                          "type": 361,
                          "typeName": "MigrationLimits",
                          "docs": []
                        },
                        {
                          "name": "real_size_upper",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "witness_task",
                          "type": 362,
                          "typeName": "MigrationTask<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::continue_migrate`]."
                      ]
                    },
                    {
                      "name": "migrate_custom_top",
                      "fields": [
                        {
                          "name": "keys",
                          "type": 146,
                          "typeName": "Vec<Vec<u8>>",
                          "docs": []
                        },
                        {
                          "name": "witness_size",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::migrate_custom_top`]."
                      ]
                    },
                    {
                      "name": "migrate_custom_child",
                      "fields": [
                        {
                          "name": "root",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        },
                        {
                          "name": "child_keys",
                          "type": 146,
                          "typeName": "Vec<Vec<u8>>",
                          "docs": []
                        },
                        {
                          "name": "total_size",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::migrate_custom_child`]."
                      ]
                    },
                    {
                      "name": "set_signed_max_limits",
                      "fields": [
                        {
                          "name": "limits",
                          "type": 361,
                          "typeName": "MigrationLimits",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::set_signed_max_limits`]."
                      ]
                    },
                    {
                      "name": "force_set_progress",
                      "fields": [
                        {
                          "name": "progress_top",
                          "type": 363,
                          "typeName": "ProgressOf<T>",
                          "docs": []
                        },
                        {
                          "name": "progress_child",
                          "type": 363,
                          "typeName": "ProgressOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::force_set_progress`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 360,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 361
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 361,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 361,
            "type": {
              "path": [
                "pallet_state_trie_migration",
                "pallet",
                "MigrationLimits"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "item",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 362,
            "type": {
              "path": [
                "pallet_state_trie_migration",
                "pallet",
                "MigrationTask"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "progress_top",
                      "type": 363,
                      "typeName": "ProgressOf<T>",
                      "docs": []
                    },
                    {
                      "name": "progress_child",
                      "type": 363,
                      "typeName": "ProgressOf<T>",
                      "docs": []
                    },
                    {
                      "name": "size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "top_items",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "child_items",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 363,
            "type": {
              "path": [
                "pallet_state_trie_migration",
                "pallet",
                "Progress"
              ],
              "params": [
                {
                  "name": "MaxKeyLen",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ToStart",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "LastKey",
                      "fields": [
                        {
                          "name": null,
                          "type": 364,
                          "typeName": "BoundedVec<u8, MaxKeyLen>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Complete",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 364,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 365,
            "type": {
              "path": [
                "pallet_child_bounties",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "add_child_bounty",
                      "fields": [
                        {
                          "name": "parent_bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "value",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "description",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::add_child_bounty`]."
                      ]
                    },
                    {
                      "name": "propose_curator",
                      "fields": [
                        {
                          "name": "parent_bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "child_bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "curator",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "fee",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::propose_curator`]."
                      ]
                    },
                    {
                      "name": "accept_curator",
                      "fields": [
                        {
                          "name": "parent_bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "child_bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::accept_curator`]."
                      ]
                    },
                    {
                      "name": "unassign_curator",
                      "fields": [
                        {
                          "name": "parent_bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "child_bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::unassign_curator`]."
                      ]
                    },
                    {
                      "name": "award_child_bounty",
                      "fields": [
                        {
                          "name": "parent_bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "child_bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::award_child_bounty`]."
                      ]
                    },
                    {
                      "name": "claim_child_bounty",
                      "fields": [
                        {
                          "name": "parent_bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "child_bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::claim_child_bounty`]."
                      ]
                    },
                    {
                      "name": "close_child_bounty",
                      "fields": [
                        {
                          "name": "parent_bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        },
                        {
                          "name": "child_bounty_id",
                          "type": 158,
                          "typeName": "BountyIndex",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::close_child_bounty`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 366,
            "type": {
              "path": [
                "pallet_referenda",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "submit",
                      "fields": [
                        {
                          "name": "proposal_origin",
                          "type": 149,
                          "typeName": "Box<PalletsOriginOf<T>>",
                          "docs": []
                        },
                        {
                          "name": "proposal",
                          "type": 141,
                          "typeName": "BoundedCallOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "enactment_moment",
                          "type": 367,
                          "typeName": "DispatchTime<BlockNumberFor<T>>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::submit`]."
                      ]
                    },
                    {
                      "name": "place_decision_deposit",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::place_decision_deposit`]."
                      ]
                    },
                    {
                      "name": "refund_decision_deposit",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::refund_decision_deposit`]."
                      ]
                    },
                    {
                      "name": "cancel",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::cancel`]."
                      ]
                    },
                    {
                      "name": "kill",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::kill`]."
                      ]
                    },
                    {
                      "name": "nudge_referendum",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::nudge_referendum`]."
                      ]
                    },
                    {
                      "name": "one_fewer_deciding",
                      "fields": [
                        {
                          "name": "track",
                          "type": 102,
                          "typeName": "TrackIdOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::one_fewer_deciding`]."
                      ]
                    },
                    {
                      "name": "refund_submission_deposit",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::refund_submission_deposit`]."
                      ]
                    },
                    {
                      "name": "set_metadata",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        },
                        {
                          "name": "maybe_hash",
                          "type": 241,
                          "typeName": "Option<T::Hash>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::set_metadata`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 367,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "schedule",
                "DispatchTime"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "At",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "BlockNumber",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "After",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "BlockNumber",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 368,
            "type": {
              "path": [
                "pallet_remark",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "store",
                      "fields": [
                        {
                          "name": "remark",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::store`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 369,
            "type": {
              "path": [
                "pallet_root_testing",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "fill_block",
                      "fields": [
                        {
                          "name": "ratio",
                          "type": 49,
                          "typeName": "Perbill",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See `Pallet::fill_block`."
                      ]
                    },
                    {
                      "name": "trigger_defensive",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "See `Pallet::trigger_defensive`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 370,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "vote",
                      "fields": [
                        {
                          "name": "poll_index",
                          "type": 158,
                          "typeName": "PollIndexOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "vote",
                          "type": 371,
                          "typeName": "AccountVote<BalanceOf<T, I>>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::vote`]."
                      ]
                    },
                    {
                      "name": "delegate",
                      "fields": [
                        {
                          "name": "class",
                          "type": 102,
                          "typeName": "ClassOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "to",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "conviction",
                          "type": 373,
                          "typeName": "Conviction",
                          "docs": []
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::delegate`]."
                      ]
                    },
                    {
                      "name": "undelegate",
                      "fields": [
                        {
                          "name": "class",
                          "type": 102,
                          "typeName": "ClassOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::undelegate`]."
                      ]
                    },
                    {
                      "name": "unlock",
                      "fields": [
                        {
                          "name": "class",
                          "type": 102,
                          "typeName": "ClassOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "target",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::unlock`]."
                      ]
                    },
                    {
                      "name": "remove_vote",
                      "fields": [
                        {
                          "name": "class",
                          "type": 133,
                          "typeName": "Option<ClassOf<T, I>>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "PollIndexOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::remove_vote`]."
                      ]
                    },
                    {
                      "name": "remove_other_vote",
                      "fields": [
                        {
                          "name": "target",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "class",
                          "type": 102,
                          "typeName": "ClassOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "PollIndexOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::remove_other_vote`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 371,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "vote",
                "AccountVote"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Standard",
                      "fields": [
                        {
                          "name": "vote",
                          "type": 372,
                          "typeName": "Vote",
                          "docs": []
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Split",
                      "fields": [
                        {
                          "name": "aye",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        },
                        {
                          "name": "nay",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "SplitAbstain",
                      "fields": [
                        {
                          "name": "aye",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        },
                        {
                          "name": "nay",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        },
                        {
                          "name": "abstain",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 372,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "vote",
                "Vote"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 2,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 373,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "conviction",
                "Conviction"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Locked1x",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Locked2x",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Locked3x",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Locked4x",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Locked5x",
                      "fields": [],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Locked6x",
                      "fields": [],
                      "index": 6,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 374,
            "type": {
              "path": [
                "pallet_whitelist",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "whitelist_call",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::whitelist_call`]."
                      ]
                    },
                    {
                      "name": "remove_whitelisted_call",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::remove_whitelisted_call`]."
                      ]
                    },
                    {
                      "name": "dispatch_whitelisted_call",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "call_encoded_len",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "call_weight_witness",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::dispatch_whitelisted_call`]."
                      ]
                    },
                    {
                      "name": "dispatch_whitelisted_call_with_preimage",
                      "fields": [
                        {
                          "name": "call",
                          "type": 142,
                          "typeName": "Box<<T as Config>::RuntimeCall>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::dispatch_whitelisted_call_with_preimage`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 375,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "set_members",
                      "fields": [
                        {
                          "name": "new_members",
                          "type": 90,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "prime",
                          "type": 42,
                          "typeName": "Option<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "old_count",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::set_members`]."
                      ]
                    },
                    {
                      "name": "execute",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 142,
                          "typeName": "Box<<T as Config<I>>::Proposal>",
                          "docs": []
                        },
                        {
                          "name": "length_bound",
                          "type": 158,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::execute`]."
                      ]
                    },
                    {
                      "name": "propose",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 158,
                          "typeName": "MemberCount",
                          "docs": []
                        },
                        {
                          "name": "proposal",
                          "type": 142,
                          "typeName": "Box<<T as Config<I>>::Proposal>",
                          "docs": []
                        },
                        {
                          "name": "length_bound",
                          "type": 158,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::propose`]."
                      ]
                    },
                    {
                      "name": "vote",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 158,
                          "typeName": "ProposalIndex",
                          "docs": []
                        },
                        {
                          "name": "approve",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::vote`]."
                      ]
                    },
                    {
                      "name": "disapprove_proposal",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::disapprove_proposal`]."
                      ]
                    },
                    {
                      "name": "close",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 158,
                          "typeName": "ProposalIndex",
                          "docs": []
                        },
                        {
                          "name": "proposal_weight_bound",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        },
                        {
                          "name": "length_bound",
                          "type": 158,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::close`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 376,
            "type": {
              "path": [
                "pallet_alliance",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "propose",
                      "fields": [
                        {
                          "name": "threshold",
                          "type": 158,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "proposal",
                          "type": 142,
                          "typeName": "Box<<T as Config<I>>::Proposal>",
                          "docs": []
                        },
                        {
                          "name": "length_bound",
                          "type": 158,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::propose`]."
                      ]
                    },
                    {
                      "name": "vote",
                      "fields": [
                        {
                          "name": "proposal",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 158,
                          "typeName": "ProposalIndex",
                          "docs": []
                        },
                        {
                          "name": "approve",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::vote`]."
                      ]
                    },
                    {
                      "name": "init_members",
                      "fields": [
                        {
                          "name": "fellows",
                          "type": 90,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "allies",
                          "type": 90,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::init_members`]."
                      ]
                    },
                    {
                      "name": "disband",
                      "fields": [
                        {
                          "name": "witness",
                          "type": 377,
                          "typeName": "DisbandWitness",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::disband`]."
                      ]
                    },
                    {
                      "name": "set_rule",
                      "fields": [
                        {
                          "name": "rule",
                          "type": 378,
                          "typeName": "Cid",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::set_rule`]."
                      ]
                    },
                    {
                      "name": "announce",
                      "fields": [
                        {
                          "name": "announcement",
                          "type": 378,
                          "typeName": "Cid",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::announce`]."
                      ]
                    },
                    {
                      "name": "remove_announcement",
                      "fields": [
                        {
                          "name": "announcement",
                          "type": 378,
                          "typeName": "Cid",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::remove_announcement`]."
                      ]
                    },
                    {
                      "name": "join_alliance",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::join_alliance`]."
                      ]
                    },
                    {
                      "name": "nominate_ally",
                      "fields": [
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::nominate_ally`]."
                      ]
                    },
                    {
                      "name": "elevate_ally",
                      "fields": [
                        {
                          "name": "ally",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::elevate_ally`]."
                      ]
                    },
                    {
                      "name": "give_retirement_notice",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::give_retirement_notice`]."
                      ]
                    },
                    {
                      "name": "retire",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::retire`]."
                      ]
                    },
                    {
                      "name": "kick_member",
                      "fields": [
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::kick_member`]."
                      ]
                    },
                    {
                      "name": "add_unscrupulous_items",
                      "fields": [
                        {
                          "name": "items",
                          "type": 382,
                          "typeName": "Vec<UnscrupulousItemOf<T, I>>",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::add_unscrupulous_items`]."
                      ]
                    },
                    {
                      "name": "remove_unscrupulous_items",
                      "fields": [
                        {
                          "name": "items",
                          "type": 382,
                          "typeName": "Vec<UnscrupulousItemOf<T, I>>",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::remove_unscrupulous_items`]."
                      ]
                    },
                    {
                      "name": "close",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 158,
                          "typeName": "ProposalIndex",
                          "docs": []
                        },
                        {
                          "name": "proposal_weight_bound",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        },
                        {
                          "name": "length_bound",
                          "type": 158,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::close`]."
                      ]
                    },
                    {
                      "name": "abdicate_fellow_status",
                      "fields": [],
                      "index": 17,
                      "docs": [
                        "See [`Pallet::abdicate_fellow_status`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 377,
            "type": {
              "path": [
                "pallet_alliance",
                "types",
                "DisbandWitness"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "fellow_members",
                      "type": 158,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "ally_members",
                      "type": 158,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 378,
            "type": {
              "path": [
                "pallet_alliance",
                "types",
                "Cid"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "version",
                      "type": 379,
                      "typeName": "Version",
                      "docs": []
                    },
                    {
                      "name": "codec",
                      "type": 11,
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "hash",
                      "type": 380,
                      "typeName": "Multihash",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 379,
            "type": {
              "path": [
                "pallet_alliance",
                "types",
                "Version"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V0",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "V1",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 380,
            "type": {
              "path": [
                "pallet_alliance",
                "types",
                "Multihash"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "code",
                      "type": 11,
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "digest",
                      "type": 381,
                      "typeName": "BoundedVec<u8, ConstU32<68>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 381,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 382,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 383
                }
              },
              "docs": []
            }
          },
          {
            "id": 383,
            "type": {
              "path": [
                "pallet_alliance",
                "UnscrupulousItem"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Url",
                  "type": 384
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AccountId",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Website",
                      "fields": [
                        {
                          "name": null,
                          "type": 384,
                          "typeName": "Url",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 384,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 385,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "join",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::join`]."
                      ]
                    },
                    {
                      "name": "bond_extra",
                      "fields": [
                        {
                          "name": "extra",
                          "type": 386,
                          "typeName": "BondExtra<BalanceOf<T>>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::bond_extra`]."
                      ]
                    },
                    {
                      "name": "claim_payout",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::claim_payout`]."
                      ]
                    },
                    {
                      "name": "unbond",
                      "fields": [
                        {
                          "name": "member_account",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "unbonding_points",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::unbond`]."
                      ]
                    },
                    {
                      "name": "pool_withdraw_unbonded",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "num_slashing_spans",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::pool_withdraw_unbonded`]."
                      ]
                    },
                    {
                      "name": "withdraw_unbonded",
                      "fields": [
                        {
                          "name": "member_account",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "num_slashing_spans",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::withdraw_unbonded`]."
                      ]
                    },
                    {
                      "name": "create",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "root",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "nominator",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "bouncer",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::create`]."
                      ]
                    },
                    {
                      "name": "create_with_pool_id",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 83,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "root",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "nominator",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "bouncer",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::create_with_pool_id`]."
                      ]
                    },
                    {
                      "name": "nominate",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "validators",
                          "type": 90,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::nominate`]."
                      ]
                    },
                    {
                      "name": "set_state",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "state",
                          "type": 387,
                          "typeName": "PoolState",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::set_state`]."
                      ]
                    },
                    {
                      "name": "set_metadata",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "metadata",
                          "type": 13,
                          "typeName": "Vec<u8>",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::set_metadata`]."
                      ]
                    },
                    {
                      "name": "set_configs",
                      "fields": [
                        {
                          "name": "min_join_bond",
                          "type": 388,
                          "typeName": "ConfigOp<BalanceOf<T>>",
                          "docs": []
                        },
                        {
                          "name": "min_create_bond",
                          "type": 388,
                          "typeName": "ConfigOp<BalanceOf<T>>",
                          "docs": []
                        },
                        {
                          "name": "max_pools",
                          "type": 389,
                          "typeName": "ConfigOp<u32>",
                          "docs": []
                        },
                        {
                          "name": "max_members",
                          "type": 389,
                          "typeName": "ConfigOp<u32>",
                          "docs": []
                        },
                        {
                          "name": "max_members_per_pool",
                          "type": 389,
                          "typeName": "ConfigOp<u32>",
                          "docs": []
                        },
                        {
                          "name": "global_max_commission",
                          "type": 390,
                          "typeName": "ConfigOp<Perbill>",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::set_configs`]."
                      ]
                    },
                    {
                      "name": "update_roles",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "new_root",
                          "type": 391,
                          "typeName": "ConfigOp<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "new_nominator",
                          "type": 391,
                          "typeName": "ConfigOp<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "new_bouncer",
                          "type": 391,
                          "typeName": "ConfigOp<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::update_roles`]."
                      ]
                    },
                    {
                      "name": "chill",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::chill`]."
                      ]
                    },
                    {
                      "name": "bond_extra_other",
                      "fields": [
                        {
                          "name": "member",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "extra",
                          "type": 386,
                          "typeName": "BondExtra<BalanceOf<T>>",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::bond_extra_other`]."
                      ]
                    },
                    {
                      "name": "set_claim_permission",
                      "fields": [
                        {
                          "name": "permission",
                          "type": 392,
                          "typeName": "ClaimPermission",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::set_claim_permission`]."
                      ]
                    },
                    {
                      "name": "claim_payout_other",
                      "fields": [
                        {
                          "name": "other",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::claim_payout_other`]."
                      ]
                    },
                    {
                      "name": "set_commission",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "new_commission",
                          "type": 393,
                          "typeName": "Option<(Perbill, T::AccountId)>",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "See [`Pallet::set_commission`]."
                      ]
                    },
                    {
                      "name": "set_commission_max",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "max_commission",
                          "type": 49,
                          "typeName": "Perbill",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "See [`Pallet::set_commission_max`]."
                      ]
                    },
                    {
                      "name": "set_commission_change_rate",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "change_rate",
                          "type": 395,
                          "typeName": "CommissionChangeRate<BlockNumberFor<T>>",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "See [`Pallet::set_commission_change_rate`]."
                      ]
                    },
                    {
                      "name": "claim_commission",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "See [`Pallet::claim_commission`]."
                      ]
                    },
                    {
                      "name": "adjust_pool_deposit",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "See [`Pallet::adjust_pool_deposit`]."
                      ]
                    },
                    {
                      "name": "set_commission_claim_permission",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "permission",
                          "type": 396,
                          "typeName": "Option<CommissionClaimPermission<T::AccountId>>",
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "See [`Pallet::set_commission_claim_permission`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 386,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "BondExtra"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FreeBalance",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Rewards",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 387,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "PoolState"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Open",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Blocked",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Destroying",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 388,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "ConfigOp"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noop",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Set",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "T",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Remove",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 389,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "ConfigOp"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noop",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Set",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "T",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Remove",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 390,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "ConfigOp"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 49
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noop",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Set",
                      "fields": [
                        {
                          "name": null,
                          "type": 49,
                          "typeName": "T",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Remove",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 391,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "ConfigOp"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Noop",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Set",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "T",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Remove",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 392,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "ClaimPermission"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Permissioned",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "PermissionlessCompound",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "PermissionlessWithdraw",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "PermissionlessAll",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 393,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 394
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 394,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 394,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  49,
                  0
                ]
              },
              "docs": []
            }
          },
          {
            "id": 395,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "CommissionChangeRate"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max_increase",
                      "type": 49,
                      "typeName": "Perbill",
                      "docs": []
                    },
                    {
                      "name": "min_delay",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 396,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 397
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 397,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 397,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "CommissionClaimPermission"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Permissionless",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Account",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 398,
            "type": {
              "path": [
                "pallet_referenda",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "submit",
                      "fields": [
                        {
                          "name": "proposal_origin",
                          "type": 149,
                          "typeName": "Box<PalletsOriginOf<T>>",
                          "docs": []
                        },
                        {
                          "name": "proposal",
                          "type": 141,
                          "typeName": "BoundedCallOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "enactment_moment",
                          "type": 367,
                          "typeName": "DispatchTime<BlockNumberFor<T>>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::submit`]."
                      ]
                    },
                    {
                      "name": "place_decision_deposit",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::place_decision_deposit`]."
                      ]
                    },
                    {
                      "name": "refund_decision_deposit",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::refund_decision_deposit`]."
                      ]
                    },
                    {
                      "name": "cancel",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::cancel`]."
                      ]
                    },
                    {
                      "name": "kill",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::kill`]."
                      ]
                    },
                    {
                      "name": "nudge_referendum",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::nudge_referendum`]."
                      ]
                    },
                    {
                      "name": "one_fewer_deciding",
                      "fields": [
                        {
                          "name": "track",
                          "type": 102,
                          "typeName": "TrackIdOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::one_fewer_deciding`]."
                      ]
                    },
                    {
                      "name": "refund_submission_deposit",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::refund_submission_deposit`]."
                      ]
                    },
                    {
                      "name": "set_metadata",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": []
                        },
                        {
                          "name": "maybe_hash",
                          "type": 241,
                          "typeName": "Option<T::Hash>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::set_metadata`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 399,
            "type": {
              "path": [
                "pallet_ranked_collective",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "add_member",
                      "fields": [
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::add_member`]."
                      ]
                    },
                    {
                      "name": "promote_member",
                      "fields": [
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::promote_member`]."
                      ]
                    },
                    {
                      "name": "demote_member",
                      "fields": [
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::demote_member`]."
                      ]
                    },
                    {
                      "name": "remove_member",
                      "fields": [
                        {
                          "name": "who",
                          "type": 167,
                          "typeName": "AccountIdLookupOf<T>",
                          "docs": []
                        },
                        {
                          "name": "min_rank",
                          "type": 102,
                          "typeName": "Rank",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::remove_member`]."
                      ]
                    },
                    {
                      "name": "vote",
                      "fields": [
                        {
                          "name": "poll",
                          "type": 4,
                          "typeName": "PollIndexOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "aye",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::vote`]."
                      ]
                    },
                    {
                      "name": "cleanup_poll",
                      "fields": [
                        {
                          "name": "poll_index",
                          "type": 4,
                          "typeName": "PollIndexOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "max",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::cleanup_poll`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 400,
            "type": {
              "path": [
                "pallet_asset_conversion",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "create_pool",
                      "fields": [
                        {
                          "name": "asset1",
                          "type": 401,
                          "typeName": "T::MultiAssetId",
                          "docs": []
                        },
                        {
                          "name": "asset2",
                          "type": 401,
                          "typeName": "T::MultiAssetId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::create_pool`]."
                      ]
                    },
                    {
                      "name": "add_liquidity",
                      "fields": [
                        {
                          "name": "asset1",
                          "type": 401,
                          "typeName": "T::MultiAssetId",
                          "docs": []
                        },
                        {
                          "name": "asset2",
                          "type": 401,
                          "typeName": "T::MultiAssetId",
                          "docs": []
                        },
                        {
                          "name": "amount1_desired",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": []
                        },
                        {
                          "name": "amount2_desired",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": []
                        },
                        {
                          "name": "amount1_min",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": []
                        },
                        {
                          "name": "amount2_min",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": []
                        },
                        {
                          "name": "mint_to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::add_liquidity`]."
                      ]
                    },
                    {
                      "name": "remove_liquidity",
                      "fields": [
                        {
                          "name": "asset1",
                          "type": 401,
                          "typeName": "T::MultiAssetId",
                          "docs": []
                        },
                        {
                          "name": "asset2",
                          "type": 401,
                          "typeName": "T::MultiAssetId",
                          "docs": []
                        },
                        {
                          "name": "lp_token_burn",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": []
                        },
                        {
                          "name": "amount1_min_receive",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": []
                        },
                        {
                          "name": "amount2_min_receive",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": []
                        },
                        {
                          "name": "withdraw_to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::remove_liquidity`]."
                      ]
                    },
                    {
                      "name": "swap_exact_tokens_for_tokens",
                      "fields": [
                        {
                          "name": "path",
                          "type": 402,
                          "typeName": "BoundedVec<T::MultiAssetId, T::MaxSwapPathLength>",
                          "docs": []
                        },
                        {
                          "name": "amount_in",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": []
                        },
                        {
                          "name": "amount_out_min",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": []
                        },
                        {
                          "name": "send_to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "keep_alive",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::swap_exact_tokens_for_tokens`]."
                      ]
                    },
                    {
                      "name": "swap_tokens_for_exact_tokens",
                      "fields": [
                        {
                          "name": "path",
                          "type": 402,
                          "typeName": "BoundedVec<T::MultiAssetId, T::MaxSwapPathLength>",
                          "docs": []
                        },
                        {
                          "name": "amount_out",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": []
                        },
                        {
                          "name": "amount_in_max",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": []
                        },
                        {
                          "name": "send_to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "keep_alive",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::swap_tokens_for_exact_tokens`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Pallet's callable functions."
              ]
            }
          },
          {
            "id": 401,
            "type": {
              "path": [
                "pallet_asset_conversion",
                "types",
                "NativeOrAssetId"
              ],
              "params": [
                {
                  "name": "AssetId",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Native",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Asset",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "AssetId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 402,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 401
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 403,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 403,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 401
                }
              },
              "docs": []
            }
          },
          {
            "id": 404,
            "type": {
              "path": [
                "pallet_fast_unstake",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "register_fast_unstake",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::register_fast_unstake`]."
                      ]
                    },
                    {
                      "name": "deregister",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::deregister`]."
                      ]
                    },
                    {
                      "name": "control",
                      "fields": [
                        {
                          "name": "eras_to_check",
                          "type": 4,
                          "typeName": "EraIndex",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::control`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 405,
            "type": {
              "path": [
                "pallet_message_queue",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "reap_page",
                      "fields": [
                        {
                          "name": "message_origin",
                          "type": 4,
                          "typeName": "MessageOriginOf<T>",
                          "docs": []
                        },
                        {
                          "name": "page_index",
                          "type": 4,
                          "typeName": "PageIndex",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::reap_page`]."
                      ]
                    },
                    {
                      "name": "execute_overweight",
                      "fields": [
                        {
                          "name": "message_origin",
                          "type": 4,
                          "typeName": "MessageOriginOf<T>",
                          "docs": []
                        },
                        {
                          "name": "page",
                          "type": 4,
                          "typeName": "PageIndex",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "T::Size",
                          "docs": []
                        },
                        {
                          "name": "weight_limit",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::execute_overweight`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 406,
            "type": {
              "path": [
                "frame_benchmarking_pallet_pov",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "emit_event",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::emit_event`]."
                      ]
                    },
                    {
                      "name": "noop",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::noop`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 407,
            "type": {
              "path": [
                "pallet_tx_pause",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "pause",
                      "fields": [
                        {
                          "name": "full_name",
                          "type": 408,
                          "typeName": "RuntimeCallNameOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::pause`]."
                      ]
                    },
                    {
                      "name": "unpause",
                      "fields": [
                        {
                          "name": "ident",
                          "type": 408,
                          "typeName": "RuntimeCallNameOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::unpause`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 408,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  119,
                  119
                ]
              },
              "docs": []
            }
          },
          {
            "id": 409,
            "type": {
              "path": [
                "pallet_safe_mode",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "enter",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::enter`]."
                      ]
                    },
                    {
                      "name": "force_enter",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::force_enter`]."
                      ]
                    },
                    {
                      "name": "extend",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::extend`]."
                      ]
                    },
                    {
                      "name": "force_extend",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::force_extend`]."
                      ]
                    },
                    {
                      "name": "force_exit",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::force_exit`]."
                      ]
                    },
                    {
                      "name": "force_slash_deposit",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "block",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::force_slash_deposit`]."
                      ]
                    },
                    {
                      "name": "release_deposit",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "block",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::release_deposit`]."
                      ]
                    },
                    {
                      "name": "force_release_deposit",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "block",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::force_release_deposit`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 410,
            "type": {
              "path": [
                "pallet_broker",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "configure",
                      "fields": [
                        {
                          "name": "config",
                          "type": 411,
                          "typeName": "ConfigRecordOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See [`Pallet::configure`]."
                      ]
                    },
                    {
                      "name": "reserve",
                      "fields": [
                        {
                          "name": "workload",
                          "type": 412,
                          "typeName": "Schedule",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "See [`Pallet::reserve`]."
                      ]
                    },
                    {
                      "name": "unreserve",
                      "fields": [
                        {
                          "name": "item_index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "See [`Pallet::unreserve`]."
                      ]
                    },
                    {
                      "name": "set_lease",
                      "fields": [
                        {
                          "name": "task",
                          "type": 4,
                          "typeName": "TaskId",
                          "docs": []
                        },
                        {
                          "name": "until",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "See [`Pallet::set_lease`]."
                      ]
                    },
                    {
                      "name": "start_sales",
                      "fields": [
                        {
                          "name": "initial_price",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "core_count",
                          "type": 102,
                          "typeName": "CoreIndex",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "See [`Pallet::start_sales`]."
                      ]
                    },
                    {
                      "name": "purchase",
                      "fields": [
                        {
                          "name": "price_limit",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "See [`Pallet::purchase`]."
                      ]
                    },
                    {
                      "name": "renew",
                      "fields": [
                        {
                          "name": "core",
                          "type": 102,
                          "typeName": "CoreIndex",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "See [`Pallet::renew`]."
                      ]
                    },
                    {
                      "name": "transfer",
                      "fields": [
                        {
                          "name": "region_id",
                          "type": 417,
                          "typeName": "RegionId",
                          "docs": []
                        },
                        {
                          "name": "new_owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "See [`Pallet::transfer`]."
                      ]
                    },
                    {
                      "name": "partition",
                      "fields": [
                        {
                          "name": "region_id",
                          "type": 417,
                          "typeName": "RegionId",
                          "docs": []
                        },
                        {
                          "name": "pivot",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "See [`Pallet::partition`]."
                      ]
                    },
                    {
                      "name": "interlace",
                      "fields": [
                        {
                          "name": "region_id",
                          "type": 417,
                          "typeName": "RegionId",
                          "docs": []
                        },
                        {
                          "name": "pivot",
                          "type": 414,
                          "typeName": "CoreMask",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "See [`Pallet::interlace`]."
                      ]
                    },
                    {
                      "name": "assign",
                      "fields": [
                        {
                          "name": "region_id",
                          "type": 417,
                          "typeName": "RegionId",
                          "docs": []
                        },
                        {
                          "name": "task",
                          "type": 4,
                          "typeName": "TaskId",
                          "docs": []
                        },
                        {
                          "name": "finality",
                          "type": 418,
                          "typeName": "Finality",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "See [`Pallet::assign`]."
                      ]
                    },
                    {
                      "name": "pool",
                      "fields": [
                        {
                          "name": "region_id",
                          "type": 417,
                          "typeName": "RegionId",
                          "docs": []
                        },
                        {
                          "name": "payee",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "finality",
                          "type": 418,
                          "typeName": "Finality",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "See [`Pallet::pool`]."
                      ]
                    },
                    {
                      "name": "claim_revenue",
                      "fields": [
                        {
                          "name": "region_id",
                          "type": 417,
                          "typeName": "RegionId",
                          "docs": []
                        },
                        {
                          "name": "max_timeslices",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "See [`Pallet::claim_revenue`]."
                      ]
                    },
                    {
                      "name": "purchase_credit",
                      "fields": [
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "RelayAccountIdOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "See [`Pallet::purchase_credit`]."
                      ]
                    },
                    {
                      "name": "drop_region",
                      "fields": [
                        {
                          "name": "region_id",
                          "type": 417,
                          "typeName": "RegionId",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "See [`Pallet::drop_region`]."
                      ]
                    },
                    {
                      "name": "drop_contribution",
                      "fields": [
                        {
                          "name": "region_id",
                          "type": 417,
                          "typeName": "RegionId",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "See [`Pallet::drop_contribution`]."
                      ]
                    },
                    {
                      "name": "drop_history",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "See [`Pallet::drop_history`]."
                      ]
                    },
                    {
                      "name": "drop_renewal",
                      "fields": [
                        {
                          "name": "core",
                          "type": 102,
                          "typeName": "CoreIndex",
                          "docs": []
                        },
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "See [`Pallet::drop_renewal`]."
                      ]
                    },
                    {
                      "name": "request_core_count",
                      "fields": [
                        {
                          "name": "core_count",
                          "type": 102,
                          "typeName": "CoreIndex",
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "See [`Pallet::request_core_count`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 411,
            "type": {
              "path": [
                "pallet_broker",
                "types",
                "ConfigRecord"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "RelayBlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "advance_notice",
                      "type": 4,
                      "typeName": "RelayBlockNumber",
                      "docs": []
                    },
                    {
                      "name": "interlude_length",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "leadin_length",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "region_length",
                      "type": 4,
                      "typeName": "Timeslice",
                      "docs": []
                    },
                    {
                      "name": "ideal_bulk_proportion",
                      "type": 49,
                      "typeName": "Perbill",
                      "docs": []
                    },
                    {
                      "name": "limit_cores_offered",
                      "type": 133,
                      "typeName": "Option<CoreIndex>",
                      "docs": []
                    },
                    {
                      "name": "renewal_bump",
                      "type": 49,
                      "typeName": "Perbill",
                      "docs": []
                    },
                    {
                      "name": "contribution_timeout",
                      "type": 4,
                      "typeName": "Timeslice",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 412,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 413
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 416,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 413,
            "type": {
              "path": [
                "pallet_broker",
                "types",
                "ScheduleItem"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "mask",
                      "type": 414,
                      "typeName": "CoreMask",
                      "docs": []
                    },
                    {
                      "name": "assignment",
                      "type": 415,
                      "typeName": "CoreAssignment",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 414,
            "type": {
              "path": [
                "pallet_broker",
                "core_mask",
                "CoreMask"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 283,
                      "typeName": "[u8; 10]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 415,
            "type": {
              "path": [
                "pallet_broker",
                "coretime_interface",
                "CoreAssignment"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Idle",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Pool",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Task",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "TaskId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 416,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 413
                }
              },
              "docs": []
            }
          },
          {
            "id": 417,
            "type": {
              "path": [
                "pallet_broker",
                "types",
                "RegionId"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "begin",
                      "type": 4,
                      "typeName": "Timeslice",
                      "docs": []
                    },
                    {
                      "name": "core",
                      "type": 102,
                      "typeName": "CoreIndex",
                      "docs": []
                    },
                    {
                      "name": "mask",
                      "type": 414,
                      "typeName": "CoreMask",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 418,
            "type": {
              "path": [
                "pallet_broker",
                "types",
                "Finality"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Provisional",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Final",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 419,
            "type": {
              "path": [
                "pallet_mixnet",
                "pallet",
                "Call"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "register",
                      "fields": [
                        {
                          "name": "registration",
                          "type": 420,
                          "typeName": "RegistrationFor<T>",
                          "docs": []
                        },
                        {
                          "name": "signature",
                          "type": 424,
                          "typeName": "AuthoritySignature",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "See `Pallet::register`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Contains a variant per dispatchable extrinsic that this pallet has."
              ]
            }
          },
          {
            "id": 420,
            "type": {
              "path": [
                "pallet_mixnet",
                "Registration"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "BoundedMixnode",
                  "type": 421
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "block_number",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "session_index",
                      "type": 4,
                      "typeName": "SessionIndex",
                      "docs": []
                    },
                    {
                      "name": "authority_index",
                      "type": 4,
                      "typeName": "AuthorityIndex",
                      "docs": []
                    },
                    {
                      "name": "mixnode",
                      "type": 421,
                      "typeName": "BoundedMixnode",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 421,
            "type": {
              "path": [
                "pallet_mixnet",
                "BoundedMixnode"
              ],
              "params": [
                {
                  "name": "ExternalAddresses",
                  "type": 422
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "kx_public",
                      "type": 1,
                      "typeName": "KxPublic",
                      "docs": []
                    },
                    {
                      "name": "peer_id",
                      "type": 1,
                      "typeName": "PeerId",
                      "docs": []
                    },
                    {
                      "name": "external_addresses",
                      "type": 422,
                      "typeName": "ExternalAddresses",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 422,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 114
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 423,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 423,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 114
                }
              },
              "docs": []
            }
          },
          {
            "id": 424,
            "type": {
              "path": [
                "sp_mixnet",
                "types",
                "app",
                "Signature"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 268,
                      "typeName": "sr25519::Signature",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 425,
            "type": {
              "path": [
                "sp_runtime",
                "traits",
                "BlakeTwo256"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 426,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "types",
                "Tally"
              ],
              "params": [
                {
                  "name": "Votes",
                  "type": 6
                },
                {
                  "name": "Total",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ayes",
                      "type": 6,
                      "typeName": "Votes",
                      "docs": []
                    },
                    {
                      "name": "nays",
                      "type": 6,
                      "typeName": "Votes",
                      "docs": []
                    },
                    {
                      "name": "support",
                      "type": 6,
                      "typeName": "Votes",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 427,
            "type": {
              "path": [
                "pallet_remark",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Stored",
                      "fields": [
                        {
                          "name": "sender",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "content_hash",
                          "type": 12,
                          "typeName": "sp_core::H256",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Stored data off chain."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 428,
            "type": {
              "path": [
                "pallet_root_testing",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "DefensiveTestCall",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Event dispatched when the trigger_defensive extrinsic is called."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 429,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Delegated",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "An account has delegated their vote to another account. \\[who, target\\]"
                      ]
                    },
                    {
                      "name": "Undelegated",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "An \\[account\\] has cancelled a previous delegation operation."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 430,
            "type": {
              "path": [
                "pallet_whitelist",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "CallWhitelisted",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "WhitelistedCallRemoved",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "WhitelistedCallDispatched",
                      "fields": [
                        {
                          "name": "call_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "result",
                          "type": 431,
                          "typeName": "DispatchResultWithPostInfo",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 431,
            "type": {
              "path": [
                "Result"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 432
                },
                {
                  "name": "E",
                  "type": 434
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ok",
                      "fields": [
                        {
                          "name": null,
                          "type": 432,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Err",
                      "fields": [
                        {
                          "name": null,
                          "type": 434,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 432,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PostDispatchInfo"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "actual_weight",
                      "type": 433,
                      "typeName": "Option<Weight>",
                      "docs": []
                    },
                    {
                      "name": "pays_fee",
                      "type": 24,
                      "typeName": "Pays",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 433,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 9
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 9,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 434,
            "type": {
              "path": [
                "sp_runtime",
                "DispatchErrorWithPostInfo"
              ],
              "params": [
                {
                  "name": "Info",
                  "type": 432
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "post_info",
                      "type": 432,
                      "typeName": "Info",
                      "docs": []
                    },
                    {
                      "name": "error",
                      "type": 25,
                      "typeName": "DispatchError",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 435,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Proposed",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "proposal_index",
                          "type": 4,
                          "typeName": "ProposalIndex",
                          "docs": []
                        },
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "threshold",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A motion (given hash) has been proposed (by given account) with a threshold (given",
                        "`MemberCount`)."
                      ]
                    },
                    {
                      "name": "Voted",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "voted",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        },
                        {
                          "name": "yes",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        },
                        {
                          "name": "no",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A motion (given hash) has been voted on by given account, leaving",
                        "a tally (yes votes and no votes given respectively as `MemberCount`)."
                      ]
                    },
                    {
                      "name": "Approved",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A motion was approved by the required threshold."
                      ]
                    },
                    {
                      "name": "Disapproved",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A motion was not approved by the required threshold."
                      ]
                    },
                    {
                      "name": "Executed",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "result",
                          "type": 31,
                          "typeName": "DispatchResult",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A motion was executed; result will be `Ok` if it returned without error."
                      ]
                    },
                    {
                      "name": "MemberExecuted",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "result",
                          "type": 31,
                          "typeName": "DispatchResult",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A single member did some action; result will be `Ok` if it returned without error."
                      ]
                    },
                    {
                      "name": "Closed",
                      "fields": [
                        {
                          "name": "proposal_hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": []
                        },
                        {
                          "name": "yes",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        },
                        {
                          "name": "no",
                          "type": 4,
                          "typeName": "MemberCount",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A proposal was closed because its threshold was reached or after its duration was up."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 436,
            "type": {
              "path": [
                "pallet_alliance",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewRuleSet",
                      "fields": [
                        {
                          "name": "rule",
                          "type": 378,
                          "typeName": "Cid",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A new rule has been set."
                      ]
                    },
                    {
                      "name": "Announced",
                      "fields": [
                        {
                          "name": "announcement",
                          "type": 378,
                          "typeName": "Cid",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A new announcement has been proposed."
                      ]
                    },
                    {
                      "name": "AnnouncementRemoved",
                      "fields": [
                        {
                          "name": "announcement",
                          "type": 378,
                          "typeName": "Cid",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "An on-chain announcement has been removed."
                      ]
                    },
                    {
                      "name": "MembersInitialized",
                      "fields": [
                        {
                          "name": "fellows",
                          "type": 90,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "allies",
                          "type": 90,
                          "typeName": "Vec<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Some accounts have been initialized as members (fellows/allies)."
                      ]
                    },
                    {
                      "name": "NewAllyJoined",
                      "fields": [
                        {
                          "name": "ally",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "nominator",
                          "type": 42,
                          "typeName": "Option<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "reserved",
                          "type": 331,
                          "typeName": "Option<BalanceOf<T, I>>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An account has been added as an Ally and reserved its deposit."
                      ]
                    },
                    {
                      "name": "AllyElevated",
                      "fields": [
                        {
                          "name": "ally",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "An ally has been elevated to Fellow."
                      ]
                    },
                    {
                      "name": "MemberRetirementPeriodStarted",
                      "fields": [
                        {
                          "name": "member",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A member gave retirement notice and their retirement period started."
                      ]
                    },
                    {
                      "name": "MemberRetired",
                      "fields": [
                        {
                          "name": "member",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "unreserved",
                          "type": 331,
                          "typeName": "Option<BalanceOf<T, I>>",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A member has retired with its deposit unreserved."
                      ]
                    },
                    {
                      "name": "MemberKicked",
                      "fields": [
                        {
                          "name": "member",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "slashed",
                          "type": 331,
                          "typeName": "Option<BalanceOf<T, I>>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "A member has been kicked out with its deposit slashed."
                      ]
                    },
                    {
                      "name": "UnscrupulousItemAdded",
                      "fields": [
                        {
                          "name": "items",
                          "type": 382,
                          "typeName": "Vec<UnscrupulousItemOf<T, I>>",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "Accounts or websites have been added into the list of unscrupulous items."
                      ]
                    },
                    {
                      "name": "UnscrupulousItemRemoved",
                      "fields": [
                        {
                          "name": "items",
                          "type": 382,
                          "typeName": "Vec<UnscrupulousItemOf<T, I>>",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "Accounts or websites have been removed from the list of unscrupulous items."
                      ]
                    },
                    {
                      "name": "AllianceDisbanded",
                      "fields": [
                        {
                          "name": "fellow_members",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "ally_members",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "unreserved",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "Alliance disbanded. Includes number deleted members and unreserved deposits."
                      ]
                    },
                    {
                      "name": "FellowAbdicated",
                      "fields": [
                        {
                          "name": "fellow",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A Fellow abdicated their voting rights. They are now an Ally."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 437,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Created",
                      "fields": [
                        {
                          "name": "depositor",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A pool has been created."
                      ]
                    },
                    {
                      "name": "Bonded",
                      "fields": [
                        {
                          "name": "member",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "bonded",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "joined",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A member has became bonded in a pool."
                      ]
                    },
                    {
                      "name": "PaidOut",
                      "fields": [
                        {
                          "name": "member",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "payout",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A payout has been made to a member."
                      ]
                    },
                    {
                      "name": "Unbonded",
                      "fields": [
                        {
                          "name": "member",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "points",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "era",
                          "type": 4,
                          "typeName": "EraIndex",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A member has unbonded from their pool.",
                        "",
                        "- `balance` is the corresponding balance of the number of points that has been",
                        "  requested to be unbonded (the argument of the `unbond` transaction) from the bonded",
                        "  pool.",
                        "- `points` is the number of points that are issued as a result of `balance` being",
                        "dissolved into the corresponding unbonding pool.",
                        "- `era` is the era in which the balance will be unbonded.",
                        "In the absence of slashing, these values will match. In the presence of slashing, the",
                        "number of points that are issued in the unbonding pool will be less than the amount",
                        "requested to be unbonded."
                      ]
                    },
                    {
                      "name": "Withdrawn",
                      "fields": [
                        {
                          "name": "member",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        },
                        {
                          "name": "points",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A member has withdrawn from their pool.",
                        "",
                        "The given number of `points` have been dissolved in return of `balance`.",
                        "",
                        "Similar to `Unbonded` event, in the absence of slashing, the ratio of point to balance",
                        "will be 1."
                      ]
                    },
                    {
                      "name": "Destroyed",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A pool has been destroyed."
                      ]
                    },
                    {
                      "name": "StateChanged",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "new_state",
                          "type": 387,
                          "typeName": "PoolState",
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "The state of a pool has changed"
                      ]
                    },
                    {
                      "name": "MemberRemoved",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "member",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A member has been removed from a pool.",
                        "",
                        "The removal can be voluntary (withdrawn all unbonded funds) or involuntary (kicked)."
                      ]
                    },
                    {
                      "name": "RolesUpdated",
                      "fields": [
                        {
                          "name": "root",
                          "type": 42,
                          "typeName": "Option<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "bouncer",
                          "type": 42,
                          "typeName": "Option<T::AccountId>",
                          "docs": []
                        },
                        {
                          "name": "nominator",
                          "type": 42,
                          "typeName": "Option<T::AccountId>",
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "The roles of a pool have been updated to the given new roles. Note that the depositor",
                        "can never change."
                      ]
                    },
                    {
                      "name": "PoolSlashed",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "The active balance of pool `pool_id` has been slashed to `balance`."
                      ]
                    },
                    {
                      "name": "UnbondingPoolSlashed",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "era",
                          "type": 4,
                          "typeName": "EraIndex",
                          "docs": []
                        },
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "The unbond pool at `era` of pool `pool_id` has been slashed to `balance`."
                      ]
                    },
                    {
                      "name": "PoolCommissionUpdated",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "current",
                          "type": 393,
                          "typeName": "Option<(Perbill, T::AccountId)>",
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A pool's commission setting has been changed."
                      ]
                    },
                    {
                      "name": "PoolMaxCommissionUpdated",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "max_commission",
                          "type": 49,
                          "typeName": "Perbill",
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A pool's maximum commission setting has been changed."
                      ]
                    },
                    {
                      "name": "PoolCommissionChangeRateUpdated",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "change_rate",
                          "type": 395,
                          "typeName": "CommissionChangeRate<BlockNumberFor<T>>",
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "A pool's commission `change_rate` has been changed."
                      ]
                    },
                    {
                      "name": "PoolCommissionClaimPermissionUpdated",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "permission",
                          "type": 396,
                          "typeName": "Option<CommissionClaimPermission<T::AccountId>>",
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Pool commission claim permission has been updated."
                      ]
                    },
                    {
                      "name": "PoolCommissionClaimed",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "commission",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Pool commission has been claimed."
                      ]
                    },
                    {
                      "name": "MinBalanceDeficitAdjusted",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "Topped up deficit in frozen ED of the reward pool."
                      ]
                    },
                    {
                      "name": "MinBalanceExcessAdjusted",
                      "fields": [
                        {
                          "name": "pool_id",
                          "type": 4,
                          "typeName": "PoolId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "Claimed excess frozen ED of af the reward pool."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Events of this pallet."
              ]
            }
          },
          {
            "id": 438,
            "type": {
              "path": [
                "pallet_referenda",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Submitted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "track",
                          "type": 102,
                          "typeName": "TrackIdOf<T, I>",
                          "docs": [
                            "The track (and by extension proposal dispatch origin) of this referendum."
                          ]
                        },
                        {
                          "name": "proposal",
                          "type": 141,
                          "typeName": "BoundedCallOf<T, I>",
                          "docs": [
                            "The proposal for the referendum."
                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A referendum has been submitted."
                      ]
                    },
                    {
                      "name": "DecisionDepositPlaced",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account who placed the deposit."
                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [
                            "The amount placed by the account."
                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The decision deposit has been placed."
                      ]
                    },
                    {
                      "name": "DecisionDepositRefunded",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account who placed the deposit."
                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [
                            "The amount placed by the account."
                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "The decision deposit has been refunded."
                      ]
                    },
                    {
                      "name": "DepositSlashed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account who placed the deposit."
                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [
                            "The amount placed by the account."
                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A deposit has been slashed."
                      ]
                    },
                    {
                      "name": "DecisionStarted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "track",
                          "type": 102,
                          "typeName": "TrackIdOf<T, I>",
                          "docs": [
                            "The track (and by extension proposal dispatch origin) of this referendum."
                          ]
                        },
                        {
                          "name": "proposal",
                          "type": 141,
                          "typeName": "BoundedCallOf<T, I>",
                          "docs": [
                            "The proposal for the referendum."
                          ]
                        },
                        {
                          "name": "tally",
                          "type": 439,
                          "typeName": "T::Tally",
                          "docs": [
                            "The current tally of votes in this referendum."
                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A referendum has moved into the deciding phase."
                      ]
                    },
                    {
                      "name": "ConfirmStarted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "ConfirmAborted",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "Confirmed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "tally",
                          "type": 439,
                          "typeName": "T::Tally",
                          "docs": [
                            "The final tally of votes in this referendum."
                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A referendum has ended its confirmation phase and is ready for approval."
                      ]
                    },
                    {
                      "name": "Approved",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "A referendum has been approved and its proposal has been scheduled."
                      ]
                    },
                    {
                      "name": "Rejected",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "tally",
                          "type": 439,
                          "typeName": "T::Tally",
                          "docs": [
                            "The final tally of votes in this referendum."
                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "A proposal has been rejected by referendum."
                      ]
                    },
                    {
                      "name": "TimedOut",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "tally",
                          "type": 439,
                          "typeName": "T::Tally",
                          "docs": [
                            "The final tally of votes in this referendum."
                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "A referendum has been timed out without being decided."
                      ]
                    },
                    {
                      "name": "Cancelled",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "tally",
                          "type": 439,
                          "typeName": "T::Tally",
                          "docs": [
                            "The final tally of votes in this referendum."
                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A referendum has been cancelled."
                      ]
                    },
                    {
                      "name": "Killed",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "tally",
                          "type": 439,
                          "typeName": "T::Tally",
                          "docs": [
                            "The final tally of votes in this referendum."
                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A referendum has been killed."
                      ]
                    },
                    {
                      "name": "SubmissionDepositRefunded",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account who placed the deposit."
                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T, I>",
                          "docs": [
                            "The amount placed by the account."
                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "The submission deposit has been refunded."
                      ]
                    },
                    {
                      "name": "MetadataSet",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [
                            "Preimage hash."
                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "Metadata for a referendum has been set."
                      ]
                    },
                    {
                      "name": "MetadataCleared",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "ReferendumIndex",
                          "docs": [
                            "Index of the referendum."
                          ]
                        },
                        {
                          "name": "hash",
                          "type": 12,
                          "typeName": "T::Hash",
                          "docs": [
                            "Preimage hash."
                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "Metadata for a referendum has been cleared."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 439,
            "type": {
              "path": [
                "pallet_ranked_collective",
                "Tally"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                },
                {
                  "name": "M",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "bare_ayes",
                      "type": 4,
                      "typeName": "MemberIndex",
                      "docs": []
                    },
                    {
                      "name": "ayes",
                      "type": 4,
                      "typeName": "Votes",
                      "docs": []
                    },
                    {
                      "name": "nays",
                      "type": 4,
                      "typeName": "Votes",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 440,
            "type": {
              "path": [
                "pallet_ranked_collective",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "MemberAdded",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A member `who` has been added."
                      ]
                    },
                    {
                      "name": "RankChanged",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "rank",
                          "type": 102,
                          "typeName": "Rank",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The member `who`se rank has been changed to the given `rank`."
                      ]
                    },
                    {
                      "name": "MemberRemoved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "rank",
                          "type": 102,
                          "typeName": "Rank",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "The member `who` of given `rank` has been removed from the collective."
                      ]
                    },
                    {
                      "name": "Voted",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "poll",
                          "type": 4,
                          "typeName": "PollIndexOf<T, I>",
                          "docs": []
                        },
                        {
                          "name": "vote",
                          "type": 441,
                          "typeName": "VoteRecord",
                          "docs": []
                        },
                        {
                          "name": "tally",
                          "type": 439,
                          "typeName": "TallyOf<T, I>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "The member `who` has voted for the `poll` with the given `vote` leading to an updated",
                        "`tally`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 441,
            "type": {
              "path": [
                "pallet_ranked_collective",
                "VoteRecord"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Aye",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "Votes",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Nay",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "Votes",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 442,
            "type": {
              "path": [
                "pallet_asset_conversion",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PoolCreated",
                      "fields": [
                        {
                          "name": "creator",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account that created the pool."
                          ]
                        },
                        {
                          "name": "pool_id",
                          "type": 443,
                          "typeName": "PoolIdOf<T>",
                          "docs": [
                            "The pool id associated with the pool. Note that the order of the assets may not be",
                            "the same as the order specified in the create pool extrinsic."
                          ]
                        },
                        {
                          "name": "pool_account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account ID of the pool."
                          ]
                        },
                        {
                          "name": "lp_token",
                          "type": 4,
                          "typeName": "T::PoolAssetId",
                          "docs": [
                            "The id of the liquidity tokens that will be minted when assets are added to this",
                            "pool."
                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A successful call of the `CretaPool` extrinsic will create this event."
                      ]
                    },
                    {
                      "name": "LiquidityAdded",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account that the liquidity was taken from."
                          ]
                        },
                        {
                          "name": "mint_to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account that the liquidity tokens were minted to."
                          ]
                        },
                        {
                          "name": "pool_id",
                          "type": 443,
                          "typeName": "PoolIdOf<T>",
                          "docs": [
                            "The pool id of the pool that the liquidity was added to."
                          ]
                        },
                        {
                          "name": "amount1_provided",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": [
                            "The amount of the first asset that was added to the pool."
                          ]
                        },
                        {
                          "name": "amount2_provided",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": [
                            "The amount of the second asset that was added to the pool."
                          ]
                        },
                        {
                          "name": "lp_token",
                          "type": 4,
                          "typeName": "T::PoolAssetId",
                          "docs": [
                            "The id of the lp token that was minted."
                          ]
                        },
                        {
                          "name": "lp_token_minted",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": [
                            "The amount of lp tokens that were minted of that id."
                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A successful call of the `AddLiquidity` extrinsic will create this event."
                      ]
                    },
                    {
                      "name": "LiquidityRemoved",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account that the liquidity tokens were burned from."
                          ]
                        },
                        {
                          "name": "withdraw_to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account that the assets were transferred to."
                          ]
                        },
                        {
                          "name": "pool_id",
                          "type": 443,
                          "typeName": "PoolIdOf<T>",
                          "docs": [
                            "The pool id that the liquidity was removed from."
                          ]
                        },
                        {
                          "name": "amount1",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": [
                            "The amount of the first asset that was removed from the pool."
                          ]
                        },
                        {
                          "name": "amount2",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": [
                            "The amount of the second asset that was removed from the pool."
                          ]
                        },
                        {
                          "name": "lp_token",
                          "type": 4,
                          "typeName": "T::PoolAssetId",
                          "docs": [
                            "The id of the lp token that was burned."
                          ]
                        },
                        {
                          "name": "lp_token_burned",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": [
                            "The amount of lp tokens that were burned of that id."
                          ]
                        },
                        {
                          "name": "withdrawal_fee",
                          "type": 444,
                          "typeName": "Permill",
                          "docs": [
                            "Liquidity withdrawal fee (%)."
                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A successful call of the `RemoveLiquidity` extrinsic will create this event."
                      ]
                    },
                    {
                      "name": "SwapExecuted",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "Which account was the instigator of the swap."
                          ]
                        },
                        {
                          "name": "send_to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account that the assets were transferred to."
                          ]
                        },
                        {
                          "name": "path",
                          "type": 402,
                          "typeName": "BoundedVec<T::MultiAssetId, T::MaxSwapPathLength>",
                          "docs": [
                            "The route of asset ids that the swap went through.",
                            "E.g. A -> Dot -> B"
                          ]
                        },
                        {
                          "name": "amount_in",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": [
                            "The amount of the first asset that was swapped."
                          ]
                        },
                        {
                          "name": "amount_out",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": [
                            "The amount of the second asset that was received."
                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Assets have been converted from one to another. Both `SwapExactTokenForToken`",
                        "and `SwapTokenForExactToken` will generate this event."
                      ]
                    },
                    {
                      "name": "Transfer",
                      "fields": [
                        {
                          "name": "from",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account that the assets were transferred from."
                          ]
                        },
                        {
                          "name": "to",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account that the assets were transferred to."
                          ]
                        },
                        {
                          "name": "asset",
                          "type": 401,
                          "typeName": "T::MultiAssetId",
                          "docs": [
                            "The asset that was transferred."
                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "T::AssetBalance",
                          "docs": [
                            "The amount of the asset that was transferred."
                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An amount has been transferred from one account to another."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 443,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  401,
                  401
                ]
              },
              "docs": []
            }
          },
          {
            "id": 444,
            "type": {
              "path": [
                "sp_arithmetic",
                "per_things",
                "Permill"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 445,
            "type": {
              "path": [
                "pallet_fast_unstake",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unstaked",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "result",
                          "type": 31,
                          "typeName": "DispatchResult",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A staker was unstaked."
                      ]
                    },
                    {
                      "name": "Slashed",
                      "fields": [
                        {
                          "name": "stash",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "A staker was slashed for requesting fast-unstake whilst being exposed."
                      ]
                    },
                    {
                      "name": "BatchChecked",
                      "fields": [
                        {
                          "name": "eras",
                          "type": 115,
                          "typeName": "Vec<EraIndex>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A batch was partially checked for the given eras, but the process did not finish."
                      ]
                    },
                    {
                      "name": "BatchFinished",
                      "fields": [
                        {
                          "name": "size",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "A batch of a given size was terminated.",
                        "",
                        "This is always follows by a number of `Unstaked` or `Slashed` events, marking the end",
                        "of the batch. A new batch will be created upon next block."
                      ]
                    },
                    {
                      "name": "InternalError",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "An internal error happened. Operations will be paused now."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 446,
            "type": {
              "path": [
                "pallet_message_queue",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ProcessingFailed",
                      "fields": [
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        },
                        {
                          "name": "origin",
                          "type": 4,
                          "typeName": "MessageOriginOf<T>",
                          "docs": []
                        },
                        {
                          "name": "error",
                          "type": 447,
                          "typeName": "ProcessMessageError",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "Message discarded due to an error in the `MessageProcessor` (usually a format error)."
                      ]
                    },
                    {
                      "name": "Processed",
                      "fields": [
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        },
                        {
                          "name": "origin",
                          "type": 4,
                          "typeName": "MessageOriginOf<T>",
                          "docs": []
                        },
                        {
                          "name": "weight_used",
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        },
                        {
                          "name": "success",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "Message is processed."
                      ]
                    },
                    {
                      "name": "OverweightEnqueued",
                      "fields": [
                        {
                          "name": "id",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        },
                        {
                          "name": "origin",
                          "type": 4,
                          "typeName": "MessageOriginOf<T>",
                          "docs": []
                        },
                        {
                          "name": "page_index",
                          "type": 4,
                          "typeName": "PageIndex",
                          "docs": []
                        },
                        {
                          "name": "message_index",
                          "type": 4,
                          "typeName": "T::Size",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Message placed in overweight queue."
                      ]
                    },
                    {
                      "name": "PageReaped",
                      "fields": [
                        {
                          "name": "origin",
                          "type": 4,
                          "typeName": "MessageOriginOf<T>",
                          "docs": []
                        },
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "PageIndex",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "This page was reaped."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 447,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "messages",
                "ProcessMessageError"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BadFormat",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Corrupt",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Unsupported",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Overweight",
                      "fields": [
                        {
                          "name": null,
                          "type": 9,
                          "typeName": "Weight",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Yield",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 448,
            "type": {
              "path": [
                "frame_benchmarking_pallet_pov",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TestEvent",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 449,
            "type": {
              "path": [
                "pallet_tx_pause",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "CallPaused",
                      "fields": [
                        {
                          "name": "full_name",
                          "type": 408,
                          "typeName": "RuntimeCallNameOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "This pallet, or a specific call is now paused."
                      ]
                    },
                    {
                      "name": "CallUnpaused",
                      "fields": [
                        {
                          "name": "full_name",
                          "type": 408,
                          "typeName": "RuntimeCallNameOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "This pallet, or a specific call is now unpaused."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 450,
            "type": {
              "path": [
                "pallet_safe_mode",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Entered",
                      "fields": [
                        {
                          "name": "until",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "The safe-mode was entered until inclusively this block."
                      ]
                    },
                    {
                      "name": "Extended",
                      "fields": [
                        {
                          "name": "until",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The safe-mode was extended until inclusively this block."
                      ]
                    },
                    {
                      "name": "Exited",
                      "fields": [
                        {
                          "name": "reason",
                          "type": 451,
                          "typeName": "ExitReason",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "Exited the safe-mode for a specific reason."
                      ]
                    },
                    {
                      "name": "DepositPlaced",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "An account reserved funds for either entering or extending the safe-mode."
                      ]
                    },
                    {
                      "name": "DepositReleased",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "An account had a reserve released that was reserved."
                      ]
                    },
                    {
                      "name": "DepositSlashed",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "An account had reserve slashed that was reserved."
                      ]
                    },
                    {
                      "name": "CannotDeposit",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Could not hold funds for entering or extending the safe-mode.",
                        "",
                        "This error comes from the underlying `Currency`."
                      ]
                    },
                    {
                      "name": "CannotRelease",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Could not release funds for entering or extending the safe-mode.",
                        "",
                        "This error comes from the underlying `Currency`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 451,
            "type": {
              "path": [
                "pallet_safe_mode",
                "pallet",
                "ExitReason"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Timeout",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Force",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 452,
            "type": {
              "path": [
                "pallet_statement",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NewStatement",
                      "fields": [
                        {
                          "name": "account",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        },
                        {
                          "name": "statement",
                          "type": 453,
                          "typeName": "Statement",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A new statement is submitted"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 453,
            "type": {
              "path": [
                "sp_statement_store",
                "Statement"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "proof",
                      "type": 454,
                      "typeName": "Option<Proof>",
                      "docs": []
                    },
                    {
                      "name": "decryption_key",
                      "type": 96,
                      "typeName": "Option<DecryptionKey>",
                      "docs": []
                    },
                    {
                      "name": "channel",
                      "type": 96,
                      "typeName": "Option<Channel>",
                      "docs": []
                    },
                    {
                      "name": "priority",
                      "type": 38,
                      "typeName": "Option<u32>",
                      "docs": []
                    },
                    {
                      "name": "num_topics",
                      "type": 2,
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": "topics",
                      "type": 457,
                      "typeName": "[Topic; MAX_TOPICS]",
                      "docs": []
                    },
                    {
                      "name": "data",
                      "type": 458,
                      "typeName": "Option<Vec<u8>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 454,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 455
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 455,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 455,
            "type": {
              "path": [
                "sp_statement_store",
                "Proof"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Sr25519",
                      "fields": [
                        {
                          "name": "signature",
                          "type": 254,
                          "typeName": "[u8; 64]",
                          "docs": []
                        },
                        {
                          "name": "signer",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Ed25519",
                      "fields": [
                        {
                          "name": "signature",
                          "type": 254,
                          "typeName": "[u8; 64]",
                          "docs": []
                        },
                        {
                          "name": "signer",
                          "type": 1,
                          "typeName": "[u8; 32]",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Secp256k1Ecdsa",
                      "fields": [
                        {
                          "name": "signature",
                          "type": 351,
                          "typeName": "[u8; 65]",
                          "docs": []
                        },
                        {
                          "name": "signer",
                          "type": 456,
                          "typeName": "[u8; 33]",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "OnChain",
                      "fields": [
                        {
                          "name": "who",
                          "type": 1,
                          "typeName": "AccountId",
                          "docs": []
                        },
                        {
                          "name": "block_hash",
                          "type": 1,
                          "typeName": "BlockHash",
                          "docs": []
                        },
                        {
                          "name": "event_index",
                          "type": 11,
                          "typeName": "u64",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 456,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 33,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 457,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 4,
                  "type": 1
                }
              },
              "docs": []
            }
          },
          {
            "id": 458,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 13
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 13,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 459,
            "type": {
              "path": [
                "pallet_broker",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Purchased",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The identity of the purchaser."
                          ]
                        },
                        {
                          "name": "region_id",
                          "type": 417,
                          "typeName": "RegionId",
                          "docs": [
                            "The identity of the Region."
                          ]
                        },
                        {
                          "name": "price",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [
                            "The price paid for this Region."
                          ]
                        },
                        {
                          "name": "duration",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": [
                            "The duration of the Region."
                          ]
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A Region of Bulk Coretime has been purchased."
                      ]
                    },
                    {
                      "name": "Renewable",
                      "fields": [
                        {
                          "name": "core",
                          "type": 102,
                          "typeName": "CoreIndex",
                          "docs": [
                            "The core whose workload can be renewed."
                          ]
                        },
                        {
                          "name": "price",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [
                            "The price at which the workload can be renewed."
                          ]
                        },
                        {
                          "name": "begin",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": [
                            "The time at which the workload would recommence of this renewal. The call to renew",
                            "cannot happen before the beginning of the interlude prior to the sale for regions",
                            "which begin at this time."
                          ]
                        },
                        {
                          "name": "workload",
                          "type": 412,
                          "typeName": "Schedule",
                          "docs": [
                            "The actual workload which can be renewed."
                          ]
                        }
                      ],
                      "index": 1,
                      "docs": [
                        "The workload of a core has become renewable."
                      ]
                    },
                    {
                      "name": "Renewed",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The identity of the renewer."
                          ]
                        },
                        {
                          "name": "price",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [
                            "The price paid for this renewal."
                          ]
                        },
                        {
                          "name": "old_core",
                          "type": 102,
                          "typeName": "CoreIndex",
                          "docs": [
                            "The index of the core on which the `workload` was previously scheduled."
                          ]
                        },
                        {
                          "name": "core",
                          "type": 102,
                          "typeName": "CoreIndex",
                          "docs": [
                            "The index of the core on which the renewed `workload` has been scheduled."
                          ]
                        },
                        {
                          "name": "begin",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": [
                            "The time at which the `workload` will begin on the `core`."
                          ]
                        },
                        {
                          "name": "duration",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": [
                            "The number of timeslices for which this `workload` is newly scheduled."
                          ]
                        },
                        {
                          "name": "workload",
                          "type": 412,
                          "typeName": "Schedule",
                          "docs": [
                            "The workload which was renewed."
                          ]
                        }
                      ],
                      "index": 2,
                      "docs": [
                        "A workload has been renewed."
                      ]
                    },
                    {
                      "name": "Transferred",
                      "fields": [
                        {
                          "name": "region_id",
                          "type": 417,
                          "typeName": "RegionId",
                          "docs": [
                            "The Region which has been transferred."
                          ]
                        },
                        {
                          "name": "duration",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": [
                            "The duration of the Region."
                          ]
                        },
                        {
                          "name": "old_owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The old owner of the Region."
                          ]
                        },
                        {
                          "name": "owner",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The new owner of the Region."
                          ]
                        }
                      ],
                      "index": 3,
                      "docs": [
                        "Ownership of a Region has been transferred."
                      ]
                    },
                    {
                      "name": "Partitioned",
                      "fields": [
                        {
                          "name": "old_region_id",
                          "type": 417,
                          "typeName": "RegionId",
                          "docs": [
                            "The Region which was split."
                          ]
                        },
                        {
                          "name": "new_region_ids",
                          "type": 460,
                          "typeName": "(RegionId, RegionId)",
                          "docs": [
                            "The new Regions into which it became."
                          ]
                        }
                      ],
                      "index": 4,
                      "docs": [
                        "A Region has been split into two non-overlapping Regions."
                      ]
                    },
                    {
                      "name": "Interlaced",
                      "fields": [
                        {
                          "name": "old_region_id",
                          "type": 417,
                          "typeName": "RegionId",
                          "docs": [
                            "The Region which was interlaced."
                          ]
                        },
                        {
                          "name": "new_region_ids",
                          "type": 460,
                          "typeName": "(RegionId, RegionId)",
                          "docs": [
                            "The new Regions into which it became."
                          ]
                        }
                      ],
                      "index": 5,
                      "docs": [
                        "A Region has been converted into two overlapping Regions each of lesser regularity."
                      ]
                    },
                    {
                      "name": "Assigned",
                      "fields": [
                        {
                          "name": "region_id",
                          "type": 417,
                          "typeName": "RegionId",
                          "docs": [
                            "The Region which was assigned."
                          ]
                        },
                        {
                          "name": "duration",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": [
                            "The duration of the assignment."
                          ]
                        },
                        {
                          "name": "task",
                          "type": 4,
                          "typeName": "TaskId",
                          "docs": [
                            "The task to which the Region was assigned."
                          ]
                        }
                      ],
                      "index": 6,
                      "docs": [
                        "A Region has been assigned to a particular task."
                      ]
                    },
                    {
                      "name": "Pooled",
                      "fields": [
                        {
                          "name": "region_id",
                          "type": 417,
                          "typeName": "RegionId",
                          "docs": [
                            "The Region which was added to the Instantaneous Coretime Pool."
                          ]
                        },
                        {
                          "name": "duration",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": [
                            "The duration of the Region."
                          ]
                        }
                      ],
                      "index": 7,
                      "docs": [
                        "A Region has been added to the Instantaneous Coretime Pool."
                      ]
                    },
                    {
                      "name": "CoreCountRequested",
                      "fields": [
                        {
                          "name": "core_count",
                          "type": 102,
                          "typeName": "CoreIndex",
                          "docs": [
                            "The number of cores requested."
                          ]
                        }
                      ],
                      "index": 8,
                      "docs": [
                        "A new number of cores has been requested."
                      ]
                    },
                    {
                      "name": "CoreCountChanged",
                      "fields": [
                        {
                          "name": "core_count",
                          "type": 102,
                          "typeName": "CoreIndex",
                          "docs": [
                            "The new number of cores available for scheduling."
                          ]
                        }
                      ],
                      "index": 9,
                      "docs": [
                        "The number of cores available for scheduling has changed."
                      ]
                    },
                    {
                      "name": "ReservationMade",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [
                            "The index of the reservation."
                          ]
                        },
                        {
                          "name": "workload",
                          "type": 412,
                          "typeName": "Schedule",
                          "docs": [
                            "The workload of the reservation."
                          ]
                        }
                      ],
                      "index": 10,
                      "docs": [
                        "There is a new reservation for a workload."
                      ]
                    },
                    {
                      "name": "ReservationCancelled",
                      "fields": [
                        {
                          "name": "index",
                          "type": 4,
                          "typeName": "u32",
                          "docs": [
                            "The index of the reservation which was cancelled."
                          ]
                        },
                        {
                          "name": "workload",
                          "type": 412,
                          "typeName": "Schedule",
                          "docs": [
                            "The workload of the now cancelled reservation."
                          ]
                        }
                      ],
                      "index": 11,
                      "docs": [
                        "A reservation for a workload has been cancelled."
                      ]
                    },
                    {
                      "name": "SaleInitialized",
                      "fields": [
                        {
                          "name": "sale_start",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [
                            "The local block number at which the sale will/did start."
                          ]
                        },
                        {
                          "name": "leadin_length",
                          "type": 4,
                          "typeName": "BlockNumberFor<T>",
                          "docs": [
                            "The length in blocks of the Leadin Period (where the price is decreasing)."
                          ]
                        },
                        {
                          "name": "start_price",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [
                            "The price of Bulk Coretime at the beginning of the Leadin Period."
                          ]
                        },
                        {
                          "name": "regular_price",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [
                            "The price of Bulk Coretime after the Leadin Period."
                          ]
                        },
                        {
                          "name": "region_begin",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": [
                            "The first timeslice of the Regions which are being sold in this sale."
                          ]
                        },
                        {
                          "name": "region_end",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": [
                            "The timeslice on which the Regions which are being sold in the sale terminate.",
                            "(i.e. One after the last timeslice which the Regions control.)"
                          ]
                        },
                        {
                          "name": "ideal_cores_sold",
                          "type": 102,
                          "typeName": "CoreIndex",
                          "docs": [
                            "The number of cores we want to sell, ideally. Selling this amount would result in",
                            "no change to the price for the next sale."
                          ]
                        },
                        {
                          "name": "cores_offered",
                          "type": 102,
                          "typeName": "CoreIndex",
                          "docs": [
                            "Number of cores which are/have been offered for sale."
                          ]
                        }
                      ],
                      "index": 12,
                      "docs": [
                        "A new sale has been initialized."
                      ]
                    },
                    {
                      "name": "Leased",
                      "fields": [
                        {
                          "name": "task",
                          "type": 4,
                          "typeName": "TaskId",
                          "docs": [
                            "The task to which a core will be assigned."
                          ]
                        },
                        {
                          "name": "until",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": [
                            "The timeslice contained in the sale period after which this lease will",
                            "self-terminate (and therefore the earliest timeslice at which the lease may no",
                            "longer apply)."
                          ]
                        }
                      ],
                      "index": 13,
                      "docs": [
                        "A new lease has been created."
                      ]
                    },
                    {
                      "name": "LeaseEnding",
                      "fields": [
                        {
                          "name": "task",
                          "type": 4,
                          "typeName": "TaskId",
                          "docs": [
                            "The task to which a core was assigned."
                          ]
                        },
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": [
                            "The timeslice at which the task will no longer be scheduled."
                          ]
                        }
                      ],
                      "index": 14,
                      "docs": [
                        "A lease is about to end."
                      ]
                    },
                    {
                      "name": "SalesStarted",
                      "fields": [
                        {
                          "name": "price",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [
                            "The nominal price of an Region of Bulk Coretime."
                          ]
                        },
                        {
                          "name": "core_count",
                          "type": 102,
                          "typeName": "CoreIndex",
                          "docs": [
                            "The maximum number of cores which this pallet will attempt to assign."
                          ]
                        }
                      ],
                      "index": 15,
                      "docs": [
                        "The sale rotation has been started and a new sale is imminent."
                      ]
                    },
                    {
                      "name": "RevenueClaimBegun",
                      "fields": [
                        {
                          "name": "region",
                          "type": 417,
                          "typeName": "RegionId",
                          "docs": [
                            "The region to be claimed for."
                          ]
                        },
                        {
                          "name": "max_timeslices",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": [
                            "The maximum number of timeslices which should be searched for claimed."
                          ]
                        }
                      ],
                      "index": 16,
                      "docs": [
                        "The act of claiming revenue has begun."
                      ]
                    },
                    {
                      "name": "RevenueClaimItem",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": [
                            "The timeslice whose claim is being processed."
                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [
                            "The amount which was claimed at this timeslice."
                          ]
                        }
                      ],
                      "index": 17,
                      "docs": [
                        "A particular timeslice has a non-zero claim."
                      ]
                    },
                    {
                      "name": "RevenueClaimPaid",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account to whom revenue has been paid."
                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [
                            "The total amount of revenue claimed and paid."
                          ]
                        },
                        {
                          "name": "next",
                          "type": 461,
                          "typeName": "Option<RegionId>",
                          "docs": [
                            "The next region which should be claimed for the continuation of this contribution."
                          ]
                        }
                      ],
                      "index": 18,
                      "docs": [
                        "A revenue claim has (possibly only in part) been paid."
                      ]
                    },
                    {
                      "name": "CreditPurchased",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": [
                            "The account which purchased the credit."
                          ]
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "RelayAccountIdOf<T>",
                          "docs": [
                            "The Relay-chain account to which the credit will be made."
                          ]
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [
                            "The amount of credit purchased."
                          ]
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "Some Instantaneous Coretime Pool credit has been purchased."
                      ]
                    },
                    {
                      "name": "RegionDropped",
                      "fields": [
                        {
                          "name": "region_id",
                          "type": 417,
                          "typeName": "RegionId",
                          "docs": [
                            "The Region which no longer exists."
                          ]
                        },
                        {
                          "name": "duration",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": [
                            "The duration of the Region."
                          ]
                        }
                      ],
                      "index": 20,
                      "docs": [
                        "A Region has been dropped due to being out of date."
                      ]
                    },
                    {
                      "name": "ContributionDropped",
                      "fields": [
                        {
                          "name": "region_id",
                          "type": 417,
                          "typeName": "RegionId",
                          "docs": [
                            "The Region whose contribution is no longer exists."
                          ]
                        }
                      ],
                      "index": 21,
                      "docs": [
                        "Some historical Instantaneous Core Pool contribution record has been dropped."
                      ]
                    },
                    {
                      "name": "HistoryInitialized",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": [
                            "The timeslice whose history has been initialized."
                          ]
                        },
                        {
                          "name": "private_pool_size",
                          "type": 4,
                          "typeName": "CoreMaskBitCount",
                          "docs": [
                            "The amount of privately contributed Coretime to the Instantaneous Coretime Pool."
                          ]
                        },
                        {
                          "name": "system_pool_size",
                          "type": 4,
                          "typeName": "CoreMaskBitCount",
                          "docs": [
                            "The amount of Coretime contributed to the Instantaneous Coretime Pool by the",
                            "Polkadot System."
                          ]
                        }
                      ],
                      "index": 22,
                      "docs": [
                        "Some historical Instantaneous Core Pool payment record has been initialized."
                      ]
                    },
                    {
                      "name": "HistoryDropped",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": [
                            "The timeslice whose history is no longer available."
                          ]
                        },
                        {
                          "name": "revenue",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [
                            "The amount of revenue the system has taken."
                          ]
                        }
                      ],
                      "index": 23,
                      "docs": [
                        "Some historical Instantaneous Core Pool payment record has been dropped."
                      ]
                    },
                    {
                      "name": "HistoryIgnored",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": [
                            "The timeslice whose history is was ignored."
                          ]
                        },
                        {
                          "name": "revenue",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [
                            "The amount of revenue which was ignored."
                          ]
                        }
                      ],
                      "index": 24,
                      "docs": [
                        "Some historical Instantaneous Core Pool payment record has been ignored because the",
                        "timeslice was already known. Governance may need to intervene."
                      ]
                    },
                    {
                      "name": "ClaimsReady",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": [
                            "The timeslice whose history is available."
                          ]
                        },
                        {
                          "name": "system_payout",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [
                            "The amount of revenue the Polkadot System has already taken."
                          ]
                        },
                        {
                          "name": "private_payout",
                          "type": 6,
                          "typeName": "BalanceOf<T>",
                          "docs": [
                            "The total amount of revenue remaining to be claimed."
                          ]
                        }
                      ],
                      "index": 25,
                      "docs": [
                        "Some historical Instantaneous Core Pool Revenue is ready for payout claims."
                      ]
                    },
                    {
                      "name": "CoreAssigned",
                      "fields": [
                        {
                          "name": "core",
                          "type": 102,
                          "typeName": "CoreIndex",
                          "docs": [
                            "The index of the Core which has been assigned."
                          ]
                        },
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "RelayBlockNumberOf<T>",
                          "docs": [
                            "The Relay-chain block at which this assignment should take effect."
                          ]
                        },
                        {
                          "name": "assignment",
                          "type": 462,
                          "typeName": "Vec<(CoreAssignment, PartsOf57600)>",
                          "docs": [
                            "The workload to be done on the Core."
                          ]
                        }
                      ],
                      "index": 26,
                      "docs": [
                        "A Core has been assigned to one or more tasks and/or the Pool on the Relay-chain."
                      ]
                    },
                    {
                      "name": "AllowedRenewalDropped",
                      "fields": [
                        {
                          "name": "when",
                          "type": 4,
                          "typeName": "Timeslice",
                          "docs": [
                            "The timeslice whose renewal is no longer available."
                          ]
                        },
                        {
                          "name": "core",
                          "type": 102,
                          "typeName": "CoreIndex",
                          "docs": [
                            "The core whose workload is no longer available to be renewed for `when`."
                          ]
                        }
                      ],
                      "index": 27,
                      "docs": [
                        "Some historical Instantaneous Core Pool payment record has been dropped."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 460,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  417,
                  417
                ]
              },
              "docs": []
            }
          },
          {
            "id": 461,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 417
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 417,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 462,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 463
                }
              },
              "docs": []
            }
          },
          {
            "id": 463,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  415,
                  102
                ]
              },
              "docs": []
            }
          },
          {
            "id": 464,
            "type": {
              "path": [
                "pallet_skip_feeless_payment",
                "pallet",
                "Event"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FeeSkipped",
                      "fields": [
                        {
                          "name": "who",
                          "type": 0,
                          "typeName": "T::AccountId",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A transaction fee was skipped."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Event` enum of this pallet"
              ]
            }
          },
          {
            "id": 465,
            "type": {
              "path": [
                "frame_system",
                "Phase"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ApplyExtrinsic",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Finalization",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Initialization",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 466,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 95
                }
              },
              "docs": []
            }
          },
          {
            "id": 467,
            "type": {
              "path": [
                "frame_system",
                "LastRuntimeUpgradeInfo"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "spec_version",
                      "type": 158,
                      "typeName": "codec::Compact<u32>",
                      "docs": []
                    },
                    {
                      "name": "spec_name",
                      "type": 468,
                      "typeName": "sp_runtime::RuntimeString",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 468,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "primitive": "Str"
              },
              "docs": []
            }
          },
          {
            "id": 469,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "BlockWeights"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_block",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "max_block",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "per_class",
                      "type": 470,
                      "typeName": "PerDispatchClass<WeightsPerClass>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 470,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 471
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 471,
                      "typeName": "T",
                      "docs": []
                    },
                    {
                      "name": "operational",
                      "type": 471,
                      "typeName": "T",
                      "docs": []
                    },
                    {
                      "name": "mandatory",
                      "type": 471,
                      "typeName": "T",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 471,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "WeightsPerClass"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base_extrinsic",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "max_extrinsic",
                      "type": 433,
                      "typeName": "Option<Weight>",
                      "docs": []
                    },
                    {
                      "name": "max_total",
                      "type": 433,
                      "typeName": "Option<Weight>",
                      "docs": []
                    },
                    {
                      "name": "reserved",
                      "type": 433,
                      "typeName": "Option<Weight>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 472,
            "type": {
              "path": [
                "frame_system",
                "limits",
                "BlockLength"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "max",
                      "type": 473,
                      "typeName": "PerDispatchClass<u32>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 473,
            "type": {
              "path": [
                "frame_support",
                "dispatch",
                "PerDispatchClass"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "normal",
                      "type": 4,
                      "typeName": "T",
                      "docs": []
                    },
                    {
                      "name": "operational",
                      "type": 4,
                      "typeName": "T",
                      "docs": []
                    },
                    {
                      "name": "mandatory",
                      "type": 4,
                      "typeName": "T",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 474,
            "type": {
              "path": [
                "sp_weights",
                "RuntimeDbWeight"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "read",
                      "type": 11,
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "write",
                      "type": 11,
                      "typeName": "u64",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 475,
            "type": {
              "path": [
                "sp_version",
                "RuntimeVersion"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "spec_name",
                      "type": 468,
                      "typeName": "RuntimeString",
                      "docs": []
                    },
                    {
                      "name": "impl_name",
                      "type": 468,
                      "typeName": "RuntimeString",
                      "docs": []
                    },
                    {
                      "name": "authoring_version",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "spec_version",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "impl_version",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "apis",
                      "type": 476,
                      "typeName": "ApisVec",
                      "docs": []
                    },
                    {
                      "name": "transaction_version",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "state_version",
                      "type": 2,
                      "typeName": "u8",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 476,
            "type": {
              "path": [
                "Cow"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 477
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 477,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 477,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 478
                }
              },
              "docs": []
            }
          },
          {
            "id": 478,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  281,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 479,
            "type": {
              "path": [
                "frame_system",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidSpecName",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The name of specification does not match between the current runtime",
                        "and the new runtime."
                      ]
                    },
                    {
                      "name": "SpecVersionNeedsToIncrease",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The specification version is not allowed to decrease between the current runtime",
                        "and the new runtime."
                      ]
                    },
                    {
                      "name": "FailedToExtractRuntimeVersion",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Failed to extract the runtime version from the new runtime.",
                        "",
                        "Either calling `Core_version` or decoding `RuntimeVersion` failed."
                      ]
                    },
                    {
                      "name": "NonDefaultComposite",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Suicide called when the account has non-default composite data."
                      ]
                    },
                    {
                      "name": "NonZeroRefCount",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "There is a non-zero reference count preventing the account from being purged."
                      ]
                    },
                    {
                      "name": "CallFiltered",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The origin filter prevent the call to be dispatched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the System pallet"
              ]
            }
          },
          {
            "id": 480,
            "type": {
              "path": [
                "pallet_utility",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooManyCalls",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Too many calls batched."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 481,
            "type": {
              "path": [
                "bounded_collections",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 482
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 483,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 482,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  159,
                  11
                ]
              },
              "docs": []
            }
          },
          {
            "id": 483,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 482
                }
              },
              "docs": []
            }
          },
          {
            "id": 484,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 1
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 485,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 485,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 1
                }
              },
              "docs": []
            }
          },
          {
            "id": 486,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 487
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 487,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 487,
            "type": {
              "path": [
                "sp_consensus_babe",
                "digests",
                "PreDigest"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Primary",
                      "fields": [
                        {
                          "name": null,
                          "type": 488,
                          "typeName": "PrimaryPreDigest",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "SecondaryPlain",
                      "fields": [
                        {
                          "name": null,
                          "type": 490,
                          "typeName": "SecondaryPlainPreDigest",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "SecondaryVRF",
                      "fields": [
                        {
                          "name": null,
                          "type": 491,
                          "typeName": "SecondaryVRFPreDigest",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 488,
            "type": {
              "path": [
                "sp_consensus_babe",
                "digests",
                "PrimaryPreDigest"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "authority_index",
                      "type": 4,
                      "typeName": "super::AuthorityIndex",
                      "docs": []
                    },
                    {
                      "name": "slot",
                      "type": 160,
                      "typeName": "Slot",
                      "docs": []
                    },
                    {
                      "name": "vrf_signature",
                      "type": 489,
                      "typeName": "VrfSignature",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 489,
            "type": {
              "path": [
                "sp_core",
                "sr25519",
                "vrf",
                "VrfSignature"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "output",
                      "type": 1,
                      "typeName": "VrfOutput",
                      "docs": []
                    },
                    {
                      "name": "proof",
                      "type": 254,
                      "typeName": "VrfProof",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 490,
            "type": {
              "path": [
                "sp_consensus_babe",
                "digests",
                "SecondaryPlainPreDigest"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "authority_index",
                      "type": 4,
                      "typeName": "super::AuthorityIndex",
                      "docs": []
                    },
                    {
                      "name": "slot",
                      "type": 160,
                      "typeName": "Slot",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 491,
            "type": {
              "path": [
                "sp_consensus_babe",
                "digests",
                "SecondaryVRFPreDigest"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "authority_index",
                      "type": 4,
                      "typeName": "super::AuthorityIndex",
                      "docs": []
                    },
                    {
                      "name": "slot",
                      "type": 160,
                      "typeName": "Slot",
                      "docs": []
                    },
                    {
                      "name": "vrf_signature",
                      "type": 489,
                      "typeName": "VrfSignature",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 492,
            "type": {
              "path": [
                "sp_consensus_babe",
                "BabeEpochConfiguration"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "c",
                      "type": 163,
                      "typeName": "(u64, u64)",
                      "docs": []
                    },
                    {
                      "name": "allowed_slots",
                      "type": 164,
                      "typeName": "AllowedSlots",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 493,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 494
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 495,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 494,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  11,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 495,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 494
                }
              },
              "docs": []
            }
          },
          {
            "id": 496,
            "type": {
              "path": [
                "pallet_babe",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidEquivocationProof",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "An equivocation proof provided as part of an equivocation report is invalid."
                      ]
                    },
                    {
                      "name": "InvalidKeyOwnershipProof",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "A key ownership proof provided as part of an equivocation report is invalid."
                      ]
                    },
                    {
                      "name": "DuplicateOffenceReport",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "A given equivocation report is valid but already previously reported."
                      ]
                    },
                    {
                      "name": "InvalidConfiguration",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Submitted configuration is invalid."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 497,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  6,
                  43
                ]
              },
              "docs": []
            }
          },
          {
            "id": 498,
            "type": {
              "path": [
                "pallet_indices",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotAssigned",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The index was not already assigned."
                      ]
                    },
                    {
                      "name": "NotOwner",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The index is assigned to another account."
                      ]
                    },
                    {
                      "name": "InUse",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The index was not available."
                      ]
                    },
                    {
                      "name": "NotTransfer",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The source and destination accounts are identical."
                      ]
                    },
                    {
                      "name": "Permanent",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The index is permanent and may not be freed/changed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 499,
            "type": {
              "path": [
                "bounded_collections",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 500
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 502,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 500,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "BalanceLock"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 281,
                      "typeName": "LockIdentifier",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "reasons",
                      "type": 501,
                      "typeName": "Reasons",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 501,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "Reasons"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fee",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Misc",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "All",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 502,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 500
                }
              },
              "docs": []
            }
          },
          {
            "id": 503,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 504
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 505,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 504,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "ReserveData"
              ],
              "params": [
                {
                  "name": "ReserveIdentifier",
                  "type": 281
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 281,
                      "typeName": "ReserveIdentifier",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 505,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 504
                }
              },
              "docs": []
            }
          },
          {
            "id": 506,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 507
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 515,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 507,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "IdAmount"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 508
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 508,
                      "typeName": "Id",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 508,
            "type": {
              "path": [
                "kitchensink_runtime",
                "RuntimeHoldReason"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Contracts",
                      "fields": [
                        {
                          "name": null,
                          "type": 509,
                          "typeName": "pallet_contracts::HoldReason",
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": []
                    },
                    {
                      "name": "Preimage",
                      "fields": [
                        {
                          "name": null,
                          "type": 510,
                          "typeName": "pallet_preimage::HoldReason",
                          "docs": []
                        }
                      ],
                      "index": 34,
                      "docs": []
                    },
                    {
                      "name": "Nis",
                      "fields": [
                        {
                          "name": null,
                          "type": 511,
                          "typeName": "pallet_nis::HoldReason",
                          "docs": []
                        }
                      ],
                      "index": 43,
                      "docs": []
                    },
                    {
                      "name": "NftFractionalization",
                      "fields": [
                        {
                          "name": null,
                          "type": 512,
                          "typeName": "pallet_nft_fractionalization::HoldReason",
                          "docs": []
                        }
                      ],
                      "index": 46,
                      "docs": []
                    },
                    {
                      "name": "TransactionStorage",
                      "fields": [
                        {
                          "name": null,
                          "type": 513,
                          "typeName": "pallet_transaction_storage::HoldReason",
                          "docs": []
                        }
                      ],
                      "index": 49,
                      "docs": []
                    },
                    {
                      "name": "SafeMode",
                      "fields": [
                        {
                          "name": null,
                          "type": 514,
                          "typeName": "pallet_safe_mode::HoldReason",
                          "docs": []
                        }
                      ],
                      "index": 68,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 509,
            "type": {
              "path": [
                "pallet_contracts",
                "pallet",
                "HoldReason"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "CodeUploadDepositReserve",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "StorageDepositReserve",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 510,
            "type": {
              "path": [
                "pallet_preimage",
                "pallet",
                "HoldReason"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Preimage",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 511,
            "type": {
              "path": [
                "pallet_nis",
                "pallet",
                "HoldReason"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NftReceipt",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 512,
            "type": {
              "path": [
                "pallet_nft_fractionalization",
                "pallet",
                "HoldReason"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fractionalized",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 513,
            "type": {
              "path": [
                "pallet_transaction_storage",
                "pallet",
                "HoldReason"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "StorageFeeHold",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 514,
            "type": {
              "path": [
                "pallet_safe_mode",
                "pallet",
                "HoldReason"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "EnterOrExtend",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 515,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 507
                }
              },
              "docs": []
            }
          },
          {
            "id": 516,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 517
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 520,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 517,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "IdAmount"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 518
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 518,
                      "typeName": "Id",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 518,
            "type": {
              "path": [
                "kitchensink_runtime",
                "RuntimeFreezeReason"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NominationPools",
                      "fields": [
                        {
                          "name": null,
                          "type": 519,
                          "typeName": "pallet_nomination_pools::FreezeReason",
                          "docs": []
                        }
                      ],
                      "index": 60,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 519,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "pallet",
                "FreezeReason"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PoolMinBalance",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 520,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 517
                }
              },
              "docs": []
            }
          },
          {
            "id": 521,
            "type": {
              "path": [
                "pallet_balances",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "VestingBalance",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Vesting balance too high to send value."
                      ]
                    },
                    {
                      "name": "LiquidityRestrictions",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Account liquidity restrictions prevent withdrawal."
                      ]
                    },
                    {
                      "name": "InsufficientBalance",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Balance too low to send value."
                      ]
                    },
                    {
                      "name": "ExistentialDeposit",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Value too low to create account due to existential deposit."
                      ]
                    },
                    {
                      "name": "Expendability",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Transfer/payment would kill account."
                      ]
                    },
                    {
                      "name": "ExistingVestingSchedule",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "A vesting schedule already exists for this account."
                      ]
                    },
                    {
                      "name": "DeadAccount",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Beneficiary account must pre-exist."
                      ]
                    },
                    {
                      "name": "TooManyReserves",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Number of named reserves exceed `MaxReserves`."
                      ]
                    },
                    {
                      "name": "TooManyHolds",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Number of holds exceed `MaxHolds`."
                      ]
                    },
                    {
                      "name": "TooManyFreezes",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "Number of freezes exceed `MaxFreezes`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 522,
            "type": {
              "path": [
                "pallet_transaction_payment",
                "Releases"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V1Ancient",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "V2",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 523,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "ReadySolution"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": null
                },
                {
                  "name": "MaxWinners",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "supports",
                      "type": 524,
                      "typeName": "BoundedSupports<AccountId, MaxWinners>",
                      "docs": []
                    },
                    {
                      "name": "score",
                      "type": 44,
                      "typeName": "ElectionScore",
                      "docs": []
                    },
                    {
                      "name": "compute",
                      "type": 41,
                      "typeName": "ElectionCompute",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 524,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 226
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 225,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 525,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "RoundSnapshot"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "DataProvider",
                  "type": 526
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "voters",
                      "type": 528,
                      "typeName": "Vec<DataProvider>",
                      "docs": []
                    },
                    {
                      "name": "targets",
                      "type": 90,
                      "typeName": "Vec<AccountId>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 526,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  11,
                  527
                ]
              },
              "docs": []
            }
          },
          {
            "id": 527,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 90,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 528,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 526
                }
              },
              "docs": []
            }
          },
          {
            "id": 529,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 530
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 531,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 530,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  44,
                  4,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 531,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 530
                }
              },
              "docs": []
            }
          },
          {
            "id": 532,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "signed",
                "SignedSubmission"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Solution",
                  "type": 172
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "who",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "raw_solution",
                      "type": 171,
                      "typeName": "RawSolution<Solution>",
                      "docs": []
                    },
                    {
                      "name": "call_fee",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 533,
            "type": {
              "path": [
                "pallet_election_provider_multi_phase",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PreDispatchEarlySubmission",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Submission was too early."
                      ]
                    },
                    {
                      "name": "PreDispatchWrongWinnerCount",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Wrong number of winners presented."
                      ]
                    },
                    {
                      "name": "PreDispatchWeakSubmission",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Submission was too weak, score-wise."
                      ]
                    },
                    {
                      "name": "SignedQueueFull",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The queue was full, and the solution was not better than any of the existing ones."
                      ]
                    },
                    {
                      "name": "SignedCannotPayDeposit",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The origin failed to pay the deposit."
                      ]
                    },
                    {
                      "name": "SignedInvalidWitness",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Witness data to dispatchable is invalid."
                      ]
                    },
                    {
                      "name": "SignedTooMuchWeight",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "The signed submission consumes too much weight"
                      ]
                    },
                    {
                      "name": "OcwCallWrongEra",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "OCW submitted solution for wrong round"
                      ]
                    },
                    {
                      "name": "MissingSnapshotMetadata",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Snapshot metadata should exist but didn't."
                      ]
                    },
                    {
                      "name": "InvalidSubmissionIndex",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "`Self::insert_submission` returned an invalid index."
                      ]
                    },
                    {
                      "name": "CallNotAllowed",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The call is not allowed at this point."
                      ]
                    },
                    {
                      "name": "FallbackFailed",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The fallback failed"
                      ]
                    },
                    {
                      "name": "BoundNotMet",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "Some bound not met"
                      ]
                    },
                    {
                      "name": "TooManyWinners",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "Submitted solution has too many winners"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error of the pallet that can be returned in response to dispatches."
              ]
            }
          },
          {
            "id": 534,
            "type": {
              "path": [
                "pallet_staking",
                "StakingLedger"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "stash",
                      "type": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "total",
                      "type": 83,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "active",
                      "type": 83,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "unlocking",
                      "type": 535,
                      "typeName": "BoundedVec<UnlockChunk<BalanceOf<T>>, T::MaxUnlockingChunks>",
                      "docs": []
                    },
                    {
                      "name": "legacy_claimed_rewards",
                      "type": 538,
                      "typeName": "BoundedVec<EraIndex, T::HistoryDepth>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 535,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 536
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 537,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 536,
            "type": {
              "path": [
                "pallet_staking",
                "UnlockChunk"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "value",
                      "type": 83,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "era",
                      "type": 158,
                      "typeName": "EraIndex",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 537,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 536
                }
              },
              "docs": []
            }
          },
          {
            "id": 538,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 115,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 539,
            "type": {
              "path": [
                "pallet_staking",
                "Nominations"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "targets",
                      "type": 527,
                      "typeName": "BoundedVec<T::AccountId, MaxNominationsOf<T>>",
                      "docs": []
                    },
                    {
                      "name": "submitted_in",
                      "type": 4,
                      "typeName": "EraIndex",
                      "docs": []
                    },
                    {
                      "name": "suppressed",
                      "type": 43,
                      "typeName": "bool",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 540,
            "type": {
              "path": [
                "pallet_staking",
                "ActiveEraInfo"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "index",
                      "type": 4,
                      "typeName": "EraIndex",
                      "docs": []
                    },
                    {
                      "name": "start",
                      "type": 541,
                      "typeName": "Option<u64>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 541,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 11
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 11,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 542,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  0
                ]
              },
              "docs": []
            }
          },
          {
            "id": 543,
            "type": {
              "path": [
                "sp_staking",
                "PagedExposureMetadata"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "total",
                      "type": 83,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "own",
                      "type": 83,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "nominator_count",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "page_count",
                      "type": 4,
                      "typeName": "Page",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 544,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  0,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 545,
            "type": {
              "path": [
                "sp_staking",
                "ExposurePage"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "page_total",
                      "type": 83,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "others",
                      "type": 84,
                      "typeName": "Vec<IndividualExposure<AccountId, Balance>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 546,
            "type": {
              "path": [
                "pallet_staking",
                "EraRewardPoints"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "total",
                      "type": 4,
                      "typeName": "RewardPoint",
                      "docs": []
                    },
                    {
                      "name": "individual",
                      "type": 547,
                      "typeName": "BTreeMap<AccountId, RewardPoint>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 547,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 548,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 548,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 549
                }
              },
              "docs": []
            }
          },
          {
            "id": 549,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 550,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 551
                }
              },
              "docs": []
            }
          },
          {
            "id": 551,
            "type": {
              "path": [
                "pallet_staking",
                "UnappliedSlash"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "validator",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "own",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "others",
                      "type": 62,
                      "typeName": "Vec<(AccountId, Balance)>",
                      "docs": []
                    },
                    {
                      "name": "reporters",
                      "type": 90,
                      "typeName": "Vec<AccountId>",
                      "docs": []
                    },
                    {
                      "name": "payout",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 552,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  49,
                  6
                ]
              },
              "docs": []
            }
          },
          {
            "id": 553,
            "type": {
              "path": [
                "pallet_staking",
                "slashing",
                "SlashingSpans"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "span_index",
                      "type": 4,
                      "typeName": "SpanIndex",
                      "docs": []
                    },
                    {
                      "name": "last_start",
                      "type": 4,
                      "typeName": "EraIndex",
                      "docs": []
                    },
                    {
                      "name": "last_nonzero_slash",
                      "type": 4,
                      "typeName": "EraIndex",
                      "docs": []
                    },
                    {
                      "name": "prior",
                      "type": 115,
                      "typeName": "Vec<EraIndex>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 554,
            "type": {
              "path": [
                "pallet_staking",
                "slashing",
                "SpanRecord"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "slashed",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "paid_out",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 555,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 556
                }
              },
              "docs": []
            }
          },
          {
            "id": 556,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  43
                ]
              },
              "docs": []
            }
          },
          {
            "id": 557,
            "type": {
              "path": [
                "pallet_staking",
                "pallet",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotController",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Not a controller account."
                      ]
                    },
                    {
                      "name": "NotStash",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Not a stash account."
                      ]
                    },
                    {
                      "name": "AlreadyBonded",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Stash is already bonded."
                      ]
                    },
                    {
                      "name": "AlreadyPaired",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Controller is already paired."
                      ]
                    },
                    {
                      "name": "EmptyTargets",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Targets cannot be empty."
                      ]
                    },
                    {
                      "name": "DuplicateIndex",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Duplicate index."
                      ]
                    },
                    {
                      "name": "InvalidSlashIndex",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Slash record index out of bounds."
                      ]
                    },
                    {
                      "name": "InsufficientBond",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Cannot have a validator or nominator role, with value less than the minimum defined by",
                        "governance (see `MinValidatorBond` and `MinNominatorBond`). If unbonding is the",
                        "intention, `chill` first to remove one's role as validator/nominator."
                      ]
                    },
                    {
                      "name": "NoMoreChunks",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Can not schedule more unlock chunks."
                      ]
                    },
                    {
                      "name": "NoUnlockChunk",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "Can not rebond without unlocking chunks."
                      ]
                    },
                    {
                      "name": "FundedTarget",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "Attempting to target a stash that still has funds."
                      ]
                    },
                    {
                      "name": "InvalidEraToReward",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "Invalid era to reward."
                      ]
                    },
                    {
                      "name": "InvalidNumberOfNominations",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "Invalid number of nominations."
                      ]
                    },
                    {
                      "name": "NotSortedAndUnique",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "Items are not sorted and unique."
                      ]
                    },
                    {
                      "name": "AlreadyClaimed",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "Rewards for this era have already been claimed for this validator."
                      ]
                    },
                    {
                      "name": "InvalidPage",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "No nominators exist on this page."
                      ]
                    },
                    {
                      "name": "IncorrectHistoryDepth",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "Incorrect previous history depth input provided."
                      ]
                    },
                    {
                      "name": "IncorrectSlashingSpans",
                      "fields": [],
                      "index": 17,
                      "docs": [
                        "Incorrect number of slashing spans provided."
                      ]
                    },
                    {
                      "name": "BadState",
                      "fields": [],
                      "index": 18,
                      "docs": [
                        "Internal state has become somehow corrupted and the operation cannot continue."
                      ]
                    },
                    {
                      "name": "TooManyTargets",
                      "fields": [],
                      "index": 19,
                      "docs": [
                        "Too many nomination targets supplied."
                      ]
                    },
                    {
                      "name": "BadTarget",
                      "fields": [],
                      "index": 20,
                      "docs": [
                        "A nomination target was supplied that was blocked or otherwise not a validator."
                      ]
                    },
                    {
                      "name": "CannotChillOther",
                      "fields": [],
                      "index": 21,
                      "docs": [
                        "The user has enough bond and thus cannot be chilled forcefully by an external person."
                      ]
                    },
                    {
                      "name": "TooManyNominators",
                      "fields": [],
                      "index": 22,
                      "docs": [
                        "There are too many nominators in the system. Governance needs to adjust the staking",
                        "settings to keep things safe for the runtime."
                      ]
                    },
                    {
                      "name": "TooManyValidators",
                      "fields": [],
                      "index": 23,
                      "docs": [
                        "There are too many validator candidates in the system. Governance needs to adjust the",
                        "staking settings to keep things safe for the runtime."
                      ]
                    },
                    {
                      "name": "CommissionTooLow",
                      "fields": [],
                      "index": 24,
                      "docs": [
                        "Commission is too low. Must be at least `MinCommission`."
                      ]
                    },
                    {
                      "name": "BoundNotMet",
                      "fields": [],
                      "index": 25,
                      "docs": [
                        "Some bound is not met."
                      ]
                    },
                    {
                      "name": "ControllerDeprecated",
                      "fields": [],
                      "index": 26,
                      "docs": [
                        "Used when attempting to use deprecated controller account logic."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 558,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 559
                }
              },
              "docs": []
            }
          },
          {
            "id": 559,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  236
                ]
              },
              "docs": []
            }
          },
          {
            "id": 560,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  561,
                  13
                ]
              },
              "docs": []
            }
          },
          {
            "id": 561,
            "type": {
              "path": [
                "sp_core",
                "crypto",
                "KeyTypeId"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 17,
                      "typeName": "[u8; 4]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 562,
            "type": {
              "path": [
                "pallet_session",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidProof",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Invalid ownership proof."
                      ]
                    },
                    {
                      "name": "NoAssociatedValidatorId",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "No associated validator ID for account."
                      ]
                    },
                    {
                      "name": "DuplicatedKey",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Registered duplicate key."
                      ]
                    },
                    {
                      "name": "NoKeys",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "No keys are associated with this account."
                      ]
                    },
                    {
                      "name": "NoAccount",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Key setting account is not live, so it's impossible to associate keys."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the session pallet."
              ]
            }
          },
          {
            "id": 563,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 564
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 565,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 564,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  141,
                  0
                ]
              },
              "docs": []
            }
          },
          {
            "id": 565,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 564
                }
              },
              "docs": []
            }
          },
          {
            "id": 566,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  567,
                  6
                ]
              },
              "docs": []
            }
          },
          {
            "id": 567,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 90,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 568,
            "type": {
              "path": [
                "pallet_democracy",
                "types",
                "ReferendumInfo"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Proposal",
                  "type": 141
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ongoing",
                      "fields": [
                        {
                          "name": null,
                          "type": 569,
                          "typeName": "ReferendumStatus<BlockNumber, Proposal, Balance>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Finished",
                      "fields": [
                        {
                          "name": "approved",
                          "type": 43,
                          "typeName": "bool",
                          "docs": []
                        },
                        {
                          "name": "end",
                          "type": 4,
                          "typeName": "BlockNumber",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 569,
            "type": {
              "path": [
                "pallet_democracy",
                "types",
                "ReferendumStatus"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Proposal",
                  "type": 141
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "end",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "proposal",
                      "type": 141,
                      "typeName": "Proposal",
                      "docs": []
                    },
                    {
                      "name": "threshold",
                      "type": 55,
                      "typeName": "VoteThreshold",
                      "docs": []
                    },
                    {
                      "name": "delay",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "tally",
                      "type": 570,
                      "typeName": "Tally<Balance>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 570,
            "type": {
              "path": [
                "pallet_democracy",
                "types",
                "Tally"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "ayes",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "nays",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "turnout",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 571,
            "type": {
              "path": [
                "pallet_democracy",
                "vote",
                "Voting"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "MaxVotes",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Direct",
                      "fields": [
                        {
                          "name": "votes",
                          "type": 572,
                          "typeName": "BoundedVec<(ReferendumIndex, AccountVote<Balance>), MaxVotes>",
                          "docs": []
                        },
                        {
                          "name": "delegations",
                          "type": 575,
                          "typeName": "Delegations<Balance>",
                          "docs": []
                        },
                        {
                          "name": "prior",
                          "type": 576,
                          "typeName": "PriorLock<BlockNumber, Balance>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Delegating",
                      "fields": [
                        {
                          "name": "balance",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        },
                        {
                          "name": "target",
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        },
                        {
                          "name": "conviction",
                          "type": 240,
                          "typeName": "Conviction",
                          "docs": []
                        },
                        {
                          "name": "delegations",
                          "type": 575,
                          "typeName": "Delegations<Balance>",
                          "docs": []
                        },
                        {
                          "name": "prior",
                          "type": 576,
                          "typeName": "PriorLock<BlockNumber, Balance>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 572,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 573
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 574,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 573,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  56
                ]
              },
              "docs": []
            }
          },
          {
            "id": 574,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 573
                }
              },
              "docs": []
            }
          },
          {
            "id": 575,
            "type": {
              "path": [
                "pallet_democracy",
                "types",
                "Delegations"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "votes",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "capital",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 576,
            "type": {
              "path": [
                "pallet_democracy",
                "vote",
                "PriorLock"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 577,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  141,
                  55
                ]
              },
              "docs": []
            }
          },
          {
            "id": 578,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  567
                ]
              },
              "docs": []
            }
          },
          {
            "id": 579,
            "type": {
              "path": [
                "pallet_democracy",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ValueLow",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Value too low"
                      ]
                    },
                    {
                      "name": "ProposalMissing",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Proposal does not exist"
                      ]
                    },
                    {
                      "name": "AlreadyCanceled",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Cannot cancel the same proposal twice"
                      ]
                    },
                    {
                      "name": "DuplicateProposal",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Proposal already made"
                      ]
                    },
                    {
                      "name": "ProposalBlacklisted",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Proposal still blacklisted"
                      ]
                    },
                    {
                      "name": "NotSimpleMajority",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Next external proposal not simple majority"
                      ]
                    },
                    {
                      "name": "InvalidHash",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Invalid hash"
                      ]
                    },
                    {
                      "name": "NoProposal",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "No external proposal"
                      ]
                    },
                    {
                      "name": "AlreadyVetoed",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Identity may not veto a proposal twice"
                      ]
                    },
                    {
                      "name": "ReferendumInvalid",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "Vote given for invalid referendum"
                      ]
                    },
                    {
                      "name": "NoneWaiting",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "No proposals waiting"
                      ]
                    },
                    {
                      "name": "NotVoter",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The given account did not vote on the referendum."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "The actor has no permission to conduct the action."
                      ]
                    },
                    {
                      "name": "AlreadyDelegating",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "The account is already delegating."
                      ]
                    },
                    {
                      "name": "InsufficientFunds",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "Too high a balance was provided that the account cannot afford."
                      ]
                    },
                    {
                      "name": "NotDelegating",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "The account is not currently delegating."
                      ]
                    },
                    {
                      "name": "VotesExist",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "The account currently has votes attached to it and the operation cannot succeed until",
                        "these are removed, either through `unvote` or `reap_vote`."
                      ]
                    },
                    {
                      "name": "InstantNotAllowed",
                      "fields": [],
                      "index": 17,
                      "docs": [
                        "The instant referendum origin is currently disallowed."
                      ]
                    },
                    {
                      "name": "Nonsense",
                      "fields": [],
                      "index": 18,
                      "docs": [
                        "Delegation to oneself makes no sense."
                      ]
                    },
                    {
                      "name": "WrongUpperBound",
                      "fields": [],
                      "index": 19,
                      "docs": [
                        "Invalid upper bound."
                      ]
                    },
                    {
                      "name": "MaxVotesReached",
                      "fields": [],
                      "index": 20,
                      "docs": [
                        "Maximum number of votes reached."
                      ]
                    },
                    {
                      "name": "TooMany",
                      "fields": [],
                      "index": 21,
                      "docs": [
                        "Maximum number of items reached."
                      ]
                    },
                    {
                      "name": "VotingPeriodLow",
                      "fields": [],
                      "index": 22,
                      "docs": [
                        "Voting period too low"
                      ]
                    },
                    {
                      "name": "PreimageNotExist",
                      "fields": [],
                      "index": 23,
                      "docs": [
                        "The preimage does not exist."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 580,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 12
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 316,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 581,
            "type": {
              "path": [
                "pallet_collective",
                "Votes"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "index",
                      "type": 4,
                      "typeName": "ProposalIndex",
                      "docs": []
                    },
                    {
                      "name": "threshold",
                      "type": 4,
                      "typeName": "MemberCount",
                      "docs": []
                    },
                    {
                      "name": "ayes",
                      "type": 90,
                      "typeName": "Vec<AccountId>",
                      "docs": []
                    },
                    {
                      "name": "nays",
                      "type": 90,
                      "typeName": "Vec<AccountId>",
                      "docs": []
                    },
                    {
                      "name": "end",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 582,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotMember",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Account is not a member"
                      ]
                    },
                    {
                      "name": "DuplicateProposal",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Duplicate proposals not allowed"
                      ]
                    },
                    {
                      "name": "ProposalMissing",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Proposal must exist"
                      ]
                    },
                    {
                      "name": "WrongIndex",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Mismatched index"
                      ]
                    },
                    {
                      "name": "DuplicateVote",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Duplicate vote ignored"
                      ]
                    },
                    {
                      "name": "AlreadyInitialized",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Members are already initialized!"
                      ]
                    },
                    {
                      "name": "TooEarly",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "The close call was made too early, before the end of the voting."
                      ]
                    },
                    {
                      "name": "TooManyProposals",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "There can only be a maximum of `MaxProposals` active proposals."
                      ]
                    },
                    {
                      "name": "WrongProposalWeight",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "The given weight bound for the proposal was too low."
                      ]
                    },
                    {
                      "name": "WrongProposalLength",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "The given length bound for the proposal was too low."
                      ]
                    },
                    {
                      "name": "PrimeAccountNotMember",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "Prime account is not a member"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 583,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 12
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 316,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 584,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotMember",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Account is not a member"
                      ]
                    },
                    {
                      "name": "DuplicateProposal",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Duplicate proposals not allowed"
                      ]
                    },
                    {
                      "name": "ProposalMissing",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Proposal must exist"
                      ]
                    },
                    {
                      "name": "WrongIndex",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Mismatched index"
                      ]
                    },
                    {
                      "name": "DuplicateVote",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Duplicate vote ignored"
                      ]
                    },
                    {
                      "name": "AlreadyInitialized",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Members are already initialized!"
                      ]
                    },
                    {
                      "name": "TooEarly",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "The close call was made too early, before the end of the voting."
                      ]
                    },
                    {
                      "name": "TooManyProposals",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "There can only be a maximum of `MaxProposals` active proposals."
                      ]
                    },
                    {
                      "name": "WrongProposalWeight",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "The given weight bound for the proposal was too low."
                      ]
                    },
                    {
                      "name": "WrongProposalLength",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "The given length bound for the proposal was too low."
                      ]
                    },
                    {
                      "name": "PrimeAccountNotMember",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "Prime account is not a member"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 585,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 586
                }
              },
              "docs": []
            }
          },
          {
            "id": 586,
            "type": {
              "path": [
                "pallet_elections_phragmen",
                "SeatHolder"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "who",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "stake",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 587,
            "type": {
              "path": [
                "pallet_elections_phragmen",
                "Voter"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "votes",
                      "type": 90,
                      "typeName": "Vec<AccountId>",
                      "docs": []
                    },
                    {
                      "name": "stake",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 588,
            "type": {
              "path": [
                "pallet_elections_phragmen",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "UnableToVote",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Cannot vote when no candidates or members exist."
                      ]
                    },
                    {
                      "name": "NoVotes",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Must vote for at least one candidate."
                      ]
                    },
                    {
                      "name": "TooManyVotes",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Cannot vote more than candidates."
                      ]
                    },
                    {
                      "name": "MaximumVotesExceeded",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Cannot vote more than maximum allowed."
                      ]
                    },
                    {
                      "name": "LowBalance",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Cannot vote with stake less than minimum balance."
                      ]
                    },
                    {
                      "name": "UnableToPayBond",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Voter can not pay voting bond."
                      ]
                    },
                    {
                      "name": "MustBeVoter",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Must be a voter."
                      ]
                    },
                    {
                      "name": "DuplicatedCandidate",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Duplicated candidate submission."
                      ]
                    },
                    {
                      "name": "TooManyCandidates",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Too many candidates have been created."
                      ]
                    },
                    {
                      "name": "MemberSubmit",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "Member cannot re-submit candidacy."
                      ]
                    },
                    {
                      "name": "RunnerUpSubmit",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "Runner cannot re-submit candidacy."
                      ]
                    },
                    {
                      "name": "InsufficientCandidateFunds",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "Candidate does not have enough funds."
                      ]
                    },
                    {
                      "name": "NotMember",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "Not a member."
                      ]
                    },
                    {
                      "name": "InvalidWitnessData",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "The provided count of number of candidates is incorrect."
                      ]
                    },
                    {
                      "name": "InvalidVoteCount",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "The provided count of number of votes is incorrect."
                      ]
                    },
                    {
                      "name": "InvalidRenouncing",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "The renouncing origin presented a wrong `Renouncing` parameter."
                      ]
                    },
                    {
                      "name": "InvalidReplacement",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "Prediction regarding replacement after member removal is wrong."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 589,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 90,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 590,
            "type": {
              "path": [
                "pallet_membership",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AlreadyMember",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Already a member."
                      ]
                    },
                    {
                      "name": "NotMember",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Not a member."
                      ]
                    },
                    {
                      "name": "TooManyMembers",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Too many members."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 591,
            "type": {
              "path": [
                "pallet_grandpa",
                "StoredState"
              ],
              "params": [
                {
                  "name": "N",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Live",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "PendingPause",
                      "fields": [
                        {
                          "name": "scheduled_at",
                          "type": 4,
                          "typeName": "N",
                          "docs": []
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "N",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Paused",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "PendingResume",
                      "fields": [
                        {
                          "name": "scheduled_at",
                          "type": 4,
                          "typeName": "N",
                          "docs": []
                        },
                        {
                          "name": "delay",
                          "type": 4,
                          "typeName": "N",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 592,
            "type": {
              "path": [
                "pallet_grandpa",
                "StoredPendingChange"
              ],
              "params": [
                {
                  "name": "N",
                  "type": 4
                },
                {
                  "name": "Limit",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "scheduled_at",
                      "type": 4,
                      "typeName": "N",
                      "docs": []
                    },
                    {
                      "name": "delay",
                      "type": 4,
                      "typeName": "N",
                      "docs": []
                    },
                    {
                      "name": "next_authorities",
                      "type": 593,
                      "typeName": "BoundedAuthorityList<Limit>",
                      "docs": []
                    },
                    {
                      "name": "forced",
                      "type": 38,
                      "typeName": "Option<N>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 593,
            "type": {
              "path": [
                "bounded_collections",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 67
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 66,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 594,
            "type": {
              "path": [
                "pallet_grandpa",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PauseFailed",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Attempt to signal GRANDPA pause when the authority set isn't live",
                        "(either paused or already pending pause)."
                      ]
                    },
                    {
                      "name": "ResumeFailed",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Attempt to signal GRANDPA resume when the authority set isn't paused",
                        "(either live or already pending resume)."
                      ]
                    },
                    {
                      "name": "ChangePending",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Attempt to signal GRANDPA change with one already pending."
                      ]
                    },
                    {
                      "name": "TooSoon",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Cannot signal forced change so soon after last."
                      ]
                    },
                    {
                      "name": "InvalidKeyOwnershipProof",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "A key ownership proof provided as part of an equivocation report is invalid."
                      ]
                    },
                    {
                      "name": "InvalidEquivocationProof",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "An equivocation proof provided as part of an equivocation report is invalid."
                      ]
                    },
                    {
                      "name": "DuplicateOffenceReport",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "A given equivocation report is valid but already previously reported."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 595,
            "type": {
              "path": [
                "pallet_treasury",
                "Proposal"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "proposer",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "bond",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 596,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 115,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 597,
            "type": {
              "path": [
                "pallet_treasury",
                "SpendStatus"
              ],
              "params": [
                {
                  "name": "AssetKind",
                  "type": 4
                },
                {
                  "name": "AssetBalance",
                  "type": 6
                },
                {
                  "name": "Beneficiary",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "PaymentId",
                  "type": 32
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "asset_kind",
                      "type": 4,
                      "typeName": "AssetKind",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "AssetBalance",
                      "docs": []
                    },
                    {
                      "name": "beneficiary",
                      "type": 0,
                      "typeName": "Beneficiary",
                      "docs": []
                    },
                    {
                      "name": "valid_from",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "expire_at",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "status",
                      "type": 598,
                      "typeName": "PaymentState<PaymentId>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 598,
            "type": {
              "path": [
                "pallet_treasury",
                "PaymentState"
              ],
              "params": [
                {
                  "name": "Id",
                  "type": 32
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Pending",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Attempted",
                      "fields": [
                        {
                          "name": "id",
                          "type": 32,
                          "typeName": "Id",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Failed",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 599,
            "type": {
              "path": [
                "frame_support",
                "PalletId"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 281,
                      "typeName": "[u8; 8]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 600,
            "type": {
              "path": [
                "pallet_treasury",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InsufficientProposersBalance",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Proposer's balance is too low."
                      ]
                    },
                    {
                      "name": "InvalidIndex",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "No proposal, bounty or spend at that index."
                      ]
                    },
                    {
                      "name": "TooManyApprovals",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Too many approvals in the queue."
                      ]
                    },
                    {
                      "name": "InsufficientPermission",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The spend origin is valid but the amount it is allowed to spend is lower than the",
                        "amount to be spent."
                      ]
                    },
                    {
                      "name": "ProposalNotApproved",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Proposal has not been approved."
                      ]
                    },
                    {
                      "name": "FailedToConvertBalance",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The balance of the asset kind is not convertible to the balance of the native asset."
                      ]
                    },
                    {
                      "name": "SpendExpired",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "The spend has expired and cannot be claimed."
                      ]
                    },
                    {
                      "name": "EarlyPayout",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "The spend is not yet eligible for payout."
                      ]
                    },
                    {
                      "name": "AlreadyAttempted",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "The payment has already been attempted."
                      ]
                    },
                    {
                      "name": "PayoutError",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "There was some issue with the mechanism of payment."
                      ]
                    },
                    {
                      "name": "NotAttempted",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The payout was not yet attempted/claimed."
                      ]
                    },
                    {
                      "name": "Inconclusive",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The payment has neither failed nor succeeded yet."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the treasury pallet."
              ]
            }
          },
          {
            "id": 601,
            "type": {
              "path": [
                "pallet_asset_rate",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "UnknownAssetKind",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The given asset ID is unknown."
                      ]
                    },
                    {
                      "name": "AlreadyExists",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The given asset ID already has an assigned conversion rate and cannot be re-created."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 602,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 603,
            "type": {
              "path": [
                "pallet_contracts",
                "wasm",
                "CodeInfo"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "owner",
                      "type": 0,
                      "typeName": "AccountIdOf<T>",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 83,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "refcount",
                      "type": 10,
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "determinism",
                      "type": 263,
                      "typeName": "Determinism",
                      "docs": []
                    },
                    {
                      "name": "code_len",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 604,
            "type": {
              "path": [
                "pallet_contracts",
                "storage",
                "ContractInfo"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "trie_id",
                      "type": 114,
                      "typeName": "TrieId",
                      "docs": []
                    },
                    {
                      "name": "code_hash",
                      "type": 12,
                      "typeName": "CodeHash<T>",
                      "docs": []
                    },
                    {
                      "name": "storage_bytes",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "storage_items",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "storage_byte_deposit",
                      "type": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "storage_item_deposit",
                      "type": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "storage_base_deposit",
                      "type": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "delegate_dependencies",
                      "type": 605,
                      "typeName": "BoundedBTreeMap<CodeHash<T>, BalanceOf<T>, T::\nMaxDelegateDependencies>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 605,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_btree_map",
                "BoundedBTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 12
                },
                {
                  "name": "V",
                  "type": 6
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 606,
                      "typeName": "BTreeMap<K, V>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 606,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 12
                },
                {
                  "name": "V",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 607,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 607,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 608
                }
              },
              "docs": []
            }
          },
          {
            "id": 608,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  12,
                  6
                ]
              },
              "docs": []
            }
          },
          {
            "id": 609,
            "type": {
              "path": [
                "pallet_contracts",
                "storage",
                "DeletionQueueManager"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "insert_counter",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "delete_counter",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 610,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 611,
            "type": {
              "path": [
                "pallet_contracts",
                "schedule",
                "Schedule"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "limits",
                      "type": 612,
                      "typeName": "Limits",
                      "docs": []
                    },
                    {
                      "name": "instruction_weights",
                      "type": 613,
                      "typeName": "InstructionWeights<T>",
                      "docs": []
                    },
                    {
                      "name": "host_fn_weights",
                      "type": 614,
                      "typeName": "HostFnWeights<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 612,
            "type": {
              "path": [
                "pallet_contracts",
                "schedule",
                "Limits"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "event_topics",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "globals",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "locals",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "parameters",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "memory_pages",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "table_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "br_table_size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "subject_len",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "payload_len",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "runtime_memory",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 613,
            "type": {
              "path": [
                "pallet_contracts",
                "schedule",
                "InstructionWeights"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "base",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 614,
            "type": {
              "path": [
                "pallet_contracts",
                "schedule",
                "HostFnWeights"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "caller",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "is_contract",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "code_hash",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "own_code_hash",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "caller_is_origin",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "caller_is_root",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "address",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "gas_left",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "balance",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "value_transferred",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "minimum_balance",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "block_number",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "now",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "weight_to_fee",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "input",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "input_per_byte",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "r#return",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "return_per_byte",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "terminate",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "random",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "deposit_event",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "deposit_event_per_topic",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "deposit_event_per_byte",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "debug_message",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "debug_message_per_byte",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "set_storage",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "set_storage_per_new_byte",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "set_storage_per_old_byte",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "set_code_hash",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "clear_storage",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "clear_storage_per_byte",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "contains_storage",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "contains_storage_per_byte",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "get_storage",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "get_storage_per_byte",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "take_storage",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "take_storage_per_byte",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "transfer",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "delegate_call",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "call_transfer_surcharge",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "call_per_cloned_byte",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "instantiate",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "instantiate_transfer_surcharge",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "instantiate_per_input_byte",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "instantiate_per_salt_byte",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "hash_sha2_256",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "hash_sha2_256_per_byte",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "hash_keccak_256",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "hash_keccak_256_per_byte",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "hash_blake2_256",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "hash_blake2_256_per_byte",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "hash_blake2_128",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "hash_blake2_128_per_byte",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "ecdsa_recover",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "ecdsa_to_eth_address",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "sr25519_verify",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "sr25519_verify_per_byte",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "reentrance_count",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "account_reentrance_count",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "instantiation_nonce",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "add_delegate_dependency",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    },
                    {
                      "name": "remove_delegate_dependency",
                      "type": 9,
                      "typeName": "Weight",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 615,
            "type": {
              "path": [
                "pallet_contracts",
                "Environment"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "account_id",
                      "type": 616,
                      "typeName": "EnvironmentType<AccountIdOf<T>>",
                      "docs": []
                    },
                    {
                      "name": "balance",
                      "type": 617,
                      "typeName": "EnvironmentType<BalanceOf<T>>",
                      "docs": []
                    },
                    {
                      "name": "hash",
                      "type": 618,
                      "typeName": "EnvironmentType<<T as frame_system::Config>::Hash>",
                      "docs": []
                    },
                    {
                      "name": "hasher",
                      "type": 619,
                      "typeName": "EnvironmentType<<T as frame_system::Config>::Hashing>",
                      "docs": []
                    },
                    {
                      "name": "timestamp",
                      "type": 620,
                      "typeName": "EnvironmentType<MomentOf<T>>",
                      "docs": []
                    },
                    {
                      "name": "block_number",
                      "type": 621,
                      "typeName": "EnvironmentType<BlockNumberFor<T>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 616,
            "type": {
              "path": [
                "pallet_contracts",
                "EnvironmentType"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 617,
            "type": {
              "path": [
                "pallet_contracts",
                "EnvironmentType"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 618,
            "type": {
              "path": [
                "pallet_contracts",
                "EnvironmentType"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 619,
            "type": {
              "path": [
                "pallet_contracts",
                "EnvironmentType"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 425
                }
              ],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 620,
            "type": {
              "path": [
                "pallet_contracts",
                "EnvironmentType"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 11
                }
              ],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 621,
            "type": {
              "path": [
                "pallet_contracts",
                "EnvironmentType"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 622,
            "type": {
              "path": [
                "pallet_contracts",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidSchedule",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Invalid schedule supplied, e.g. with zero weight of a basic operation."
                      ]
                    },
                    {
                      "name": "InvalidCallFlags",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Invalid combination of flags supplied to `seal_call` or `seal_delegate_call`."
                      ]
                    },
                    {
                      "name": "OutOfGas",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The executed contract exhausted its gas limit."
                      ]
                    },
                    {
                      "name": "OutputBufferTooSmall",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The output buffer supplied to a contract API call was too small."
                      ]
                    },
                    {
                      "name": "TransferFailed",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Performing the requested transfer failed. Probably because there isn't enough",
                        "free balance in the sender's account."
                      ]
                    },
                    {
                      "name": "MaxCallDepthReached",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Performing a call was denied because the calling depth reached the limit",
                        "of what is specified in the schedule."
                      ]
                    },
                    {
                      "name": "ContractNotFound",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "No contract was found at the specified address."
                      ]
                    },
                    {
                      "name": "CodeTooLarge",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "The code supplied to `instantiate_with_code` exceeds the limit specified in the",
                        "current schedule."
                      ]
                    },
                    {
                      "name": "CodeNotFound",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "No code could be found at the supplied code hash."
                      ]
                    },
                    {
                      "name": "CodeInfoNotFound",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "No code info could be found at the supplied code hash."
                      ]
                    },
                    {
                      "name": "OutOfBounds",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "A buffer outside of sandbox memory was passed to a contract API function."
                      ]
                    },
                    {
                      "name": "DecodingFailed",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "Input passed to a contract API function failed to decode as expected type."
                      ]
                    },
                    {
                      "name": "ContractTrapped",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "Contract trapped during execution."
                      ]
                    },
                    {
                      "name": "ValueTooLarge",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "The size defined in `T::MaxValueSize` was exceeded."
                      ]
                    },
                    {
                      "name": "TerminatedWhileReentrant",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "Termination of a contract is not allowed while the contract is already",
                        "on the call stack. Can be triggered by `seal_terminate`."
                      ]
                    },
                    {
                      "name": "InputForwarded",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "`seal_call` forwarded this contracts input. It therefore is no longer available."
                      ]
                    },
                    {
                      "name": "RandomSubjectTooLong",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "The subject passed to `seal_random` exceeds the limit."
                      ]
                    },
                    {
                      "name": "TooManyTopics",
                      "fields": [],
                      "index": 17,
                      "docs": [
                        "The amount of topics passed to `seal_deposit_events` exceeds the limit."
                      ]
                    },
                    {
                      "name": "NoChainExtension",
                      "fields": [],
                      "index": 18,
                      "docs": [
                        "The chain does not provide a chain extension. Calling the chain extension results",
                        "in this error. Note that this usually  shouldn't happen as deploying such contracts",
                        "is rejected."
                      ]
                    },
                    {
                      "name": "XCMDecodeFailed",
                      "fields": [],
                      "index": 19,
                      "docs": [
                        "Failed to decode the XCM program."
                      ]
                    },
                    {
                      "name": "DuplicateContract",
                      "fields": [],
                      "index": 20,
                      "docs": [
                        "A contract with the same AccountId already exists."
                      ]
                    },
                    {
                      "name": "TerminatedInConstructor",
                      "fields": [],
                      "index": 21,
                      "docs": [
                        "A contract self destructed in its constructor.",
                        "",
                        "This can be triggered by a call to `seal_terminate`."
                      ]
                    },
                    {
                      "name": "ReentranceDenied",
                      "fields": [],
                      "index": 22,
                      "docs": [
                        "A call tried to invoke a contract that is flagged as non-reentrant.",
                        "The only other cause is that a call from a contract into the runtime tried to call back",
                        "into `pallet-contracts`. This would make the whole pallet reentrant with regard to",
                        "contract code execution which is not supported."
                      ]
                    },
                    {
                      "name": "StorageDepositNotEnoughFunds",
                      "fields": [],
                      "index": 23,
                      "docs": [
                        "Origin doesn't have enough balance to pay the required storage deposits."
                      ]
                    },
                    {
                      "name": "StorageDepositLimitExhausted",
                      "fields": [],
                      "index": 24,
                      "docs": [
                        "More storage was created than allowed by the storage deposit limit."
                      ]
                    },
                    {
                      "name": "CodeInUse",
                      "fields": [],
                      "index": 25,
                      "docs": [
                        "Code removal was denied because the code is still in use by at least one contract."
                      ]
                    },
                    {
                      "name": "ContractReverted",
                      "fields": [],
                      "index": 26,
                      "docs": [
                        "The contract ran to completion but decided to revert its storage changes.",
                        "Please note that this error is only returned from extrinsics. When called directly",
                        "or via RPC an `Ok` will be returned. In this case the caller needs to inspect the flags",
                        "to determine whether a reversion has taken place."
                      ]
                    },
                    {
                      "name": "CodeRejected",
                      "fields": [],
                      "index": 27,
                      "docs": [
                        "The contract's code was found to be invalid during validation.",
                        "",
                        "The most likely cause of this is that an API was used which is not supported by the",
                        "node. This happens if an older node is used with a new version of ink!. Try updating",
                        "your node to the newest available version.",
                        "",
                        "A more detailed error can be found on the node console if debug messages are enabled",
                        "by supplying `-lruntime::contracts=debug`."
                      ]
                    },
                    {
                      "name": "Indeterministic",
                      "fields": [],
                      "index": 28,
                      "docs": [
                        "An indetermistic code was used in a context where this is not permitted."
                      ]
                    },
                    {
                      "name": "MigrationInProgress",
                      "fields": [],
                      "index": 29,
                      "docs": [
                        "A pending migration needs to complete before the extrinsic can be called."
                      ]
                    },
                    {
                      "name": "NoMigrationPerformed",
                      "fields": [],
                      "index": 30,
                      "docs": [
                        "Migrate dispatch call was attempted but no migration was performed."
                      ]
                    },
                    {
                      "name": "MaxDelegateDependenciesReached",
                      "fields": [],
                      "index": 31,
                      "docs": [
                        "The contract has reached its maximum number of delegate dependencies."
                      ]
                    },
                    {
                      "name": "DelegateDependencyNotFound",
                      "fields": [],
                      "index": 32,
                      "docs": [
                        "The dependency was not found in the contract's delegate dependencies."
                      ]
                    },
                    {
                      "name": "DelegateDependencyAlreadyExists",
                      "fields": [],
                      "index": 33,
                      "docs": [
                        "The contract already depends on the given delegate dependency."
                      ]
                    },
                    {
                      "name": "CannotAddSelfAsDelegateDependency",
                      "fields": [],
                      "index": 34,
                      "docs": [
                        "Can not add a delegate dependency to the code hash of the contract itself."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 623,
            "type": {
              "path": [
                "pallet_sudo",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "RequireSudo",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Sender must be the Sudo account."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the Sudo pallet."
              ]
            }
          },
          {
            "id": 624,
            "type": {
              "path": [
                "bounded_collections",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 78
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 625,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 625,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 78
                }
              },
              "docs": []
            }
          },
          {
            "id": 626,
            "type": {
              "path": [
                "pallet_im_online",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InvalidKey",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Non existent public key."
                      ]
                    },
                    {
                      "name": "DuplicatedHeartbeat",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Duplicated heartbeat."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 627,
            "type": {
              "path": [
                "bounded_collections",
                "weak_bounded_vec",
                "WeakBoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 237
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 628,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 628,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 237
                }
              },
              "docs": []
            }
          },
          {
            "id": 629,
            "type": {
              "path": [
                "sp_staking",
                "offence",
                "OffenceDetails"
              ],
              "params": [
                {
                  "name": "Reporter",
                  "type": 0
                },
                {
                  "name": "Offender",
                  "type": 81
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "offender",
                      "type": 81,
                      "typeName": "Offender",
                      "docs": []
                    },
                    {
                      "name": "reporters",
                      "type": 90,
                      "typeName": "Vec<Reporter>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 630,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  87,
                  13
                ]
              },
              "docs": []
            }
          },
          {
            "id": 631,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 12
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 316,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 632,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "Registration"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "MaxJudgements",
                  "type": null
                },
                {
                  "name": "IdentityInfo",
                  "type": 270
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "judgements",
                      "type": 633,
                      "typeName": "BoundedVec<(RegistrarIndex, Judgement<Balance>), MaxJudgements>",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "info",
                      "type": 270,
                      "typeName": "IdentityInfo",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 633,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 634
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 635,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 634,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  307
                ]
              },
              "docs": []
            }
          },
          {
            "id": 635,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 634
                }
              },
              "docs": []
            }
          },
          {
            "id": 636,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  6,
                  637
                ]
              },
              "docs": []
            }
          },
          {
            "id": 637,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 90,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 638,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 639
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 641,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 639,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 640
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 640,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 640,
            "type": {
              "path": [
                "pallet_identity",
                "types",
                "RegistrarInfo"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "IdField",
                  "type": 11
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "account",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "fee",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "fields",
                      "type": 11,
                      "typeName": "IdField",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 641,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 639
                }
              },
              "docs": []
            }
          },
          {
            "id": 642,
            "type": {
              "path": [
                "pallet_identity",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooManySubAccounts",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Too many subs-accounts."
                      ]
                    },
                    {
                      "name": "NotFound",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Account isn't found."
                      ]
                    },
                    {
                      "name": "NotNamed",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Account isn't named."
                      ]
                    },
                    {
                      "name": "EmptyIndex",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Empty index."
                      ]
                    },
                    {
                      "name": "FeeChanged",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Fee is changed."
                      ]
                    },
                    {
                      "name": "NoIdentity",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "No identity found."
                      ]
                    },
                    {
                      "name": "StickyJudgement",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Sticky judgement."
                      ]
                    },
                    {
                      "name": "JudgementGiven",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Judgement given."
                      ]
                    },
                    {
                      "name": "InvalidJudgement",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Invalid judgement."
                      ]
                    },
                    {
                      "name": "InvalidIndex",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "The index is invalid."
                      ]
                    },
                    {
                      "name": "InvalidTarget",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The target is invalid."
                      ]
                    },
                    {
                      "name": "TooManyRegistrars",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "Maximum amount of registrars reached. Cannot add any more."
                      ]
                    },
                    {
                      "name": "AlreadyClaimed",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "Account ID is already named."
                      ]
                    },
                    {
                      "name": "NotSub",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "Sender is not a sub-account."
                      ]
                    },
                    {
                      "name": "NotOwned",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "Sub-account isn't owned by sender."
                      ]
                    },
                    {
                      "name": "JudgementForDifferentIdentity",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "The provided judgement was for a different identity."
                      ]
                    },
                    {
                      "name": "JudgementPaymentFailed",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "Error that occurs when there is an issue paying for judgement."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 643,
            "type": {
              "path": [
                "pallet_society",
                "MemberRecord"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "rank",
                      "type": 4,
                      "typeName": "Rank",
                      "docs": []
                    },
                    {
                      "name": "strikes",
                      "type": 4,
                      "typeName": "StrikeCount",
                      "docs": []
                    },
                    {
                      "name": "vouching",
                      "type": 644,
                      "typeName": "Option<VouchingStatus>",
                      "docs": []
                    },
                    {
                      "name": "index",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 644,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 645
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 645,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 645,
            "type": {
              "path": [
                "pallet_society",
                "VouchingStatus"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Vouching",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Banned",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 646,
            "type": {
              "path": [
                "pallet_society",
                "PayoutRecord"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "PayoutsVec",
                  "type": 647
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "paid",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "payouts",
                      "type": 647,
                      "typeName": "PayoutsVec",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 647,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 648
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 649,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 648,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  6
                ]
              },
              "docs": []
            }
          },
          {
            "id": 649,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 648
                }
              },
              "docs": []
            }
          },
          {
            "id": 650,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 651
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 653,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 651,
            "type": {
              "path": [
                "pallet_society",
                "Bid"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "who",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "kind",
                      "type": 652,
                      "typeName": "BidKind<AccountId, Balance>",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 652,
            "type": {
              "path": [
                "pallet_society",
                "BidKind"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Deposit",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Vouch",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 653,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 651
                }
              },
              "docs": []
            }
          },
          {
            "id": 654,
            "type": {
              "path": [
                "pallet_society",
                "Candidacy"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "round",
                      "type": 4,
                      "typeName": "RoundIndex",
                      "docs": []
                    },
                    {
                      "name": "kind",
                      "type": 652,
                      "typeName": "BidKind<AccountId, Balance>",
                      "docs": []
                    },
                    {
                      "name": "bid",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "tally",
                      "type": 655,
                      "typeName": "Tally",
                      "docs": []
                    },
                    {
                      "name": "skeptic_struck",
                      "type": 43,
                      "typeName": "bool",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 655,
            "type": {
              "path": [
                "pallet_society",
                "Tally"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "approvals",
                      "type": 4,
                      "typeName": "VoteCount",
                      "docs": []
                    },
                    {
                      "name": "rejections",
                      "type": 4,
                      "typeName": "VoteCount",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 656,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  0
                ]
              },
              "docs": []
            }
          },
          {
            "id": 657,
            "type": {
              "path": [
                "pallet_society",
                "Vote"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "approve",
                      "type": 43,
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "weight",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 658,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 659,
            "type": {
              "path": [
                "pallet_society",
                "IntakeRecord"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "who",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "bid",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "round",
                      "type": 4,
                      "typeName": "RoundIndex",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 660,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  0,
                  655
                ]
              },
              "docs": []
            }
          },
          {
            "id": 661,
            "type": {
              "path": [
                "pallet_society",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotMember",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "User is not a member."
                      ]
                    },
                    {
                      "name": "AlreadyMember",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "User is already a member."
                      ]
                    },
                    {
                      "name": "Suspended",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "User is suspended."
                      ]
                    },
                    {
                      "name": "NotSuspended",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "User is not suspended."
                      ]
                    },
                    {
                      "name": "NoPayout",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Nothing to payout."
                      ]
                    },
                    {
                      "name": "AlreadyFounded",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Society already founded."
                      ]
                    },
                    {
                      "name": "InsufficientPot",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Not enough in pot to accept candidate."
                      ]
                    },
                    {
                      "name": "AlreadyVouching",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Member is already vouching or banned from vouching again."
                      ]
                    },
                    {
                      "name": "NotVouchingOnBidder",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Member is not vouching."
                      ]
                    },
                    {
                      "name": "Head",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "Cannot remove the head of the chain."
                      ]
                    },
                    {
                      "name": "Founder",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "Cannot remove the founder."
                      ]
                    },
                    {
                      "name": "AlreadyBid",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "User has already made a bid."
                      ]
                    },
                    {
                      "name": "AlreadyCandidate",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "User is already a candidate."
                      ]
                    },
                    {
                      "name": "NotCandidate",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "User is not a candidate."
                      ]
                    },
                    {
                      "name": "MaxMembers",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "Too many members in the society."
                      ]
                    },
                    {
                      "name": "NotFounder",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "The caller is not the founder."
                      ]
                    },
                    {
                      "name": "NotHead",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "The caller is not the head."
                      ]
                    },
                    {
                      "name": "NotApproved",
                      "fields": [],
                      "index": 17,
                      "docs": [
                        "The membership cannot be claimed as the candidate was not clearly approved."
                      ]
                    },
                    {
                      "name": "NotRejected",
                      "fields": [],
                      "index": 18,
                      "docs": [
                        "The candidate cannot be kicked as the candidate was not clearly rejected."
                      ]
                    },
                    {
                      "name": "Approved",
                      "fields": [],
                      "index": 19,
                      "docs": [
                        "The candidacy cannot be dropped as the candidate was clearly approved."
                      ]
                    },
                    {
                      "name": "Rejected",
                      "fields": [],
                      "index": 20,
                      "docs": [
                        "The candidacy cannot be bestowed as the candidate was clearly rejected."
                      ]
                    },
                    {
                      "name": "InProgress",
                      "fields": [],
                      "index": 21,
                      "docs": [
                        "The candidacy cannot be concluded as the voting is still in progress."
                      ]
                    },
                    {
                      "name": "TooEarly",
                      "fields": [],
                      "index": 22,
                      "docs": [
                        "The candidacy cannot be pruned until a full additional intake period has passed."
                      ]
                    },
                    {
                      "name": "Voted",
                      "fields": [],
                      "index": 23,
                      "docs": [
                        "The skeptic already voted."
                      ]
                    },
                    {
                      "name": "Expired",
                      "fields": [],
                      "index": 24,
                      "docs": [
                        "The skeptic need not vote on candidates from expired rounds."
                      ]
                    },
                    {
                      "name": "NotBidder",
                      "fields": [],
                      "index": 25,
                      "docs": [
                        "User is not a bidder."
                      ]
                    },
                    {
                      "name": "NoDefender",
                      "fields": [],
                      "index": 26,
                      "docs": [
                        "There is no defender currently."
                      ]
                    },
                    {
                      "name": "NotGroup",
                      "fields": [],
                      "index": 27,
                      "docs": [
                        "Group doesn't exist."
                      ]
                    },
                    {
                      "name": "AlreadyElevated",
                      "fields": [],
                      "index": 28,
                      "docs": [
                        "The member is already elevated to this rank."
                      ]
                    },
                    {
                      "name": "AlreadyPunished",
                      "fields": [],
                      "index": 29,
                      "docs": [
                        "The skeptic has already been punished for this offence."
                      ]
                    },
                    {
                      "name": "InsufficientFunds",
                      "fields": [],
                      "index": 30,
                      "docs": [
                        "Funds are insufficient to pay off society debts."
                      ]
                    },
                    {
                      "name": "NoVotes",
                      "fields": [],
                      "index": 31,
                      "docs": [
                        "The candidate/defender has no stale votes to remove."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 662,
            "type": {
              "path": [
                "pallet_recovery",
                "RecoveryConfig"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Friends",
                  "type": 663
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "delay_period",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "friends",
                      "type": 663,
                      "typeName": "Friends",
                      "docs": []
                    },
                    {
                      "name": "threshold",
                      "type": 102,
                      "typeName": "u16",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 663,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 90,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 664,
            "type": {
              "path": [
                "pallet_recovery",
                "ActiveRecovery"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Friends",
                  "type": 663
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "created",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "friends",
                      "type": 663,
                      "typeName": "Friends",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 665,
            "type": {
              "path": [
                "pallet_recovery",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotAllowed",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "User is not allowed to make a call on behalf of this account"
                      ]
                    },
                    {
                      "name": "ZeroThreshold",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Threshold must be greater than zero"
                      ]
                    },
                    {
                      "name": "NotEnoughFriends",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Friends list must be greater than zero and threshold"
                      ]
                    },
                    {
                      "name": "MaxFriends",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Friends list must be less than max friends"
                      ]
                    },
                    {
                      "name": "NotSorted",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Friends list must be sorted and free of duplicates"
                      ]
                    },
                    {
                      "name": "NotRecoverable",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "This account is not set up for recovery"
                      ]
                    },
                    {
                      "name": "AlreadyRecoverable",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "This account is already set up for recovery"
                      ]
                    },
                    {
                      "name": "AlreadyStarted",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "A recovery process has already started for this account"
                      ]
                    },
                    {
                      "name": "NotStarted",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "A recovery process has not started for this rescuer"
                      ]
                    },
                    {
                      "name": "NotFriend",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "This account is not a friend who can vouch"
                      ]
                    },
                    {
                      "name": "DelayPeriod",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The friend must wait until the delay period to vouch for this recovery"
                      ]
                    },
                    {
                      "name": "AlreadyVouched",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "This user has already vouched for this recovery"
                      ]
                    },
                    {
                      "name": "Threshold",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "The threshold for recovering this account has not been met"
                      ]
                    },
                    {
                      "name": "StillActive",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "There are still active recovery attempts that need to be closed"
                      ]
                    },
                    {
                      "name": "AlreadyProxy",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "This account is already set up for recovery"
                      ]
                    },
                    {
                      "name": "BadState",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "Some internal state is broken."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 666,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 311
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 667,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 667,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 311
                }
              },
              "docs": []
            }
          },
          {
            "id": 668,
            "type": {
              "path": [
                "pallet_vesting",
                "Releases"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "V0",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "V1",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 669,
            "type": {
              "path": [
                "pallet_vesting",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotVesting",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The account given is not vesting."
                      ]
                    },
                    {
                      "name": "AtMaxVestingSchedules",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The account already has `MaxVestingSchedules` count of schedules and thus",
                        "cannot add another one. Consider merging existing schedules in order to add another."
                      ]
                    },
                    {
                      "name": "AmountLow",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Amount being transferred is too low to create a vesting schedule."
                      ]
                    },
                    {
                      "name": "ScheduleIndexOutOfBounds",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "An index was out of bounds of the vesting schedules."
                      ]
                    },
                    {
                      "name": "InvalidScheduleParams",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Failed to create a new schedule because some parameter was invalid."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "Error for the vesting pallet."
              ]
            }
          },
          {
            "id": 670,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 671
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 673,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 671,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 672
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 672,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 672,
            "type": {
              "path": [
                "pallet_scheduler",
                "Scheduled"
              ],
              "params": [
                {
                  "name": "Name",
                  "type": 1
                },
                {
                  "name": "Call",
                  "type": 141
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "PalletsOrigin",
                  "type": 149
                },
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "maybe_id",
                      "type": 96,
                      "typeName": "Option<Name>",
                      "docs": []
                    },
                    {
                      "name": "priority",
                      "type": 2,
                      "typeName": "schedule::Priority",
                      "docs": []
                    },
                    {
                      "name": "call",
                      "type": 141,
                      "typeName": "Call",
                      "docs": []
                    },
                    {
                      "name": "maybe_periodic",
                      "type": 313,
                      "typeName": "Option<schedule::Period<BlockNumber>>",
                      "docs": []
                    },
                    {
                      "name": "origin",
                      "type": 149,
                      "typeName": "PalletsOrigin",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 673,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 671
                }
              },
              "docs": []
            }
          },
          {
            "id": 674,
            "type": {
              "path": [
                "pallet_scheduler",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "FailedToSchedule",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Failed to schedule a call"
                      ]
                    },
                    {
                      "name": "NotFound",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Cannot find the scheduled call."
                      ]
                    },
                    {
                      "name": "TargetBlockNumberInPast",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Given target block number is in the past."
                      ]
                    },
                    {
                      "name": "RescheduleNoChange",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Reschedule failed because it does not change scheduled time."
                      ]
                    },
                    {
                      "name": "Named",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Attempt to use a non-named function on a named task."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 675,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "array": {
                  "len": 1024,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 676,
            "type": {
              "path": [
                "pallet_glutton",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AlreadyInitialized",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The pallet was already initialized.",
                        "",
                        "Set `witness_count` to `Some` to bypass this error."
                      ]
                    },
                    {
                      "name": "InsaneLimit",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The limit was over [`crate::RESOURCE_HARD_LIMIT`]."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 677,
            "type": {
              "path": [
                "pallet_preimage",
                "OldRequestStatus"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unrequested",
                      "fields": [
                        {
                          "name": "deposit",
                          "type": 63,
                          "typeName": "(AccountId, Balance)",
                          "docs": []
                        },
                        {
                          "name": "len",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Requested",
                      "fields": [
                        {
                          "name": "deposit",
                          "type": 678,
                          "typeName": "Option<(AccountId, Balance)>",
                          "docs": []
                        },
                        {
                          "name": "count",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "len",
                          "type": 38,
                          "typeName": "Option<u32>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 678,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 63
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 63,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 679,
            "type": {
              "path": [
                "pallet_preimage",
                "RequestStatus"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Ticket",
                  "type": 680
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unrequested",
                      "fields": [
                        {
                          "name": "ticket",
                          "type": 681,
                          "typeName": "(AccountId, Ticket)",
                          "docs": []
                        },
                        {
                          "name": "len",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Requested",
                      "fields": [
                        {
                          "name": "maybe_ticket",
                          "type": 682,
                          "typeName": "Option<(AccountId, Ticket)>",
                          "docs": []
                        },
                        {
                          "name": "count",
                          "type": 4,
                          "typeName": "u32",
                          "docs": []
                        },
                        {
                          "name": "maybe_len",
                          "type": 38,
                          "typeName": "Option<u32>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 680,
            "type": {
              "path": [
                "frame_support",
                "traits",
                "tokens",
                "fungible",
                "HoldConsideration"
              ],
              "params": [
                {
                  "name": "A",
                  "type": null
                },
                {
                  "name": "F",
                  "type": null
                },
                {
                  "name": "R",
                  "type": null
                },
                {
                  "name": "D",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 6,
                      "typeName": "F::Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 681,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  680
                ]
              },
              "docs": []
            }
          },
          {
            "id": 682,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 681
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 681,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 683,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  12,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 684,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 685,
            "type": {
              "path": [
                "pallet_preimage",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooBig",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Preimage is too large to store on-chain."
                      ]
                    },
                    {
                      "name": "AlreadyNoted",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Preimage has already been noted on-chain."
                      ]
                    },
                    {
                      "name": "NotAuthorized",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The user is not authorized to perform this action."
                      ]
                    },
                    {
                      "name": "NotNoted",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The preimage cannot be removed since it has not yet been noted."
                      ]
                    },
                    {
                      "name": "Requested",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "A preimage may not be removed when there are outstanding requests."
                      ]
                    },
                    {
                      "name": "NotRequested",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The preimage request cannot be removed since no outstanding requests exist."
                      ]
                    },
                    {
                      "name": "TooMany",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "More than `MAX_HASH_UPGRADE_BULK_COUNT` hashes were requested to be upgraded at once."
                      ]
                    },
                    {
                      "name": "TooFew",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Too few hashes were requested to be upgraded (i.e. zero)."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 686,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  687,
                  6
                ]
              },
              "docs": []
            }
          },
          {
            "id": 687,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 688
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 689,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 688,
            "type": {
              "path": [
                "pallet_proxy",
                "ProxyDefinition"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "ProxyType",
                  "type": 101
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "delegate",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "proxy_type",
                      "type": 101,
                      "typeName": "ProxyType",
                      "docs": []
                    },
                    {
                      "name": "delay",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 689,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 688
                }
              },
              "docs": []
            }
          },
          {
            "id": 690,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  691,
                  6
                ]
              },
              "docs": []
            }
          },
          {
            "id": 691,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 692
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 693,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 692,
            "type": {
              "path": [
                "pallet_proxy",
                "Announcement"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Hash",
                  "type": 12
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "real",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "call_hash",
                      "type": 12,
                      "typeName": "Hash",
                      "docs": []
                    },
                    {
                      "name": "height",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 693,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 692
                }
              },
              "docs": []
            }
          },
          {
            "id": 694,
            "type": {
              "path": [
                "pallet_proxy",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "TooMany",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "There are too many proxies registered or too many announcements pending."
                      ]
                    },
                    {
                      "name": "NotFound",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Proxy registration not found."
                      ]
                    },
                    {
                      "name": "NotProxy",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Sender is not a proxy of the account to be proxied."
                      ]
                    },
                    {
                      "name": "Unproxyable",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "A call which is incompatible with the proxy type's filter was attempted."
                      ]
                    },
                    {
                      "name": "Duplicate",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Account is already a proxy."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Call may not be made by proxy because it may escalate its privileges."
                      ]
                    },
                    {
                      "name": "Unannounced",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Announcement, if made at all, was made too recently."
                      ]
                    },
                    {
                      "name": "NoSelfProxy",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Cannot add self as proxy."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 695,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  1
                ]
              },
              "docs": []
            }
          },
          {
            "id": 696,
            "type": {
              "path": [
                "pallet_multisig",
                "Multisig"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "MaxApprovals",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "when",
                      "type": 104,
                      "typeName": "Timepoint<BlockNumber>",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "depositor",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "approvals",
                      "type": 567,
                      "typeName": "BoundedVec<AccountId, MaxApprovals>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 697,
            "type": {
              "path": [
                "pallet_multisig",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "MinimumThreshold",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Threshold must be 2 or greater."
                      ]
                    },
                    {
                      "name": "AlreadyApproved",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Call is already approved by this signatory."
                      ]
                    },
                    {
                      "name": "NoApprovalsNeeded",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Call doesn't need any (more) approvals."
                      ]
                    },
                    {
                      "name": "TooFewSignatories",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "There are too few signatories in the list."
                      ]
                    },
                    {
                      "name": "TooManySignatories",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "There are too many signatories in the list."
                      ]
                    },
                    {
                      "name": "SignatoriesOutOfOrder",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The signatories were provided out of order; they should be ordered."
                      ]
                    },
                    {
                      "name": "SenderInSignatories",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "The sender was contained in the other signatories; it shouldn't be."
                      ]
                    },
                    {
                      "name": "NotFound",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Multisig operation not found when attempting to cancel."
                      ]
                    },
                    {
                      "name": "NotOwner",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Only the account that originally created the multisig is able to cancel it."
                      ]
                    },
                    {
                      "name": "NoTimepoint",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "No timepoint was given, yet the multisig operation is already underway."
                      ]
                    },
                    {
                      "name": "WrongTimepoint",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "A different timepoint was given to the multisig operation that is underway."
                      ]
                    },
                    {
                      "name": "UnexpectedTimepoint",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "A timepoint was given, yet no multisig operation is underway."
                      ]
                    },
                    {
                      "name": "MaxWeightTooLow",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "The maximum weight information provided was too low."
                      ]
                    },
                    {
                      "name": "AlreadyStored",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "The data to be stored is already stored."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 698,
            "type": {
              "path": [
                "pallet_bounties",
                "Bounty"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "proposer",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "fee",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "curator_deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "bond",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "status",
                      "type": 699,
                      "typeName": "BountyStatus<AccountId, BlockNumber>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 699,
            "type": {
              "path": [
                "pallet_bounties",
                "BountyStatus"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Proposed",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Approved",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Funded",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "CuratorProposed",
                      "fields": [
                        {
                          "name": "curator",
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Active",
                      "fields": [
                        {
                          "name": "curator",
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        },
                        {
                          "name": "update_due",
                          "type": 4,
                          "typeName": "BlockNumber",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "PendingPayout",
                      "fields": [
                        {
                          "name": "curator",
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        },
                        {
                          "name": "unlock_at",
                          "type": 4,
                          "typeName": "BlockNumber",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 700,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 701,
            "type": {
              "path": [
                "pallet_bounties",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "InsufficientProposersBalance",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Proposer's balance is too low."
                      ]
                    },
                    {
                      "name": "InvalidIndex",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "No proposal or bounty at that index."
                      ]
                    },
                    {
                      "name": "ReasonTooBig",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The reason given is just too big."
                      ]
                    },
                    {
                      "name": "UnexpectedStatus",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The bounty status is unexpected."
                      ]
                    },
                    {
                      "name": "RequireCurator",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Require bounty curator."
                      ]
                    },
                    {
                      "name": "InvalidValue",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Invalid bounty value."
                      ]
                    },
                    {
                      "name": "InvalidFee",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Invalid bounty fee."
                      ]
                    },
                    {
                      "name": "PendingPayout",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "A bounty payout is pending.",
                        "To cancel the bounty, you must unassign and slash the curator."
                      ]
                    },
                    {
                      "name": "Premature",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "The bounties cannot be claimed/closed because it's still in the countdown period."
                      ]
                    },
                    {
                      "name": "HasActiveChildBounty",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "The bounty cannot be closed because it has active child bounties."
                      ]
                    },
                    {
                      "name": "TooManyQueued",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "Too many approvals are already queued."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 702,
            "type": {
              "path": [
                "pallet_tips",
                "OpenTip"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Hash",
                  "type": 12
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "reason",
                      "type": 12,
                      "typeName": "Hash",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "finder",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "closes",
                      "type": 38,
                      "typeName": "Option<BlockNumber>",
                      "docs": []
                    },
                    {
                      "name": "tips",
                      "type": 62,
                      "typeName": "Vec<(AccountId, Balance)>",
                      "docs": []
                    },
                    {
                      "name": "finders_fee",
                      "type": 43,
                      "typeName": "bool",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 703,
            "type": {
              "path": [
                "pallet_tips",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ReasonTooBig",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The reason given is just too big."
                      ]
                    },
                    {
                      "name": "AlreadyKnown",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The tip was already found/started."
                      ]
                    },
                    {
                      "name": "UnknownTip",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The tip hash is unknown."
                      ]
                    },
                    {
                      "name": "MaxTipAmountExceeded",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The tip given was too generous."
                      ]
                    },
                    {
                      "name": "NotFinder",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The account attempting to retract the tip is not the finder of the tip."
                      ]
                    },
                    {
                      "name": "StillOpen",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The tip cannot be claimed/closed because there are not enough tippers yet."
                      ]
                    },
                    {
                      "name": "Premature",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "The tip cannot be claimed/closed because it's still in the countdown period."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 704,
            "type": {
              "path": [
                "pallet_assets",
                "types",
                "AssetDetails"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "DepositBalance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "owner",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "issuer",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "admin",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "freezer",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "supply",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "DepositBalance",
                      "docs": []
                    },
                    {
                      "name": "min_balance",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "is_sufficient",
                      "type": 43,
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "accounts",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "sufficients",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "approvals",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "status",
                      "type": 705,
                      "typeName": "AssetStatus",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 705,
            "type": {
              "path": [
                "pallet_assets",
                "types",
                "AssetStatus"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Live",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Frozen",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Destroying",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 706,
            "type": {
              "path": [
                "pallet_assets",
                "types",
                "AssetAccount"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "DepositBalance",
                  "type": 6
                },
                {
                  "name": "Extra",
                  "type": 32
                },
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "balance",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "status",
                      "type": 707,
                      "typeName": "AccountStatus",
                      "docs": []
                    },
                    {
                      "name": "reason",
                      "type": 708,
                      "typeName": "ExistenceReason<DepositBalance, AccountId>",
                      "docs": []
                    },
                    {
                      "name": "extra",
                      "type": 32,
                      "typeName": "Extra",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 707,
            "type": {
              "path": [
                "pallet_assets",
                "types",
                "AccountStatus"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Liquid",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Frozen",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Blocked",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 708,
            "type": {
              "path": [
                "pallet_assets",
                "types",
                "ExistenceReason"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Consumer",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Sufficient",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "DepositHeld",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "DepositRefunded",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "DepositFrom",
                      "fields": [
                        {
                          "name": null,
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 709,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  0,
                  0
                ]
              },
              "docs": []
            }
          },
          {
            "id": 710,
            "type": {
              "path": [
                "pallet_assets",
                "types",
                "Approval"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "DepositBalance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "DepositBalance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 711,
            "type": {
              "path": [
                "pallet_assets",
                "types",
                "AssetMetadata"
              ],
              "params": [
                {
                  "name": "DepositBalance",
                  "type": 6
                },
                {
                  "name": "BoundedString",
                  "type": 712
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "DepositBalance",
                      "docs": []
                    },
                    {
                      "name": "name",
                      "type": 712,
                      "typeName": "BoundedString",
                      "docs": []
                    },
                    {
                      "name": "symbol",
                      "type": 712,
                      "typeName": "BoundedString",
                      "docs": []
                    },
                    {
                      "name": "decimals",
                      "type": 2,
                      "typeName": "u8",
                      "docs": []
                    },
                    {
                      "name": "is_frozen",
                      "type": 43,
                      "typeName": "bool",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 712,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 713,
            "type": {
              "path": [
                "pallet_assets",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BalanceLow",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Account balance must be greater than or equal to the transfer amount."
                      ]
                    },
                    {
                      "name": "NoAccount",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The account to alter does not exist."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The signing account has no permission to do the operation."
                      ]
                    },
                    {
                      "name": "Unknown",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The given asset ID is unknown."
                      ]
                    },
                    {
                      "name": "Frozen",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The origin account is frozen."
                      ]
                    },
                    {
                      "name": "InUse",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The asset ID is already taken."
                      ]
                    },
                    {
                      "name": "BadWitness",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Invalid witness data given."
                      ]
                    },
                    {
                      "name": "MinBalanceZero",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Minimum balance should be non-zero."
                      ]
                    },
                    {
                      "name": "UnavailableConsumer",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Unable to increment the consumer reference counters on the account. Either no provider",
                        "reference exists to allow a non-zero balance of a non-self-sufficient asset, or one",
                        "fewer then the maximum number of consumers has been reached."
                      ]
                    },
                    {
                      "name": "BadMetadata",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "Invalid metadata given."
                      ]
                    },
                    {
                      "name": "Unapproved",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "No approval exists that would allow the transfer."
                      ]
                    },
                    {
                      "name": "WouldDie",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The source account would not survive the transfer and it needs to stay alive."
                      ]
                    },
                    {
                      "name": "AlreadyExists",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "The asset-account already exists."
                      ]
                    },
                    {
                      "name": "NoDeposit",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "The asset-account doesn't have an associated deposit."
                      ]
                    },
                    {
                      "name": "WouldBurn",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "The operation would result in funds being burned."
                      ]
                    },
                    {
                      "name": "LiveAsset",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "The asset is a live asset and is actively being used. Usually emit for operations such",
                        "as `start_destroy` which require the asset to be in a destroying state."
                      ]
                    },
                    {
                      "name": "AssetNotLive",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "The asset is not live, and likely being destroyed."
                      ]
                    },
                    {
                      "name": "IncorrectStatus",
                      "fields": [],
                      "index": 17,
                      "docs": [
                        "The asset status is not the expected status."
                      ]
                    },
                    {
                      "name": "NotFrozen",
                      "fields": [],
                      "index": 18,
                      "docs": [
                        "The asset should be frozen before the given operation."
                      ]
                    },
                    {
                      "name": "CallbackFailed",
                      "fields": [],
                      "index": 19,
                      "docs": [
                        "Callback action resulted in error"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 714,
            "type": {
              "path": [
                "pallet_assets",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "BalanceLow",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Account balance must be greater than or equal to the transfer amount."
                      ]
                    },
                    {
                      "name": "NoAccount",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The account to alter does not exist."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The signing account has no permission to do the operation."
                      ]
                    },
                    {
                      "name": "Unknown",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The given asset ID is unknown."
                      ]
                    },
                    {
                      "name": "Frozen",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The origin account is frozen."
                      ]
                    },
                    {
                      "name": "InUse",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The asset ID is already taken."
                      ]
                    },
                    {
                      "name": "BadWitness",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Invalid witness data given."
                      ]
                    },
                    {
                      "name": "MinBalanceZero",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Minimum balance should be non-zero."
                      ]
                    },
                    {
                      "name": "UnavailableConsumer",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Unable to increment the consumer reference counters on the account. Either no provider",
                        "reference exists to allow a non-zero balance of a non-self-sufficient asset, or one",
                        "fewer then the maximum number of consumers has been reached."
                      ]
                    },
                    {
                      "name": "BadMetadata",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "Invalid metadata given."
                      ]
                    },
                    {
                      "name": "Unapproved",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "No approval exists that would allow the transfer."
                      ]
                    },
                    {
                      "name": "WouldDie",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The source account would not survive the transfer and it needs to stay alive."
                      ]
                    },
                    {
                      "name": "AlreadyExists",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "The asset-account already exists."
                      ]
                    },
                    {
                      "name": "NoDeposit",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "The asset-account doesn't have an associated deposit."
                      ]
                    },
                    {
                      "name": "WouldBurn",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "The operation would result in funds being burned."
                      ]
                    },
                    {
                      "name": "LiveAsset",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "The asset is a live asset and is actively being used. Usually emit for operations such",
                        "as `start_destroy` which require the asset to be in a destroying state."
                      ]
                    },
                    {
                      "name": "AssetNotLive",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "The asset is not live, and likely being destroyed."
                      ]
                    },
                    {
                      "name": "IncorrectStatus",
                      "fields": [],
                      "index": 17,
                      "docs": [
                        "The asset status is not the expected status."
                      ]
                    },
                    {
                      "name": "NotFrozen",
                      "fields": [],
                      "index": 18,
                      "docs": [
                        "The asset should be frozen before the given operation."
                      ]
                    },
                    {
                      "name": "CallbackFailed",
                      "fields": [],
                      "index": 19,
                      "docs": [
                        "Callback action resulted in error"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 715,
            "type": {
              "path": [
                "pallet_lottery",
                "LotteryConfig"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "price",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "start",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "length",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "delay",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "repeat",
                      "type": 43,
                      "typeName": "bool",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 716,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  717
                ]
              },
              "docs": []
            }
          },
          {
            "id": 717,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 110
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 718,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 718,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 110
                }
              },
              "docs": []
            }
          },
          {
            "id": 719,
            "type": {
              "path": [
                "pallet_lottery",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotConfigured",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "A lottery has not been configured."
                      ]
                    },
                    {
                      "name": "InProgress",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "A lottery is already in progress."
                      ]
                    },
                    {
                      "name": "AlreadyEnded",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "A lottery has already ended."
                      ]
                    },
                    {
                      "name": "InvalidCall",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The call is not valid for an open lottery."
                      ]
                    },
                    {
                      "name": "AlreadyParticipating",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "You are already participating in the lottery with this call."
                      ]
                    },
                    {
                      "name": "TooManyCalls",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Too many calls for a single lottery."
                      ]
                    },
                    {
                      "name": "EncodingFailed",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Failed to encode calls"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 720,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 648
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 649,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 721,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 722
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 723,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 722,
            "type": {
              "path": [
                "pallet_nis",
                "pallet",
                "Bid"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "who",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 723,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 722
                }
              },
              "docs": []
            }
          },
          {
            "id": 724,
            "type": {
              "path": [
                "pallet_nis",
                "pallet",
                "SummaryRecord"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "proportion_owed",
                      "type": 112,
                      "typeName": "Perquintill",
                      "docs": []
                    },
                    {
                      "name": "index",
                      "type": 4,
                      "typeName": "ReceiptIndex",
                      "docs": []
                    },
                    {
                      "name": "thawed",
                      "type": 112,
                      "typeName": "Perquintill",
                      "docs": []
                    },
                    {
                      "name": "last_period",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "receipts_on_hold",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 725,
            "type": {
              "path": [
                "pallet_nis",
                "pallet",
                "ReceiptRecord"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "proportion",
                      "type": 112,
                      "typeName": "Perquintill",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "type": 678,
                      "typeName": "Option<(AccountId, Balance)>",
                      "docs": []
                    },
                    {
                      "name": "expiry",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 726,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  112,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 727,
            "type": {
              "path": [
                "pallet_nis",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "DurationTooSmall",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The duration of the bid is less than one."
                      ]
                    },
                    {
                      "name": "DurationTooBig",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The duration is the bid is greater than the number of queues."
                      ]
                    },
                    {
                      "name": "AmountTooSmall",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The amount of the bid is less than the minimum allowed."
                      ]
                    },
                    {
                      "name": "BidTooLow",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The queue for the bid's duration is full and the amount bid is too low to get in",
                        "through replacing an existing bid."
                      ]
                    },
                    {
                      "name": "UnknownReceipt",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Receipt index is unknown."
                      ]
                    },
                    {
                      "name": "NotOwner",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Not the owner of the receipt."
                      ]
                    },
                    {
                      "name": "NotExpired",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Bond not yet at expiry date."
                      ]
                    },
                    {
                      "name": "UnknownBid",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "The given bid for retraction is not found."
                      ]
                    },
                    {
                      "name": "PortionTooBig",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "The portion supplied is beyond the value of the receipt."
                      ]
                    },
                    {
                      "name": "Unfunded",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "Not enough funds are held to pay out."
                      ]
                    },
                    {
                      "name": "AlreadyFunded",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "There are enough funds for what is required."
                      ]
                    },
                    {
                      "name": "Throttled",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The thaw throttle has been reached for this period."
                      ]
                    },
                    {
                      "name": "MakesDust",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "The operation would result in a receipt worth an insignficant value."
                      ]
                    },
                    {
                      "name": "AlreadyCommunal",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "The receipt is already communal."
                      ]
                    },
                    {
                      "name": "AlreadyPrivate",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "The receipt is already private."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 728,
            "type": {
              "path": [
                "pallet_uniques",
                "types",
                "CollectionDetails"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "DepositBalance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "owner",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "issuer",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "admin",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "freezer",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "total_deposit",
                      "type": 6,
                      "typeName": "DepositBalance",
                      "docs": []
                    },
                    {
                      "name": "free_holding",
                      "type": 43,
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "items",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "item_metadatas",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "attributes",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "is_frozen",
                      "type": 43,
                      "typeName": "bool",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 729,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  4,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 730,
            "type": {
              "path": [
                "pallet_uniques",
                "types",
                "ItemDetails"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "DepositBalance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "owner",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "approved",
                      "type": 42,
                      "typeName": "Option<AccountId>",
                      "docs": []
                    },
                    {
                      "name": "is_frozen",
                      "type": 43,
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "DepositBalance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 731,
            "type": {
              "path": [
                "pallet_uniques",
                "types",
                "CollectionMetadata"
              ],
              "params": [
                {
                  "name": "DepositBalance",
                  "type": 6
                },
                {
                  "name": "StringLimit",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "DepositBalance",
                      "docs": []
                    },
                    {
                      "name": "data",
                      "type": 114,
                      "typeName": "BoundedVec<u8, StringLimit>",
                      "docs": []
                    },
                    {
                      "name": "is_frozen",
                      "type": 43,
                      "typeName": "bool",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 732,
            "type": {
              "path": [
                "pallet_uniques",
                "types",
                "ItemMetadata"
              ],
              "params": [
                {
                  "name": "DepositBalance",
                  "type": 6
                },
                {
                  "name": "StringLimit",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "DepositBalance",
                      "docs": []
                    },
                    {
                      "name": "data",
                      "type": 114,
                      "typeName": "BoundedVec<u8, StringLimit>",
                      "docs": []
                    },
                    {
                      "name": "is_frozen",
                      "type": 43,
                      "typeName": "bool",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 733,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  38,
                  116
                ]
              },
              "docs": []
            }
          },
          {
            "id": 734,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  117,
                  6
                ]
              },
              "docs": []
            }
          },
          {
            "id": 735,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  6,
                  42
                ]
              },
              "docs": []
            }
          },
          {
            "id": 736,
            "type": {
              "path": [
                "pallet_uniques",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NoPermission",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The signing account has no permission to do the operation."
                      ]
                    },
                    {
                      "name": "UnknownCollection",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The given item ID is unknown."
                      ]
                    },
                    {
                      "name": "AlreadyExists",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The item ID has already been used for an item."
                      ]
                    },
                    {
                      "name": "WrongOwner",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The owner turned out to be different to what was expected."
                      ]
                    },
                    {
                      "name": "BadWitness",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Invalid witness data given."
                      ]
                    },
                    {
                      "name": "InUse",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The item ID is already taken."
                      ]
                    },
                    {
                      "name": "Frozen",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "The item or collection is frozen."
                      ]
                    },
                    {
                      "name": "WrongDelegate",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "The delegate turned out to be different to what was expected."
                      ]
                    },
                    {
                      "name": "NoDelegate",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "There is no delegate approved."
                      ]
                    },
                    {
                      "name": "Unapproved",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "No approval exists that would allow the transfer."
                      ]
                    },
                    {
                      "name": "Unaccepted",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The named owner has not signed ownership of the collection is acceptable."
                      ]
                    },
                    {
                      "name": "Locked",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The item is locked."
                      ]
                    },
                    {
                      "name": "MaxSupplyReached",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "All items have been minted."
                      ]
                    },
                    {
                      "name": "MaxSupplyAlreadySet",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "The max supply has already been set."
                      ]
                    },
                    {
                      "name": "MaxSupplyTooSmall",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "The provided max supply is less to the amount of items a collection already has."
                      ]
                    },
                    {
                      "name": "UnknownItem",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "The given item ID is unknown."
                      ]
                    },
                    {
                      "name": "NotForSale",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "Item is not for sale."
                      ]
                    },
                    {
                      "name": "BidTooLow",
                      "fields": [],
                      "index": 17,
                      "docs": [
                        "The provided bid is too low."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 737,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "CollectionDetails"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "DepositBalance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "owner",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "owner_deposit",
                      "type": 6,
                      "typeName": "DepositBalance",
                      "docs": []
                    },
                    {
                      "name": "items",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "item_metadatas",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "item_configs",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "attributes",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 738,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "BitFlags"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 739
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 2,
                      "typeName": "CollectionRole",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 739,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "CollectionRole"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Issuer",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Freezer",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Admin",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 740,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "ItemDetails"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Deposit",
                  "type": 741
                },
                {
                  "name": "Approvals",
                  "type": 742
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "owner",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "approvals",
                      "type": 742,
                      "typeName": "Approvals",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 741,
                      "typeName": "Deposit",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 741,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "ItemDeposit"
              ],
              "params": [
                {
                  "name": "DepositBalance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "account",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "DepositBalance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 742,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_btree_map",
                "BoundedBTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 38
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 743,
                      "typeName": "BTreeMap<K, V>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 743,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 0
                },
                {
                  "name": "V",
                  "type": 38
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 744,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 744,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 745
                }
              },
              "docs": []
            }
          },
          {
            "id": 745,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  38
                ]
              },
              "docs": []
            }
          },
          {
            "id": 746,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "CollectionMetadata"
              ],
              "params": [
                {
                  "name": "Deposit",
                  "type": 6
                },
                {
                  "name": "StringLimit",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Deposit",
                      "docs": []
                    },
                    {
                      "name": "data",
                      "type": 119,
                      "typeName": "BoundedVec<u8, StringLimit>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 747,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "ItemMetadata"
              ],
              "params": [
                {
                  "name": "Deposit",
                  "type": 748
                },
                {
                  "name": "StringLimit",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "deposit",
                      "type": 748,
                      "typeName": "Deposit",
                      "docs": []
                    },
                    {
                      "name": "data",
                      "type": 119,
                      "typeName": "BoundedVec<u8, StringLimit>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 748,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "ItemMetadataDeposit"
              ],
              "params": [
                {
                  "name": "DepositBalance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "account",
                      "type": 42,
                      "typeName": "Option<AccountId>",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "DepositBalance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 749,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  38,
                  120,
                  117
                ]
              },
              "docs": []
            }
          },
          {
            "id": 750,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  119,
                  751
                ]
              },
              "docs": []
            }
          },
          {
            "id": 751,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "AttributeDeposit"
              ],
              "params": [
                {
                  "name": "DepositBalance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "account",
                      "type": 42,
                      "typeName": "Option<AccountId>",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "DepositBalance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 752,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_btree_set",
                "BoundedBTreeSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 753,
                      "typeName": "BTreeSet<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 753,
            "type": {
              "path": [
                "BTreeSet"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 90,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 754,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "PendingSwap"
              ],
              "params": [
                {
                  "name": "CollectionId",
                  "type": 4
                },
                {
                  "name": "ItemId",
                  "type": 4
                },
                {
                  "name": "ItemPriceWithDirection",
                  "type": 122
                },
                {
                  "name": "Deadline",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "desired_collection",
                      "type": 4,
                      "typeName": "CollectionId",
                      "docs": []
                    },
                    {
                      "name": "desired_item",
                      "type": 38,
                      "typeName": "Option<ItemId>",
                      "docs": []
                    },
                    {
                      "name": "price",
                      "type": 121,
                      "typeName": "Option<ItemPriceWithDirection>",
                      "docs": []
                    },
                    {
                      "name": "deadline",
                      "type": 4,
                      "typeName": "Deadline",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 755,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "BitFlags"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 756
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 11,
                      "typeName": "PalletFeature",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 756,
            "type": {
              "path": [
                "pallet_nfts",
                "types",
                "PalletFeature"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Trading",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Attributes",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Approvals",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Swaps",
                      "fields": [],
                      "index": 8,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 757,
            "type": {
              "path": [
                "pallet_nfts",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NoPermission",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The signing account has no permission to do the operation."
                      ]
                    },
                    {
                      "name": "UnknownCollection",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The given item ID is unknown."
                      ]
                    },
                    {
                      "name": "AlreadyExists",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The item ID has already been used for an item."
                      ]
                    },
                    {
                      "name": "ApprovalExpired",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The approval had a deadline that expired, so the approval isn't valid anymore."
                      ]
                    },
                    {
                      "name": "WrongOwner",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The owner turned out to be different to what was expected."
                      ]
                    },
                    {
                      "name": "BadWitness",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The witness data given does not match the current state of the chain."
                      ]
                    },
                    {
                      "name": "CollectionIdInUse",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Collection ID is already taken."
                      ]
                    },
                    {
                      "name": "ItemsNonTransferable",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Items within that collection are non-transferable."
                      ]
                    },
                    {
                      "name": "NotDelegate",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "The provided account is not a delegate."
                      ]
                    },
                    {
                      "name": "WrongDelegate",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "The delegate turned out to be different to what was expected."
                      ]
                    },
                    {
                      "name": "Unapproved",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "No approval exists that would allow the transfer."
                      ]
                    },
                    {
                      "name": "Unaccepted",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The named owner has not signed ownership acceptance of the collection."
                      ]
                    },
                    {
                      "name": "ItemLocked",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "The item is locked (non-transferable)."
                      ]
                    },
                    {
                      "name": "LockedItemAttributes",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "Item's attributes are locked."
                      ]
                    },
                    {
                      "name": "LockedCollectionAttributes",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "Collection's attributes are locked."
                      ]
                    },
                    {
                      "name": "LockedItemMetadata",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "Item's metadata is locked."
                      ]
                    },
                    {
                      "name": "LockedCollectionMetadata",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "Collection's metadata is locked."
                      ]
                    },
                    {
                      "name": "MaxSupplyReached",
                      "fields": [],
                      "index": 17,
                      "docs": [
                        "All items have been minted."
                      ]
                    },
                    {
                      "name": "MaxSupplyLocked",
                      "fields": [],
                      "index": 18,
                      "docs": [
                        "The max supply is locked and can't be changed."
                      ]
                    },
                    {
                      "name": "MaxSupplyTooSmall",
                      "fields": [],
                      "index": 19,
                      "docs": [
                        "The provided max supply is less than the number of items a collection already has."
                      ]
                    },
                    {
                      "name": "UnknownItem",
                      "fields": [],
                      "index": 20,
                      "docs": [
                        "The given item ID is unknown."
                      ]
                    },
                    {
                      "name": "UnknownSwap",
                      "fields": [],
                      "index": 21,
                      "docs": [
                        "Swap doesn't exist."
                      ]
                    },
                    {
                      "name": "MetadataNotFound",
                      "fields": [],
                      "index": 22,
                      "docs": [
                        "The given item has no metadata set."
                      ]
                    },
                    {
                      "name": "AttributeNotFound",
                      "fields": [],
                      "index": 23,
                      "docs": [
                        "The provided attribute can't be found."
                      ]
                    },
                    {
                      "name": "NotForSale",
                      "fields": [],
                      "index": 24,
                      "docs": [
                        "Item is not for sale."
                      ]
                    },
                    {
                      "name": "BidTooLow",
                      "fields": [],
                      "index": 25,
                      "docs": [
                        "The provided bid is too low."
                      ]
                    },
                    {
                      "name": "ReachedApprovalLimit",
                      "fields": [],
                      "index": 26,
                      "docs": [
                        "The item has reached its approval limit."
                      ]
                    },
                    {
                      "name": "DeadlineExpired",
                      "fields": [],
                      "index": 27,
                      "docs": [
                        "The deadline has already expired."
                      ]
                    },
                    {
                      "name": "WrongDuration",
                      "fields": [],
                      "index": 28,
                      "docs": [
                        "The duration provided should be less than or equal to `MaxDeadlineDuration`."
                      ]
                    },
                    {
                      "name": "MethodDisabled",
                      "fields": [],
                      "index": 29,
                      "docs": [
                        "The method is disabled by system settings."
                      ]
                    },
                    {
                      "name": "WrongSetting",
                      "fields": [],
                      "index": 30,
                      "docs": [
                        "The provided setting can't be set."
                      ]
                    },
                    {
                      "name": "InconsistentItemConfig",
                      "fields": [],
                      "index": 31,
                      "docs": [
                        "Item's config already exists and should be equal to the provided one."
                      ]
                    },
                    {
                      "name": "NoConfig",
                      "fields": [],
                      "index": 32,
                      "docs": [
                        "Config for a collection or an item can't be found."
                      ]
                    },
                    {
                      "name": "RolesNotCleared",
                      "fields": [],
                      "index": 33,
                      "docs": [
                        "Some roles were not cleared."
                      ]
                    },
                    {
                      "name": "MintNotStarted",
                      "fields": [],
                      "index": 34,
                      "docs": [
                        "Mint has not started yet."
                      ]
                    },
                    {
                      "name": "MintEnded",
                      "fields": [],
                      "index": 35,
                      "docs": [
                        "Mint has already ended."
                      ]
                    },
                    {
                      "name": "AlreadyClaimed",
                      "fields": [],
                      "index": 36,
                      "docs": [
                        "The provided Item was already used for claiming."
                      ]
                    },
                    {
                      "name": "IncorrectData",
                      "fields": [],
                      "index": 37,
                      "docs": [
                        "The provided data is incorrect."
                      ]
                    },
                    {
                      "name": "WrongOrigin",
                      "fields": [],
                      "index": 38,
                      "docs": [
                        "The extrinsic was sent by the wrong origin."
                      ]
                    },
                    {
                      "name": "WrongSignature",
                      "fields": [],
                      "index": 39,
                      "docs": [
                        "The provided signature is incorrect."
                      ]
                    },
                    {
                      "name": "IncorrectMetadata",
                      "fields": [],
                      "index": 40,
                      "docs": [
                        "The provided metadata might be too long."
                      ]
                    },
                    {
                      "name": "MaxAttributesLimitReached",
                      "fields": [],
                      "index": 41,
                      "docs": [
                        "Can't set more attributes per one call."
                      ]
                    },
                    {
                      "name": "WrongNamespace",
                      "fields": [],
                      "index": 42,
                      "docs": [
                        "The provided namespace isn't supported in this call."
                      ]
                    },
                    {
                      "name": "CollectionNotEmpty",
                      "fields": [],
                      "index": 43,
                      "docs": [
                        "Can't delete non-empty collections."
                      ]
                    },
                    {
                      "name": "WitnessRequired",
                      "fields": [],
                      "index": 44,
                      "docs": [
                        "The witness data should be provided."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 758,
            "type": {
              "path": [
                "pallet_nft_fractionalization",
                "types",
                "Details"
              ],
              "params": [
                {
                  "name": "AssetId",
                  "type": 4
                },
                {
                  "name": "Fractions",
                  "type": 6
                },
                {
                  "name": "Deposit",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "asset",
                      "type": 4,
                      "typeName": "AssetId",
                      "docs": []
                    },
                    {
                      "name": "fractions",
                      "type": 6,
                      "typeName": "Fractions",
                      "docs": []
                    },
                    {
                      "name": "deposit",
                      "type": 6,
                      "typeName": "Deposit",
                      "docs": []
                    },
                    {
                      "name": "asset_creator",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 759,
            "type": {
              "path": [
                "pallet_nft_fractionalization",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "IncorrectAssetId",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Asset ID does not correspond to locked NFT."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The signing account has no permission to do the operation."
                      ]
                    },
                    {
                      "name": "NftNotFound",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "NFT doesn't exist."
                      ]
                    },
                    {
                      "name": "NftNotFractionalized",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "NFT has not yet been fractionalised."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 760,
            "type": {
              "path": [
                "pallet_salary",
                "StatusType"
              ],
              "params": [
                {
                  "name": "CycleIndex",
                  "type": 4
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "cycle_index",
                      "type": 4,
                      "typeName": "CycleIndex",
                      "docs": []
                    },
                    {
                      "name": "cycle_start",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "budget",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "total_registrations",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "total_unregistered_paid",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 761,
            "type": {
              "path": [
                "pallet_salary",
                "ClaimantStatus"
              ],
              "params": [
                {
                  "name": "CycleIndex",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Id",
                  "type": 32
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "last_active",
                      "type": 4,
                      "typeName": "CycleIndex",
                      "docs": []
                    },
                    {
                      "name": "status",
                      "type": 762,
                      "typeName": "ClaimState<Balance, Id>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 762,
            "type": {
              "path": [
                "pallet_salary",
                "ClaimState"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Id",
                  "type": 32
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Nothing",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Registered",
                      "fields": [
                        {
                          "name": null,
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Attempted",
                      "fields": [
                        {
                          "name": "registered",
                          "type": 331,
                          "typeName": "Option<Balance>",
                          "docs": []
                        },
                        {
                          "name": "id",
                          "type": 32,
                          "typeName": "Id",
                          "docs": []
                        },
                        {
                          "name": "amount",
                          "type": 6,
                          "typeName": "Balance",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 763,
            "type": {
              "path": [
                "pallet_salary",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AlreadyStarted",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The salary system has already been started."
                      ]
                    },
                    {
                      "name": "NotMember",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The account is not a ranked member."
                      ]
                    },
                    {
                      "name": "AlreadyInducted",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The account is already inducted."
                      ]
                    },
                    {
                      "name": "NotInducted",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "NoClaim",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The member does not have a current valid claim."
                      ]
                    },
                    {
                      "name": "ClaimZero",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The member's claim is zero."
                      ]
                    },
                    {
                      "name": "TooLate",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Current cycle's registration period is over."
                      ]
                    },
                    {
                      "name": "TooEarly",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Current cycle's payment period is not yet begun."
                      ]
                    },
                    {
                      "name": "NotYet",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Cycle is not yet over."
                      ]
                    },
                    {
                      "name": "NotStarted",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "The payout cycles have not yet started."
                      ]
                    },
                    {
                      "name": "Bankrupt",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "There is no budget left for the payout."
                      ]
                    },
                    {
                      "name": "PayError",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "There was some issue with the mechanism of payment."
                      ]
                    },
                    {
                      "name": "Inconclusive",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "The payment has neither failed nor succeeded yet."
                      ]
                    },
                    {
                      "name": "NotCurrent",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "The cycle is after that in which the payment was made."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 764,
            "type": {
              "path": [
                "pallet_core_fellowship",
                "MemberStatus"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "is_active",
                      "type": 43,
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "last_promotion",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "last_proof",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 765,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  131,
                  132
                ]
              },
              "docs": []
            }
          },
          {
            "id": 766,
            "type": {
              "path": [
                "pallet_core_fellowship",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Unranked",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Member's rank is too low."
                      ]
                    },
                    {
                      "name": "Ranked",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Member's rank is not zero."
                      ]
                    },
                    {
                      "name": "UnexpectedRank",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Member's rank is not as expected - generally means that the rank provided to the call",
                        "does not agree with the state of the system."
                      ]
                    },
                    {
                      "name": "InvalidRank",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The given rank is invalid - this generally means it's not between 1 and `RANK_COUNT`."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The origin does not have enough permission to do this operation."
                      ]
                    },
                    {
                      "name": "NothingDoing",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "No work needs to be done at present for this member."
                      ]
                    },
                    {
                      "name": "AlreadyInducted",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "The candidate has already been inducted. This should never happen since it would",
                        "require a candidate (rank 0) to already be tracked in the pallet."
                      ]
                    },
                    {
                      "name": "NotTracked",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "The candidate has not been inducted, so cannot be offboarded from this pallet."
                      ]
                    },
                    {
                      "name": "TooSoon",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Operation cannot be done yet since not enough time has passed."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 767,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 768
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 769,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 768,
            "type": {
              "path": [
                "pallet_transaction_storage",
                "TransactionInfo"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "chunk_root",
                      "type": 12,
                      "typeName": "<BlakeTwo256 as Hash>::Output",
                      "docs": []
                    },
                    {
                      "name": "content_hash",
                      "type": 12,
                      "typeName": "<BlakeTwo256 as Hash>::Output",
                      "docs": []
                    },
                    {
                      "name": "size",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "block_chunks",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 769,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 768
                }
              },
              "docs": []
            }
          },
          {
            "id": 770,
            "type": {
              "path": [
                "pallet_transaction_storage",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotConfigured",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Invalid configuration."
                      ]
                    },
                    {
                      "name": "RenewedNotFound",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Renewed extrinsic is not found."
                      ]
                    },
                    {
                      "name": "EmptyTransaction",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Attempting to store empty transaction"
                      ]
                    },
                    {
                      "name": "UnexpectedProof",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Proof was not expected in this block."
                      ]
                    },
                    {
                      "name": "InvalidProof",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Proof failed verification."
                      ]
                    },
                    {
                      "name": "MissingProof",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Missing storage proof."
                      ]
                    },
                    {
                      "name": "MissingStateData",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Unable to verify proof becasue state data is missing."
                      ]
                    },
                    {
                      "name": "DoubleCheck",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Double proof check in the block."
                      ]
                    },
                    {
                      "name": "ProofNotChecked",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Storage proof was not checked in the block."
                      ]
                    },
                    {
                      "name": "TransactionTooLarge",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "Transaction is too large."
                      ]
                    },
                    {
                      "name": "TooManyTransactions",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "Too many transactions in the block."
                      ]
                    },
                    {
                      "name": "BadContext",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "Attempted to call `store` outside of block execution."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 771,
            "type": {
              "path": [
                "pallet_bags_list",
                "list",
                "Node"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "id",
                      "type": 0,
                      "typeName": "T::AccountId",
                      "docs": []
                    },
                    {
                      "name": "prev",
                      "type": 42,
                      "typeName": "Option<T::AccountId>",
                      "docs": []
                    },
                    {
                      "name": "next",
                      "type": 42,
                      "typeName": "Option<T::AccountId>",
                      "docs": []
                    },
                    {
                      "name": "bag_upper",
                      "type": 11,
                      "typeName": "T::Score",
                      "docs": []
                    },
                    {
                      "name": "score",
                      "type": 11,
                      "typeName": "T::Score",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 772,
            "type": {
              "path": [
                "pallet_bags_list",
                "list",
                "Bag"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "head",
                      "type": 42,
                      "typeName": "Option<T::AccountId>",
                      "docs": []
                    },
                    {
                      "name": "tail",
                      "type": 42,
                      "typeName": "Option<T::AccountId>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 773,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 11
                }
              },
              "docs": []
            }
          },
          {
            "id": 774,
            "type": {
              "path": [
                "pallet_bags_list",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "List",
                      "fields": [
                        {
                          "name": null,
                          "type": 775,
                          "typeName": "ListError",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": [
                        "A error in the list interface implementation."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 775,
            "type": {
              "path": [
                "pallet_bags_list",
                "list",
                "ListError"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Duplicate",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "NotHeavier",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "NotInSameBag",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "NodeNotFound",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 776,
            "type": {
              "path": [
                "pallet_child_bounties",
                "ChildBounty"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "parent_bounty",
                      "type": 4,
                      "typeName": "BountyIndex",
                      "docs": []
                    },
                    {
                      "name": "value",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "fee",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "curator_deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "status",
                      "type": 777,
                      "typeName": "ChildBountyStatus<AccountId, BlockNumber>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 777,
            "type": {
              "path": [
                "pallet_child_bounties",
                "ChildBountyStatus"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Added",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "CuratorProposed",
                      "fields": [
                        {
                          "name": "curator",
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Active",
                      "fields": [
                        {
                          "name": "curator",
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "PendingPayout",
                      "fields": [
                        {
                          "name": "curator",
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        },
                        {
                          "name": "beneficiary",
                          "type": 0,
                          "typeName": "AccountId",
                          "docs": []
                        },
                        {
                          "name": "unlock_at",
                          "type": 4,
                          "typeName": "BlockNumber",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 778,
            "type": {
              "path": [
                "pallet_child_bounties",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "ParentBountyNotActive",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The parent bounty is not in active state."
                      ]
                    },
                    {
                      "name": "InsufficientBountyBalance",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The bounty balance is not enough to add new child-bounty."
                      ]
                    },
                    {
                      "name": "TooManyChildBounties",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Number of child bounties exceeds limit `MaxActiveChildBountyCount`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 779,
            "type": {
              "path": [
                "pallet_referenda",
                "types",
                "ReferendumInfo"
              ],
              "params": [
                {
                  "name": "TrackId",
                  "type": 102
                },
                {
                  "name": "RuntimeOrigin",
                  "type": 149
                },
                {
                  "name": "Moment",
                  "type": 4
                },
                {
                  "name": "Call",
                  "type": 141
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Tally",
                  "type": 426
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "ScheduleAddress",
                  "type": 95
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ongoing",
                      "fields": [
                        {
                          "name": null,
                          "type": 780,
                          "typeName": "ReferendumStatus<TrackId, RuntimeOrigin, Moment, Call, Balance, Tally,\nAccountId, ScheduleAddress,>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Approved",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "Moment",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 782,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 782,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Rejected",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "Moment",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 782,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 782,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Cancelled",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "Moment",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 782,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 782,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "TimedOut",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "Moment",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 782,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 782,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Killed",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "Moment",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 780,
            "type": {
              "path": [
                "pallet_referenda",
                "types",
                "ReferendumStatus"
              ],
              "params": [
                {
                  "name": "TrackId",
                  "type": 102
                },
                {
                  "name": "RuntimeOrigin",
                  "type": 149
                },
                {
                  "name": "Moment",
                  "type": 4
                },
                {
                  "name": "Call",
                  "type": 141
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Tally",
                  "type": 426
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "ScheduleAddress",
                  "type": 95
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "track",
                      "type": 102,
                      "typeName": "TrackId",
                      "docs": []
                    },
                    {
                      "name": "origin",
                      "type": 149,
                      "typeName": "RuntimeOrigin",
                      "docs": []
                    },
                    {
                      "name": "proposal",
                      "type": 141,
                      "typeName": "Call",
                      "docs": []
                    },
                    {
                      "name": "enactment",
                      "type": 367,
                      "typeName": "DispatchTime<Moment>",
                      "docs": []
                    },
                    {
                      "name": "submitted",
                      "type": 4,
                      "typeName": "Moment",
                      "docs": []
                    },
                    {
                      "name": "submission_deposit",
                      "type": 781,
                      "typeName": "Deposit<AccountId, Balance>",
                      "docs": []
                    },
                    {
                      "name": "decision_deposit",
                      "type": 782,
                      "typeName": "Option<Deposit<AccountId, Balance>>",
                      "docs": []
                    },
                    {
                      "name": "deciding",
                      "type": 783,
                      "typeName": "Option<DecidingStatus<Moment>>",
                      "docs": []
                    },
                    {
                      "name": "tally",
                      "type": 426,
                      "typeName": "Tally",
                      "docs": []
                    },
                    {
                      "name": "in_queue",
                      "type": 43,
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "alarm",
                      "type": 785,
                      "typeName": "Option<(Moment, ScheduleAddress)>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 781,
            "type": {
              "path": [
                "pallet_referenda",
                "types",
                "Deposit"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "who",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "amount",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 782,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 781
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 781,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 783,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 784
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 784,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 784,
            "type": {
              "path": [
                "pallet_referenda",
                "types",
                "DecidingStatus"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "since",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "confirming",
                      "type": 38,
                      "typeName": "Option<BlockNumber>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 785,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 786
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 786,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 786,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  95
                ]
              },
              "docs": []
            }
          },
          {
            "id": 787,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 648
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 649,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 788,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 789
                }
              },
              "docs": []
            }
          },
          {
            "id": 789,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  102,
                  790
                ]
              },
              "docs": []
            }
          },
          {
            "id": 790,
            "type": {
              "path": [
                "pallet_referenda",
                "types",
                "TrackInfo"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Moment",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "name",
                      "type": 468,
                      "typeName": "&'static str",
                      "docs": []
                    },
                    {
                      "name": "max_deciding",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "decision_deposit",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "prepare_period",
                      "type": 4,
                      "typeName": "Moment",
                      "docs": []
                    },
                    {
                      "name": "decision_period",
                      "type": 4,
                      "typeName": "Moment",
                      "docs": []
                    },
                    {
                      "name": "confirm_period",
                      "type": 4,
                      "typeName": "Moment",
                      "docs": []
                    },
                    {
                      "name": "min_enactment_period",
                      "type": 4,
                      "typeName": "Moment",
                      "docs": []
                    },
                    {
                      "name": "min_approval",
                      "type": 791,
                      "typeName": "Curve",
                      "docs": []
                    },
                    {
                      "name": "min_support",
                      "type": 791,
                      "typeName": "Curve",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 791,
            "type": {
              "path": [
                "pallet_referenda",
                "types",
                "Curve"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "LinearDecreasing",
                      "fields": [
                        {
                          "name": "length",
                          "type": 49,
                          "typeName": "Perbill",
                          "docs": []
                        },
                        {
                          "name": "floor",
                          "type": 49,
                          "typeName": "Perbill",
                          "docs": []
                        },
                        {
                          "name": "ceil",
                          "type": 49,
                          "typeName": "Perbill",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "SteppedDecreasing",
                      "fields": [
                        {
                          "name": "begin",
                          "type": 49,
                          "typeName": "Perbill",
                          "docs": []
                        },
                        {
                          "name": "end",
                          "type": 49,
                          "typeName": "Perbill",
                          "docs": []
                        },
                        {
                          "name": "step",
                          "type": 49,
                          "typeName": "Perbill",
                          "docs": []
                        },
                        {
                          "name": "period",
                          "type": 49,
                          "typeName": "Perbill",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Reciprocal",
                      "fields": [
                        {
                          "name": "factor",
                          "type": 792,
                          "typeName": "FixedI64",
                          "docs": []
                        },
                        {
                          "name": "x_offset",
                          "type": 792,
                          "typeName": "FixedI64",
                          "docs": []
                        },
                        {
                          "name": "y_offset",
                          "type": 792,
                          "typeName": "FixedI64",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 792,
            "type": {
              "path": [
                "sp_arithmetic",
                "fixed_point",
                "FixedI64"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 793,
                      "typeName": "i64",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 793,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "primitive": "I64"
              },
              "docs": []
            }
          },
          {
            "id": 794,
            "type": {
              "path": [
                "pallet_referenda",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotOngoing",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Referendum is not ongoing."
                      ]
                    },
                    {
                      "name": "HasDeposit",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Referendum's decision deposit is already paid."
                      ]
                    },
                    {
                      "name": "BadTrack",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The track identifier given was invalid."
                      ]
                    },
                    {
                      "name": "Full",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "There are already a full complement of referenda in progress for this track."
                      ]
                    },
                    {
                      "name": "QueueEmpty",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The queue of the track is empty."
                      ]
                    },
                    {
                      "name": "BadReferendum",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The referendum index provided is invalid in this context."
                      ]
                    },
                    {
                      "name": "NothingToDo",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "There was nothing to do in the advancement."
                      ]
                    },
                    {
                      "name": "NoTrack",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "No track exists for the proposal origin."
                      ]
                    },
                    {
                      "name": "Unfinished",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Any deposit cannot be refunded until after the decision is over."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "The deposit refunder is not the depositor."
                      ]
                    },
                    {
                      "name": "NoDeposit",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The deposit cannot be refunded since none was made."
                      ]
                    },
                    {
                      "name": "BadStatus",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The referendum status is invalid for this operation."
                      ]
                    },
                    {
                      "name": "PreimageNotExist",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "The preimage does not exist."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 795,
            "type": {
              "path": [
                "pallet_remark",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Empty",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Attempting to store empty data."
                      ]
                    },
                    {
                      "name": "BadContext",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Attempted to call `store` outside of block execution."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 796,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  0,
                  102
                ]
              },
              "docs": []
            }
          },
          {
            "id": 797,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "vote",
                "Voting"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "PollIndex",
                  "type": 4
                },
                {
                  "name": "MaxVotes",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Casting",
                      "fields": [
                        {
                          "name": null,
                          "type": 798,
                          "typeName": "Casting<Balance, BlockNumber, PollIndex, MaxVotes>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Delegating",
                      "fields": [
                        {
                          "name": null,
                          "type": 804,
                          "typeName": "Delegating<Balance, AccountId, BlockNumber>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 798,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "vote",
                "Casting"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "PollIndex",
                  "type": 4
                },
                {
                  "name": "MaxVotes",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "votes",
                      "type": 799,
                      "typeName": "BoundedVec<(PollIndex, AccountVote<Balance>), MaxVotes>",
                      "docs": []
                    },
                    {
                      "name": "delegations",
                      "type": 802,
                      "typeName": "Delegations<Balance>",
                      "docs": []
                    },
                    {
                      "name": "prior",
                      "type": 803,
                      "typeName": "PriorLock<BlockNumber, Balance>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 799,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 800
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 801,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 800,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  371
                ]
              },
              "docs": []
            }
          },
          {
            "id": 801,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 800
                }
              },
              "docs": []
            }
          },
          {
            "id": 802,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "types",
                "Delegations"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "votes",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "capital",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 803,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "vote",
                "PriorLock"
              ],
              "params": [
                {
                  "name": "BlockNumber",
                  "type": 4
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": null,
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 804,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "vote",
                "Delegating"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "balance",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "target",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "conviction",
                      "type": 373,
                      "typeName": "Conviction",
                      "docs": []
                    },
                    {
                      "name": "delegations",
                      "type": 802,
                      "typeName": "Delegations<Balance>",
                      "docs": []
                    },
                    {
                      "name": "prior",
                      "type": 803,
                      "typeName": "PriorLock<BlockNumber, Balance>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 805,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 806
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 807,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 806,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  102,
                  6
                ]
              },
              "docs": []
            }
          },
          {
            "id": 807,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 806
                }
              },
              "docs": []
            }
          },
          {
            "id": 808,
            "type": {
              "path": [
                "pallet_conviction_voting",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotOngoing",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Poll is not ongoing."
                      ]
                    },
                    {
                      "name": "NotVoter",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The given account did not vote on the poll."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The actor has no permission to conduct the action."
                      ]
                    },
                    {
                      "name": "NoPermissionYet",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The actor has no permission to conduct the action right now but will do in the future."
                      ]
                    },
                    {
                      "name": "AlreadyDelegating",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The account is already delegating."
                      ]
                    },
                    {
                      "name": "AlreadyVoting",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The account currently has votes attached to it and the operation cannot succeed until",
                        "these are removed, either through `unvote` or `reap_vote`."
                      ]
                    },
                    {
                      "name": "InsufficientFunds",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Too high a balance was provided that the account cannot afford."
                      ]
                    },
                    {
                      "name": "NotDelegating",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "The account is not currently delegating."
                      ]
                    },
                    {
                      "name": "Nonsense",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Delegation to oneself makes no sense."
                      ]
                    },
                    {
                      "name": "MaxVotesReached",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "Maximum number of votes reached."
                      ]
                    },
                    {
                      "name": "ClassNeeded",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The class must be supplied since it is not easily determinable from the state."
                      ]
                    },
                    {
                      "name": "BadClass",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The class ID supplied is invalid."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 809,
            "type": {
              "path": [
                "pallet_whitelist",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "UnavailablePreImage",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The preimage of the call hash could not be loaded."
                      ]
                    },
                    {
                      "name": "UndecodableCall",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The call could not be decoded."
                      ]
                    },
                    {
                      "name": "InvalidCallWeightWitness",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The weight of the decoded call was higher than the witness."
                      ]
                    },
                    {
                      "name": "CallIsNotWhitelisted",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The call was not whitelisted."
                      ]
                    },
                    {
                      "name": "CallAlreadyWhitelisted",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The call was already whitelisted; No-Op."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 810,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 12
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 316,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 811,
            "type": {
              "path": [
                "pallet_collective",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotMember",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Account is not a member"
                      ]
                    },
                    {
                      "name": "DuplicateProposal",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Duplicate proposals not allowed"
                      ]
                    },
                    {
                      "name": "ProposalMissing",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Proposal must exist"
                      ]
                    },
                    {
                      "name": "WrongIndex",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Mismatched index"
                      ]
                    },
                    {
                      "name": "DuplicateVote",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Duplicate vote ignored"
                      ]
                    },
                    {
                      "name": "AlreadyInitialized",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Members are already initialized!"
                      ]
                    },
                    {
                      "name": "TooEarly",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "The close call was made too early, before the end of the voting."
                      ]
                    },
                    {
                      "name": "TooManyProposals",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "There can only be a maximum of `MaxProposals` active proposals."
                      ]
                    },
                    {
                      "name": "WrongProposalWeight",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "The given weight bound for the proposal was too low."
                      ]
                    },
                    {
                      "name": "WrongProposalLength",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "The given length bound for the proposal was too low."
                      ]
                    },
                    {
                      "name": "PrimeAccountNotMember",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "Prime account is not a member"
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 812,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 378
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 813,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 813,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 378
                }
              },
              "docs": []
            }
          },
          {
            "id": 814,
            "type": {
              "path": [
                "pallet_alliance",
                "MemberRole"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Fellow",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Ally",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Retiring",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 815,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 0
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 90,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 816,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 384
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 817,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 817,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 384
                }
              },
              "docs": []
            }
          },
          {
            "id": 818,
            "type": {
              "path": [
                "pallet_alliance",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AllianceNotYetInitialized",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The Alliance has not been initialized yet, therefore accounts cannot join it."
                      ]
                    },
                    {
                      "name": "AllianceAlreadyInitialized",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The Alliance has been initialized, therefore cannot be initialized again."
                      ]
                    },
                    {
                      "name": "AlreadyMember",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Account is already a member."
                      ]
                    },
                    {
                      "name": "NotMember",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Account is not a member."
                      ]
                    },
                    {
                      "name": "NotAlly",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Account is not an ally."
                      ]
                    },
                    {
                      "name": "NoVotingRights",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Account does not have voting rights."
                      ]
                    },
                    {
                      "name": "AlreadyElevated",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Account is already an elevated (fellow) member."
                      ]
                    },
                    {
                      "name": "AlreadyUnscrupulous",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Item is already listed as unscrupulous."
                      ]
                    },
                    {
                      "name": "AccountNonGrata",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Account has been deemed unscrupulous by the Alliance and is not welcome to join or be",
                        "nominated."
                      ]
                    },
                    {
                      "name": "NotListedAsUnscrupulous",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "Item has not been deemed unscrupulous."
                      ]
                    },
                    {
                      "name": "TooManyUnscrupulousItems",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The number of unscrupulous items exceeds `MaxUnscrupulousItems`."
                      ]
                    },
                    {
                      "name": "TooLongWebsiteUrl",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "Length of website URL exceeds `MaxWebsiteUrlLength`."
                      ]
                    },
                    {
                      "name": "InsufficientFunds",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "Balance is insufficient for the required deposit."
                      ]
                    },
                    {
                      "name": "WithoutRequiredIdentityFields",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "The account's identity does not have display field and website field."
                      ]
                    },
                    {
                      "name": "WithoutGoodIdentityJudgement",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "The account's identity has no good judgement."
                      ]
                    },
                    {
                      "name": "MissingProposalHash",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "The proposal hash is not found."
                      ]
                    },
                    {
                      "name": "MissingAnnouncement",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "The announcement is not found."
                      ]
                    },
                    {
                      "name": "TooManyMembers",
                      "fields": [],
                      "index": 17,
                      "docs": [
                        "Number of members exceeds `MaxMembersCount`."
                      ]
                    },
                    {
                      "name": "TooManyAnnouncements",
                      "fields": [],
                      "index": 18,
                      "docs": [
                        "Number of announcements exceeds `MaxAnnouncementsCount`."
                      ]
                    },
                    {
                      "name": "BadWitness",
                      "fields": [],
                      "index": 19,
                      "docs": [
                        "Invalid witness data given."
                      ]
                    },
                    {
                      "name": "AlreadyRetiring",
                      "fields": [],
                      "index": 20,
                      "docs": [
                        "Account already gave retirement notice"
                      ]
                    },
                    {
                      "name": "RetirementNoticeNotGiven",
                      "fields": [],
                      "index": 21,
                      "docs": [
                        "Account did not give a retirement notice required to retire."
                      ]
                    },
                    {
                      "name": "RetirementPeriodNotPassed",
                      "fields": [],
                      "index": 22,
                      "docs": [
                        "Retirement period has not passed."
                      ]
                    },
                    {
                      "name": "FellowsMissing",
                      "fields": [],
                      "index": 23,
                      "docs": [
                        "Fellows must be provided to initialize the Alliance."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 819,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "PoolMember"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "pool_id",
                      "type": 4,
                      "typeName": "PoolId",
                      "docs": []
                    },
                    {
                      "name": "points",
                      "type": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "last_recorded_reward_counter",
                      "type": 72,
                      "typeName": "T::RewardCounter",
                      "docs": []
                    },
                    {
                      "name": "unbonding_eras",
                      "type": 820,
                      "typeName": "BoundedBTreeMap<EraIndex, BalanceOf<T>, T::MaxUnbonding>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 820,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_btree_map",
                "BoundedBTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 4
                },
                {
                  "name": "V",
                  "type": 6
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 821,
                      "typeName": "BTreeMap<K, V>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 821,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 4
                },
                {
                  "name": "V",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 649,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 822,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "BondedPoolInner"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "commission",
                      "type": 823,
                      "typeName": "Commission<T>",
                      "docs": []
                    },
                    {
                      "name": "member_counter",
                      "type": 4,
                      "typeName": "u32",
                      "docs": []
                    },
                    {
                      "name": "points",
                      "type": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "roles",
                      "type": 826,
                      "typeName": "PoolRoles<T::AccountId>",
                      "docs": []
                    },
                    {
                      "name": "state",
                      "type": 387,
                      "typeName": "PoolState",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 823,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "Commission"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "current",
                      "type": 393,
                      "typeName": "Option<(Perbill, T::AccountId)>",
                      "docs": []
                    },
                    {
                      "name": "max",
                      "type": 824,
                      "typeName": "Option<Perbill>",
                      "docs": []
                    },
                    {
                      "name": "change_rate",
                      "type": 825,
                      "typeName": "Option<CommissionChangeRate<BlockNumberFor<T>>>",
                      "docs": []
                    },
                    {
                      "name": "throttle_from",
                      "type": 38,
                      "typeName": "Option<BlockNumberFor<T>>",
                      "docs": []
                    },
                    {
                      "name": "claim_permission",
                      "type": 396,
                      "typeName": "Option<CommissionClaimPermission<T::AccountId>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 824,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 49
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 49,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 825,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 395
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 395,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 826,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "PoolRoles"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "depositor",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "root",
                      "type": 42,
                      "typeName": "Option<AccountId>",
                      "docs": []
                    },
                    {
                      "name": "nominator",
                      "type": 42,
                      "typeName": "Option<AccountId>",
                      "docs": []
                    },
                    {
                      "name": "bouncer",
                      "type": 42,
                      "typeName": "Option<AccountId>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 827,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "RewardPool"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "last_recorded_reward_counter",
                      "type": 72,
                      "typeName": "T::RewardCounter",
                      "docs": []
                    },
                    {
                      "name": "last_recorded_total_payouts",
                      "type": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "total_rewards_claimed",
                      "type": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "total_commission_pending",
                      "type": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "total_commission_claimed",
                      "type": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 828,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "SubPools"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "no_era",
                      "type": 829,
                      "typeName": "UnbondPool<T>",
                      "docs": []
                    },
                    {
                      "name": "with_era",
                      "type": 830,
                      "typeName": "BoundedBTreeMap<EraIndex, UnbondPool<T>, TotalUnbondingPools<T>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 829,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "UnbondPool"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "points",
                      "type": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "balance",
                      "type": 6,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 830,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_btree_map",
                "BoundedBTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 4
                },
                {
                  "name": "V",
                  "type": 829
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 831,
                      "typeName": "BTreeMap<K, V>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 831,
            "type": {
              "path": [
                "BTreeMap"
              ],
              "params": [
                {
                  "name": "K",
                  "type": 4
                },
                {
                  "name": "V",
                  "type": 829
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 832,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 832,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 833
                }
              },
              "docs": []
            }
          },
          {
            "id": 833,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  829
                ]
              },
              "docs": []
            }
          },
          {
            "id": 834,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "PoolNotFound",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "A (bonded) pool id does not exist."
                      ]
                    },
                    {
                      "name": "PoolMemberNotFound",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "An account is not a member."
                      ]
                    },
                    {
                      "name": "RewardPoolNotFound",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "A reward pool does not exist. In all cases this is a system logic error."
                      ]
                    },
                    {
                      "name": "SubPoolsNotFound",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "A sub pool does not exist."
                      ]
                    },
                    {
                      "name": "AccountBelongsToOtherPool",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "An account is already delegating in another pool. An account may only belong to one",
                        "pool at a time."
                      ]
                    },
                    {
                      "name": "FullyUnbonding",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The member is fully unbonded (and thus cannot access the bonded and reward pool",
                        "anymore to, for example, collect rewards)."
                      ]
                    },
                    {
                      "name": "MaxUnbondingLimit",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "The member cannot unbond further chunks due to reaching the limit."
                      ]
                    },
                    {
                      "name": "CannotWithdrawAny",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "None of the funds can be withdrawn yet because the bonding duration has not passed."
                      ]
                    },
                    {
                      "name": "MinimumBondNotMet",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "The amount does not meet the minimum bond to either join or create a pool.",
                        "",
                        "The depositor can never unbond to a value less than `Pallet::depositor_min_bond`. The",
                        "caller does not have nominating permissions for the pool. Members can never unbond to a",
                        "value below `MinJoinBond`."
                      ]
                    },
                    {
                      "name": "OverflowRisk",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "The transaction could not be executed due to overflow risk for the pool."
                      ]
                    },
                    {
                      "name": "NotDestroying",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "A pool must be in [`PoolState::Destroying`] in order for the depositor to unbond or for",
                        "other members to be permissionlessly unbonded."
                      ]
                    },
                    {
                      "name": "NotNominator",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The caller does not have nominating permissions for the pool."
                      ]
                    },
                    {
                      "name": "NotKickerOrDestroying",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "Either a) the caller cannot make a valid kick or b) the pool is not destroying."
                      ]
                    },
                    {
                      "name": "NotOpen",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "The pool is not open to join"
                      ]
                    },
                    {
                      "name": "MaxPools",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "The system is maxed out on pools."
                      ]
                    },
                    {
                      "name": "MaxPoolMembers",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "Too many members in the pool or system."
                      ]
                    },
                    {
                      "name": "CanNotChangeState",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "The pools state cannot be changed."
                      ]
                    },
                    {
                      "name": "DoesNotHavePermission",
                      "fields": [],
                      "index": 17,
                      "docs": [
                        "The caller does not have adequate permissions."
                      ]
                    },
                    {
                      "name": "MetadataExceedsMaxLen",
                      "fields": [],
                      "index": 18,
                      "docs": [
                        "Metadata exceeds [`Config::MaxMetadataLen`]"
                      ]
                    },
                    {
                      "name": "Defensive",
                      "fields": [
                        {
                          "name": null,
                          "type": 835,
                          "typeName": "DefensiveError",
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": [
                        "Some error occurred that should never happen. This should be reported to the",
                        "maintainers."
                      ]
                    },
                    {
                      "name": "PartialUnbondNotAllowedPermissionlessly",
                      "fields": [],
                      "index": 20,
                      "docs": [
                        "Partial unbonding now allowed permissionlessly."
                      ]
                    },
                    {
                      "name": "MaxCommissionRestricted",
                      "fields": [],
                      "index": 21,
                      "docs": [
                        "The pool's max commission cannot be set higher than the existing value."
                      ]
                    },
                    {
                      "name": "CommissionExceedsMaximum",
                      "fields": [],
                      "index": 22,
                      "docs": [
                        "The supplied commission exceeds the max allowed commission."
                      ]
                    },
                    {
                      "name": "CommissionExceedsGlobalMaximum",
                      "fields": [],
                      "index": 23,
                      "docs": [
                        "The supplied commission exceeds global maximum commission."
                      ]
                    },
                    {
                      "name": "CommissionChangeThrottled",
                      "fields": [],
                      "index": 24,
                      "docs": [
                        "Not enough blocks have surpassed since the last commission update."
                      ]
                    },
                    {
                      "name": "CommissionChangeRateNotAllowed",
                      "fields": [],
                      "index": 25,
                      "docs": [
                        "The submitted changes to commission change rate are not allowed."
                      ]
                    },
                    {
                      "name": "NoPendingCommission",
                      "fields": [],
                      "index": 26,
                      "docs": [
                        "There is no pending commission to claim."
                      ]
                    },
                    {
                      "name": "NoCommissionCurrentSet",
                      "fields": [],
                      "index": 27,
                      "docs": [
                        "No commission current has been set."
                      ]
                    },
                    {
                      "name": "PoolIdInUse",
                      "fields": [],
                      "index": 28,
                      "docs": [
                        "Pool id currently in use."
                      ]
                    },
                    {
                      "name": "InvalidPoolId",
                      "fields": [],
                      "index": 29,
                      "docs": [
                        "Pool id provided is not correct/usable."
                      ]
                    },
                    {
                      "name": "BondExtraRestricted",
                      "fields": [],
                      "index": 30,
                      "docs": [
                        "Bonding extra is restricted to the exact pending reward amount."
                      ]
                    },
                    {
                      "name": "NothingToAdjust",
                      "fields": [],
                      "index": 31,
                      "docs": [
                        "No imbalance in the ED deposit for the pool."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 835,
            "type": {
              "path": [
                "pallet_nomination_pools",
                "pallet",
                "DefensiveError"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotEnoughSpaceInUnbondPool",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "PoolNotFound",
                      "fields": [],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "RewardPoolNotFound",
                      "fields": [],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "SubPoolsNotFound",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "BondedStashKilledPrematurely",
                      "fields": [],
                      "index": 4,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 836,
            "type": {
              "path": [
                "pallet_referenda",
                "types",
                "ReferendumInfo"
              ],
              "params": [
                {
                  "name": "TrackId",
                  "type": 102
                },
                {
                  "name": "RuntimeOrigin",
                  "type": 149
                },
                {
                  "name": "Moment",
                  "type": 4
                },
                {
                  "name": "Call",
                  "type": 141
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Tally",
                  "type": 439
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "ScheduleAddress",
                  "type": 95
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Ongoing",
                      "fields": [
                        {
                          "name": null,
                          "type": 837,
                          "typeName": "ReferendumStatus<TrackId, RuntimeOrigin, Moment, Call, Balance, Tally,\nAccountId, ScheduleAddress,>",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Approved",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "Moment",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 782,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 782,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Rejected",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "Moment",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 782,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 782,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Cancelled",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "Moment",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 782,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 782,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "TimedOut",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "Moment",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 782,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        },
                        {
                          "name": null,
                          "type": 782,
                          "typeName": "Option<Deposit<AccountId, Balance>>",
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Killed",
                      "fields": [
                        {
                          "name": null,
                          "type": 4,
                          "typeName": "Moment",
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 837,
            "type": {
              "path": [
                "pallet_referenda",
                "types",
                "ReferendumStatus"
              ],
              "params": [
                {
                  "name": "TrackId",
                  "type": 102
                },
                {
                  "name": "RuntimeOrigin",
                  "type": 149
                },
                {
                  "name": "Moment",
                  "type": 4
                },
                {
                  "name": "Call",
                  "type": 141
                },
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "Tally",
                  "type": 439
                },
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "ScheduleAddress",
                  "type": 95
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "track",
                      "type": 102,
                      "typeName": "TrackId",
                      "docs": []
                    },
                    {
                      "name": "origin",
                      "type": 149,
                      "typeName": "RuntimeOrigin",
                      "docs": []
                    },
                    {
                      "name": "proposal",
                      "type": 141,
                      "typeName": "Call",
                      "docs": []
                    },
                    {
                      "name": "enactment",
                      "type": 367,
                      "typeName": "DispatchTime<Moment>",
                      "docs": []
                    },
                    {
                      "name": "submitted",
                      "type": 4,
                      "typeName": "Moment",
                      "docs": []
                    },
                    {
                      "name": "submission_deposit",
                      "type": 781,
                      "typeName": "Deposit<AccountId, Balance>",
                      "docs": []
                    },
                    {
                      "name": "decision_deposit",
                      "type": 782,
                      "typeName": "Option<Deposit<AccountId, Balance>>",
                      "docs": []
                    },
                    {
                      "name": "deciding",
                      "type": 783,
                      "typeName": "Option<DecidingStatus<Moment>>",
                      "docs": []
                    },
                    {
                      "name": "tally",
                      "type": 439,
                      "typeName": "Tally",
                      "docs": []
                    },
                    {
                      "name": "in_queue",
                      "type": 43,
                      "typeName": "bool",
                      "docs": []
                    },
                    {
                      "name": "alarm",
                      "type": 785,
                      "typeName": "Option<(Moment, ScheduleAddress)>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 838,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 95
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 466,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 839,
            "type": {
              "path": [
                "pallet_referenda",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotOngoing",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Referendum is not ongoing."
                      ]
                    },
                    {
                      "name": "HasDeposit",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Referendum's decision deposit is already paid."
                      ]
                    },
                    {
                      "name": "BadTrack",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The track identifier given was invalid."
                      ]
                    },
                    {
                      "name": "Full",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "There are already a full complement of referenda in progress for this track."
                      ]
                    },
                    {
                      "name": "QueueEmpty",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The queue of the track is empty."
                      ]
                    },
                    {
                      "name": "BadReferendum",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The referendum index provided is invalid in this context."
                      ]
                    },
                    {
                      "name": "NothingToDo",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "There was nothing to do in the advancement."
                      ]
                    },
                    {
                      "name": "NoTrack",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "No track exists for the proposal origin."
                      ]
                    },
                    {
                      "name": "Unfinished",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "Any deposit cannot be refunded until after the decision is over."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "The deposit refunder is not the depositor."
                      ]
                    },
                    {
                      "name": "NoDeposit",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The deposit cannot be refunded since none was made."
                      ]
                    },
                    {
                      "name": "BadStatus",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The referendum status is invalid for this operation."
                      ]
                    },
                    {
                      "name": "PreimageNotExist",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "The preimage does not exist."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 840,
            "type": {
              "path": [
                "pallet_ranked_collective",
                "MemberRecord"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "rank",
                      "type": 102,
                      "typeName": "Rank",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 841,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  102,
                  0
                ]
              },
              "docs": []
            }
          },
          {
            "id": 842,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  102,
                  4
                ]
              },
              "docs": []
            }
          },
          {
            "id": 843,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 844,
            "type": {
              "path": [
                "pallet_ranked_collective",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                },
                {
                  "name": "I",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "AlreadyMember",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Account is already a member."
                      ]
                    },
                    {
                      "name": "NotMember",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Account is not a member."
                      ]
                    },
                    {
                      "name": "NotPolling",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The given poll index is unknown or has closed."
                      ]
                    },
                    {
                      "name": "Ongoing",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The given poll is still ongoing."
                      ]
                    },
                    {
                      "name": "NoneRemaining",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "There are no further records to be removed."
                      ]
                    },
                    {
                      "name": "Corruption",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Unexpected error in state."
                      ]
                    },
                    {
                      "name": "RankTooLow",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "The member's rank is too low to vote."
                      ]
                    },
                    {
                      "name": "InvalidWitness",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "The information provided is incorrect."
                      ]
                    },
                    {
                      "name": "NoPermission",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "The origin is not sufficiently privileged to do the operation."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 845,
            "type": {
              "path": [
                "pallet_asset_conversion",
                "types",
                "PoolInfo"
              ],
              "params": [
                {
                  "name": "PoolAssetId",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "lp_token",
                      "type": 4,
                      "typeName": "PoolAssetId",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 846,
            "type": {
              "path": [
                "pallet_asset_conversion",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "EqualAssets",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Provided assets are equal."
                      ]
                    },
                    {
                      "name": "UnsupportedAsset",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Provided asset is not supported for pool."
                      ]
                    },
                    {
                      "name": "PoolExists",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "Pool already exists."
                      ]
                    },
                    {
                      "name": "WrongDesiredAmount",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "Desired amount can't be zero."
                      ]
                    },
                    {
                      "name": "AmountOneLessThanMinimal",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "Provided amount should be greater than or equal to the existential deposit/asset's",
                        "minimal amount."
                      ]
                    },
                    {
                      "name": "AmountTwoLessThanMinimal",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "Provided amount should be greater than or equal to the existential deposit/asset's",
                        "minimal amount."
                      ]
                    },
                    {
                      "name": "ReserveLeftLessThanMinimal",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "Reserve needs to always be greater than or equal to the existential deposit/asset's",
                        "minimal amount."
                      ]
                    },
                    {
                      "name": "AmountOutTooHigh",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "Desired amount can't be equal to the pool reserve."
                      ]
                    },
                    {
                      "name": "PoolNotFound",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "The pool doesn't exist."
                      ]
                    },
                    {
                      "name": "Overflow",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "An overflow happened."
                      ]
                    },
                    {
                      "name": "AssetOneDepositDidNotMeetMinimum",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "The minimal amount requirement for the first token in the pair wasn't met."
                      ]
                    },
                    {
                      "name": "AssetTwoDepositDidNotMeetMinimum",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The minimal amount requirement for the second token in the pair wasn't met."
                      ]
                    },
                    {
                      "name": "AssetOneWithdrawalDidNotMeetMinimum",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "The minimal amount requirement for the first token in the pair wasn't met."
                      ]
                    },
                    {
                      "name": "AssetTwoWithdrawalDidNotMeetMinimum",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "The minimal amount requirement for the second token in the pair wasn't met."
                      ]
                    },
                    {
                      "name": "OptimalAmountLessThanDesired",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "Optimal calculated amount is less than desired."
                      ]
                    },
                    {
                      "name": "InsufficientLiquidityMinted",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "Insufficient liquidity minted."
                      ]
                    },
                    {
                      "name": "ZeroLiquidity",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "Requested liquidity can't be zero."
                      ]
                    },
                    {
                      "name": "ZeroAmount",
                      "fields": [],
                      "index": 17,
                      "docs": [
                        "Amount can't be zero."
                      ]
                    },
                    {
                      "name": "InsufficientLiquidity",
                      "fields": [],
                      "index": 18,
                      "docs": [
                        "Insufficient liquidity in the pool."
                      ]
                    },
                    {
                      "name": "ProvidedMinimumNotSufficientForSwap",
                      "fields": [],
                      "index": 19,
                      "docs": [
                        "Calculated amount out is less than provided minimum amount."
                      ]
                    },
                    {
                      "name": "ProvidedMaximumNotSufficientForSwap",
                      "fields": [],
                      "index": 20,
                      "docs": [
                        "Provided maximum amount is not sufficient for swap."
                      ]
                    },
                    {
                      "name": "PoolMustContainNativeCurrency",
                      "fields": [],
                      "index": 21,
                      "docs": [
                        "Only pools with native on one side are valid."
                      ]
                    },
                    {
                      "name": "InvalidPath",
                      "fields": [],
                      "index": 22,
                      "docs": [
                        "The provided path must consists of 2 assets at least."
                      ]
                    },
                    {
                      "name": "PathError",
                      "fields": [],
                      "index": 23,
                      "docs": [
                        "It was not possible to calculate path data."
                      ]
                    },
                    {
                      "name": "NonUniquePath",
                      "fields": [],
                      "index": 24,
                      "docs": [
                        "The provided path must consists of unique assets."
                      ]
                    },
                    {
                      "name": "IncorrectPoolAssetId",
                      "fields": [],
                      "index": 25,
                      "docs": [
                        "It was not possible to get or increment the Id of the pool."
                      ]
                    },
                    {
                      "name": "CorrespondenceError",
                      "fields": [],
                      "index": 26,
                      "docs": [
                        "Unable to find an element in an array/vec that should have one-to-one correspondence",
                        "with another. For example, an array of assets constituting a `path` should have a",
                        "corresponding array of `amounts` along the path."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 847,
            "type": {
              "path": [
                "pallet_fast_unstake",
                "types",
                "UnstakeRequest"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "stashes",
                      "type": 848,
                      "typeName": "BoundedVec<(T::AccountId, BalanceOf<T>), T::BatchSize>",
                      "docs": []
                    },
                    {
                      "name": "checked",
                      "type": 849,
                      "typeName": "BoundedVec<EraIndex, MaxChecking<T>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 848,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 63
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 62,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 849,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 4
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 115,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 850,
            "type": {
              "path": [
                "pallet_fast_unstake",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotController",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The provided Controller account was not found.",
                        "",
                        "This means that the given account is not bonded."
                      ]
                    },
                    {
                      "name": "AlreadyQueued",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The bonded account has already been queued."
                      ]
                    },
                    {
                      "name": "NotFullyBonded",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The bonded account has active unlocking chunks."
                      ]
                    },
                    {
                      "name": "NotQueued",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The provided un-staker is not in the `Queue`."
                      ]
                    },
                    {
                      "name": "AlreadyHead",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The provided un-staker is already in Head, and cannot deregister."
                      ]
                    },
                    {
                      "name": "CallNotAllowed",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The call is not allowed at this point because the pallet is not active."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 851,
            "type": {
              "path": [
                "pallet_message_queue",
                "BookState"
              ],
              "params": [
                {
                  "name": "MessageOrigin",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "begin",
                      "type": 4,
                      "typeName": "PageIndex",
                      "docs": []
                    },
                    {
                      "name": "end",
                      "type": 4,
                      "typeName": "PageIndex",
                      "docs": []
                    },
                    {
                      "name": "count",
                      "type": 4,
                      "typeName": "PageIndex",
                      "docs": []
                    },
                    {
                      "name": "ready_neighbours",
                      "type": 852,
                      "typeName": "Option<Neighbours<MessageOrigin>>",
                      "docs": []
                    },
                    {
                      "name": "message_count",
                      "type": 11,
                      "typeName": "u64",
                      "docs": []
                    },
                    {
                      "name": "size",
                      "type": 11,
                      "typeName": "u64",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 852,
            "type": {
              "path": [
                "Option"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 853
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "None",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Some",
                      "fields": [
                        {
                          "name": null,
                          "type": 853,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 853,
            "type": {
              "path": [
                "pallet_message_queue",
                "Neighbours"
              ],
              "params": [
                {
                  "name": "MessageOrigin",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "prev",
                      "type": 4,
                      "typeName": "MessageOrigin",
                      "docs": []
                    },
                    {
                      "name": "next",
                      "type": 4,
                      "typeName": "MessageOrigin",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 854,
            "type": {
              "path": [
                "pallet_message_queue",
                "Page"
              ],
              "params": [
                {
                  "name": "Size",
                  "type": 4
                },
                {
                  "name": "HeapSize",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "remaining",
                      "type": 4,
                      "typeName": "Size",
                      "docs": []
                    },
                    {
                      "name": "remaining_size",
                      "type": 4,
                      "typeName": "Size",
                      "docs": []
                    },
                    {
                      "name": "first_index",
                      "type": 4,
                      "typeName": "Size",
                      "docs": []
                    },
                    {
                      "name": "first",
                      "type": 4,
                      "typeName": "Size",
                      "docs": []
                    },
                    {
                      "name": "last",
                      "type": 4,
                      "typeName": "Size",
                      "docs": []
                    },
                    {
                      "name": "heap",
                      "type": 855,
                      "typeName": "BoundedVec<u8, IntoU32<HeapSize, Size>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 855,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 2
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 856,
            "type": {
              "path": [
                "pallet_message_queue",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "NotReapable",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "Page is not reapable because it has items remaining to be processed and is not old",
                        "enough."
                      ]
                    },
                    {
                      "name": "NoPage",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "Page to be reaped does not exist."
                      ]
                    },
                    {
                      "name": "NoMessage",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The referenced message could not be found."
                      ]
                    },
                    {
                      "name": "AlreadyProcessed",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The message was already processed and cannot be processed again."
                      ]
                    },
                    {
                      "name": "Queued",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The message is queued for future execution."
                      ]
                    },
                    {
                      "name": "InsufficientWeight",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "There is temporarily not enough weight to continue servicing messages."
                      ]
                    },
                    {
                      "name": "TemporarilyUnprocessable",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "This message is temporarily unprocessable.",
                        "",
                        "Such errors are expected, but not guaranteed, to resolve themselves eventually through",
                        "retrying."
                      ]
                    },
                    {
                      "name": "QueuePaused",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "The queue is paused and no message can be executed from it.",
                        "",
                        "This can change at any time and may resolve in the future by re-trying."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 857,
            "type": {
              "path": [
                "pallet_tx_pause",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "IsPaused",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The call is paused."
                      ]
                    },
                    {
                      "name": "IsUnpaused",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The call is unpaused."
                      ]
                    },
                    {
                      "name": "Unpausable",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The call is whitelisted and cannot be paused."
                      ]
                    },
                    {
                      "name": "NotFound",
                      "fields": [],
                      "index": 3,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 858,
            "type": {
              "path": [
                "pallet_safe_mode",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Entered",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The safe-mode is (already or still) entered."
                      ]
                    },
                    {
                      "name": "Exited",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The safe-mode is (already or still) exited."
                      ]
                    },
                    {
                      "name": "NotConfigured",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "This functionality of the pallet is disabled by the configuration."
                      ]
                    },
                    {
                      "name": "NoDeposit",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "There is no balance reserved."
                      ]
                    },
                    {
                      "name": "AlreadyDeposited",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The account already has a deposit reserved and can therefore not enter or extend again."
                      ]
                    },
                    {
                      "name": "CannotReleaseYet",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "This deposit cannot be released yet."
                      ]
                    },
                    {
                      "name": "CurrencyError",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "An error from the underlying `Currency`."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 859,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 412
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 860,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 860,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 412
                }
              },
              "docs": []
            }
          },
          {
            "id": 861,
            "type": {
              "path": [
                "bounded_collections",
                "bounded_vec",
                "BoundedVec"
              ],
              "params": [
                {
                  "name": "T",
                  "type": 862
                },
                {
                  "name": "S",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 863,
                      "typeName": "Vec<T>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 862,
            "type": {
              "path": [
                "pallet_broker",
                "types",
                "LeaseRecordItem"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "until",
                      "type": 4,
                      "typeName": "Timeslice",
                      "docs": []
                    },
                    {
                      "name": "task",
                      "type": 4,
                      "typeName": "TaskId",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 863,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "sequence": {
                  "type": 862
                }
              },
              "docs": []
            }
          },
          {
            "id": 864,
            "type": {
              "path": [
                "pallet_broker",
                "types",
                "StatusRecord"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "core_count",
                      "type": 102,
                      "typeName": "CoreIndex",
                      "docs": []
                    },
                    {
                      "name": "private_pool_size",
                      "type": 4,
                      "typeName": "CoreMaskBitCount",
                      "docs": []
                    },
                    {
                      "name": "system_pool_size",
                      "type": 4,
                      "typeName": "CoreMaskBitCount",
                      "docs": []
                    },
                    {
                      "name": "last_committed_timeslice",
                      "type": 4,
                      "typeName": "Timeslice",
                      "docs": []
                    },
                    {
                      "name": "last_timeslice",
                      "type": 4,
                      "typeName": "Timeslice",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 865,
            "type": {
              "path": [
                "pallet_broker",
                "types",
                "SaleInfoRecord"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                },
                {
                  "name": "BlockNumber",
                  "type": 4
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "sale_start",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "leadin_length",
                      "type": 4,
                      "typeName": "BlockNumber",
                      "docs": []
                    },
                    {
                      "name": "price",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "region_begin",
                      "type": 4,
                      "typeName": "Timeslice",
                      "docs": []
                    },
                    {
                      "name": "region_end",
                      "type": 4,
                      "typeName": "Timeslice",
                      "docs": []
                    },
                    {
                      "name": "ideal_cores_sold",
                      "type": 102,
                      "typeName": "CoreIndex",
                      "docs": []
                    },
                    {
                      "name": "cores_offered",
                      "type": 102,
                      "typeName": "CoreIndex",
                      "docs": []
                    },
                    {
                      "name": "first_core",
                      "type": 102,
                      "typeName": "CoreIndex",
                      "docs": []
                    },
                    {
                      "name": "sellout_price",
                      "type": 331,
                      "typeName": "Option<Balance>",
                      "docs": []
                    },
                    {
                      "name": "cores_sold",
                      "type": 102,
                      "typeName": "CoreIndex",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 866,
            "type": {
              "path": [
                "pallet_broker",
                "types",
                "AllowedRenewalId"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "core",
                      "type": 102,
                      "typeName": "CoreIndex",
                      "docs": []
                    },
                    {
                      "name": "when",
                      "type": 4,
                      "typeName": "Timeslice",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 867,
            "type": {
              "path": [
                "pallet_broker",
                "types",
                "AllowedRenewalRecord"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "price",
                      "type": 6,
                      "typeName": "Balance",
                      "docs": []
                    },
                    {
                      "name": "completion",
                      "type": 868,
                      "typeName": "CompletionStatus",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 868,
            "type": {
              "path": [
                "pallet_broker",
                "types",
                "CompletionStatus"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Partial",
                      "fields": [
                        {
                          "name": null,
                          "type": 414,
                          "typeName": "CoreMask",
                          "docs": []
                        }
                      ],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Complete",
                      "fields": [
                        {
                          "name": null,
                          "type": 412,
                          "typeName": "Schedule",
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 869,
            "type": {
              "path": [
                "pallet_broker",
                "types",
                "RegionRecord"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                },
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "end",
                      "type": 4,
                      "typeName": "Timeslice",
                      "docs": []
                    },
                    {
                      "name": "owner",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    },
                    {
                      "name": "paid",
                      "type": 331,
                      "typeName": "Option<Balance>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 870,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  4,
                  102
                ]
              },
              "docs": []
            }
          },
          {
            "id": 871,
            "type": {
              "path": [
                "pallet_broker",
                "types",
                "ContributionRecord"
              ],
              "params": [
                {
                  "name": "AccountId",
                  "type": 0
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "length",
                      "type": 4,
                      "typeName": "Timeslice",
                      "docs": []
                    },
                    {
                      "name": "payee",
                      "type": 0,
                      "typeName": "AccountId",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 872,
            "type": {
              "path": [
                "pallet_broker",
                "types",
                "PoolIoRecord"
              ],
              "params": [],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "private",
                      "type": 873,
                      "typeName": "SignedCoreMaskBitCount",
                      "docs": []
                    },
                    {
                      "name": "system",
                      "type": 873,
                      "typeName": "SignedCoreMaskBitCount",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 873,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "primitive": "I32"
              },
              "docs": []
            }
          },
          {
            "id": 874,
            "type": {
              "path": [
                "pallet_broker",
                "types",
                "InstaPoolHistoryRecord"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "private_contributions",
                      "type": 4,
                      "typeName": "CoreMaskBitCount",
                      "docs": []
                    },
                    {
                      "name": "system_contributions",
                      "type": 4,
                      "typeName": "CoreMaskBitCount",
                      "docs": []
                    },
                    {
                      "name": "maybe_payout",
                      "type": 331,
                      "typeName": "Option<Balance>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 875,
            "type": {
              "path": [
                "pallet_broker",
                "pallet",
                "Error"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "UnknownRegion",
                      "fields": [],
                      "index": 0,
                      "docs": [
                        "The given region identity is not known."
                      ]
                    },
                    {
                      "name": "NotOwner",
                      "fields": [],
                      "index": 1,
                      "docs": [
                        "The owner of the region is not the origin."
                      ]
                    },
                    {
                      "name": "PivotTooLate",
                      "fields": [],
                      "index": 2,
                      "docs": [
                        "The pivot point of the partition at or after the end of the region."
                      ]
                    },
                    {
                      "name": "PivotTooEarly",
                      "fields": [],
                      "index": 3,
                      "docs": [
                        "The pivot point of the partition at the beginning of the region."
                      ]
                    },
                    {
                      "name": "ExteriorPivot",
                      "fields": [],
                      "index": 4,
                      "docs": [
                        "The pivot mask for the interlacing is not contained within the region's interlace mask."
                      ]
                    },
                    {
                      "name": "VoidPivot",
                      "fields": [],
                      "index": 5,
                      "docs": [
                        "The pivot mask for the interlacing is void (and therefore unschedulable)."
                      ]
                    },
                    {
                      "name": "CompletePivot",
                      "fields": [],
                      "index": 6,
                      "docs": [
                        "The pivot mask for the interlacing is complete (and therefore not a strict subset)."
                      ]
                    },
                    {
                      "name": "CorruptWorkplan",
                      "fields": [],
                      "index": 7,
                      "docs": [
                        "The workplan of the pallet's state is invalid. This indicates a state corruption."
                      ]
                    },
                    {
                      "name": "NoSales",
                      "fields": [],
                      "index": 8,
                      "docs": [
                        "There is no sale happening currently."
                      ]
                    },
                    {
                      "name": "Overpriced",
                      "fields": [],
                      "index": 9,
                      "docs": [
                        "The price limit is exceeded."
                      ]
                    },
                    {
                      "name": "Unavailable",
                      "fields": [],
                      "index": 10,
                      "docs": [
                        "There are no cores available."
                      ]
                    },
                    {
                      "name": "SoldOut",
                      "fields": [],
                      "index": 11,
                      "docs": [
                        "The sale limit has been reached."
                      ]
                    },
                    {
                      "name": "WrongTime",
                      "fields": [],
                      "index": 12,
                      "docs": [
                        "The renewal operation is not valid at the current time (it may become valid in the next",
                        "sale)."
                      ]
                    },
                    {
                      "name": "NotAllowed",
                      "fields": [],
                      "index": 13,
                      "docs": [
                        "Invalid attempt to renew."
                      ]
                    },
                    {
                      "name": "Uninitialized",
                      "fields": [],
                      "index": 14,
                      "docs": [
                        "This pallet has not yet been initialized."
                      ]
                    },
                    {
                      "name": "TooEarly",
                      "fields": [],
                      "index": 15,
                      "docs": [
                        "The purchase cannot happen yet as the sale period is yet to begin."
                      ]
                    },
                    {
                      "name": "NothingToDo",
                      "fields": [],
                      "index": 16,
                      "docs": [
                        "There is no work to be done."
                      ]
                    },
                    {
                      "name": "TooManyReservations",
                      "fields": [],
                      "index": 17,
                      "docs": [
                        "The maximum amount of reservations has already been reached."
                      ]
                    },
                    {
                      "name": "TooManyLeases",
                      "fields": [],
                      "index": 18,
                      "docs": [
                        "The maximum amount of leases has already been reached."
                      ]
                    },
                    {
                      "name": "UnknownRevenue",
                      "fields": [],
                      "index": 19,
                      "docs": [
                        "The revenue for the Instantaneous Core Sales of this period is not (yet) known and thus",
                        "this operation cannot proceed."
                      ]
                    },
                    {
                      "name": "UnknownContribution",
                      "fields": [],
                      "index": 20,
                      "docs": [
                        "The identified contribution to the Instantaneous Core Pool is unknown."
                      ]
                    },
                    {
                      "name": "IncompleteAssignment",
                      "fields": [],
                      "index": 21,
                      "docs": [
                        "The workload assigned for renewal is incomplete. This is unexpected and indicates a",
                        "logic error."
                      ]
                    },
                    {
                      "name": "StillValid",
                      "fields": [],
                      "index": 22,
                      "docs": [
                        "An item cannot be dropped because it is still valid."
                      ]
                    },
                    {
                      "name": "NoHistory",
                      "fields": [],
                      "index": 23,
                      "docs": [
                        "The history item does not exist."
                      ]
                    },
                    {
                      "name": "UnknownReservation",
                      "fields": [],
                      "index": 24,
                      "docs": [
                        "No reservation of the given index exists."
                      ]
                    },
                    {
                      "name": "UnknownRenewal",
                      "fields": [],
                      "index": 25,
                      "docs": [
                        "The renewal record cannot be found."
                      ]
                    },
                    {
                      "name": "AlreadyExpired",
                      "fields": [],
                      "index": 26,
                      "docs": [
                        "The lease expiry time has already passed."
                      ]
                    },
                    {
                      "name": "InvalidConfig",
                      "fields": [],
                      "index": 27,
                      "docs": [
                        "The configuration could not be applied because it is invalid."
                      ]
                    }
                  ]
                }
              },
              "docs": [
                "The `Error` enum of this pallet."
              ]
            }
          },
          {
            "id": 876,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "unchecked_extrinsic",
                "UncheckedExtrinsic"
              ],
              "params": [
                {
                  "name": "Address",
                  "type": 167
                },
                {
                  "name": "Call",
                  "type": 142
                },
                {
                  "name": "Signature",
                  "type": 349
                },
                {
                  "name": "Extra",
                  "type": 877
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 13,
                      "typeName": null,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 877,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "tuple": [
                  878,
                  879,
                  880,
                  881,
                  882,
                  884,
                  885,
                  886
                ]
              },
              "docs": []
            }
          },
          {
            "id": 878,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_non_zero_sender",
                "CheckNonZeroSender"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 879,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_spec_version",
                "CheckSpecVersion"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 880,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_tx_version",
                "CheckTxVersion"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 881,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_genesis",
                "CheckGenesis"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 882,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_mortality",
                "CheckMortality"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 883,
                      "typeName": "Era",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 883,
            "type": {
              "path": [
                "sp_runtime",
                "generic",
                "era",
                "Era"
              ],
              "params": [],
              "def": {
                "variant": {
                  "variants": [
                    {
                      "name": "Immortal",
                      "fields": [],
                      "index": 0,
                      "docs": []
                    },
                    {
                      "name": "Mortal1",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 1,
                      "docs": []
                    },
                    {
                      "name": "Mortal2",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 2,
                      "docs": []
                    },
                    {
                      "name": "Mortal3",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 3,
                      "docs": []
                    },
                    {
                      "name": "Mortal4",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 4,
                      "docs": []
                    },
                    {
                      "name": "Mortal5",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 5,
                      "docs": []
                    },
                    {
                      "name": "Mortal6",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 6,
                      "docs": []
                    },
                    {
                      "name": "Mortal7",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 7,
                      "docs": []
                    },
                    {
                      "name": "Mortal8",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 8,
                      "docs": []
                    },
                    {
                      "name": "Mortal9",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 9,
                      "docs": []
                    },
                    {
                      "name": "Mortal10",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 10,
                      "docs": []
                    },
                    {
                      "name": "Mortal11",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 11,
                      "docs": []
                    },
                    {
                      "name": "Mortal12",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 12,
                      "docs": []
                    },
                    {
                      "name": "Mortal13",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 13,
                      "docs": []
                    },
                    {
                      "name": "Mortal14",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 14,
                      "docs": []
                    },
                    {
                      "name": "Mortal15",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 15,
                      "docs": []
                    },
                    {
                      "name": "Mortal16",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 16,
                      "docs": []
                    },
                    {
                      "name": "Mortal17",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 17,
                      "docs": []
                    },
                    {
                      "name": "Mortal18",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 18,
                      "docs": []
                    },
                    {
                      "name": "Mortal19",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 19,
                      "docs": []
                    },
                    {
                      "name": "Mortal20",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 20,
                      "docs": []
                    },
                    {
                      "name": "Mortal21",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 21,
                      "docs": []
                    },
                    {
                      "name": "Mortal22",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 22,
                      "docs": []
                    },
                    {
                      "name": "Mortal23",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 23,
                      "docs": []
                    },
                    {
                      "name": "Mortal24",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 24,
                      "docs": []
                    },
                    {
                      "name": "Mortal25",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 25,
                      "docs": []
                    },
                    {
                      "name": "Mortal26",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 26,
                      "docs": []
                    },
                    {
                      "name": "Mortal27",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 27,
                      "docs": []
                    },
                    {
                      "name": "Mortal28",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 28,
                      "docs": []
                    },
                    {
                      "name": "Mortal29",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 29,
                      "docs": []
                    },
                    {
                      "name": "Mortal30",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 30,
                      "docs": []
                    },
                    {
                      "name": "Mortal31",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 31,
                      "docs": []
                    },
                    {
                      "name": "Mortal32",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 32,
                      "docs": []
                    },
                    {
                      "name": "Mortal33",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 33,
                      "docs": []
                    },
                    {
                      "name": "Mortal34",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 34,
                      "docs": []
                    },
                    {
                      "name": "Mortal35",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 35,
                      "docs": []
                    },
                    {
                      "name": "Mortal36",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 36,
                      "docs": []
                    },
                    {
                      "name": "Mortal37",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 37,
                      "docs": []
                    },
                    {
                      "name": "Mortal38",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 38,
                      "docs": []
                    },
                    {
                      "name": "Mortal39",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 39,
                      "docs": []
                    },
                    {
                      "name": "Mortal40",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 40,
                      "docs": []
                    },
                    {
                      "name": "Mortal41",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 41,
                      "docs": []
                    },
                    {
                      "name": "Mortal42",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 42,
                      "docs": []
                    },
                    {
                      "name": "Mortal43",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 43,
                      "docs": []
                    },
                    {
                      "name": "Mortal44",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 44,
                      "docs": []
                    },
                    {
                      "name": "Mortal45",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 45,
                      "docs": []
                    },
                    {
                      "name": "Mortal46",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 46,
                      "docs": []
                    },
                    {
                      "name": "Mortal47",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 47,
                      "docs": []
                    },
                    {
                      "name": "Mortal48",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 48,
                      "docs": []
                    },
                    {
                      "name": "Mortal49",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 49,
                      "docs": []
                    },
                    {
                      "name": "Mortal50",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 50,
                      "docs": []
                    },
                    {
                      "name": "Mortal51",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 51,
                      "docs": []
                    },
                    {
                      "name": "Mortal52",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 52,
                      "docs": []
                    },
                    {
                      "name": "Mortal53",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 53,
                      "docs": []
                    },
                    {
                      "name": "Mortal54",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 54,
                      "docs": []
                    },
                    {
                      "name": "Mortal55",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 55,
                      "docs": []
                    },
                    {
                      "name": "Mortal56",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 56,
                      "docs": []
                    },
                    {
                      "name": "Mortal57",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 57,
                      "docs": []
                    },
                    {
                      "name": "Mortal58",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 58,
                      "docs": []
                    },
                    {
                      "name": "Mortal59",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 59,
                      "docs": []
                    },
                    {
                      "name": "Mortal60",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 60,
                      "docs": []
                    },
                    {
                      "name": "Mortal61",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 61,
                      "docs": []
                    },
                    {
                      "name": "Mortal62",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 62,
                      "docs": []
                    },
                    {
                      "name": "Mortal63",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 63,
                      "docs": []
                    },
                    {
                      "name": "Mortal64",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 64,
                      "docs": []
                    },
                    {
                      "name": "Mortal65",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 65,
                      "docs": []
                    },
                    {
                      "name": "Mortal66",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 66,
                      "docs": []
                    },
                    {
                      "name": "Mortal67",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 67,
                      "docs": []
                    },
                    {
                      "name": "Mortal68",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 68,
                      "docs": []
                    },
                    {
                      "name": "Mortal69",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 69,
                      "docs": []
                    },
                    {
                      "name": "Mortal70",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 70,
                      "docs": []
                    },
                    {
                      "name": "Mortal71",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 71,
                      "docs": []
                    },
                    {
                      "name": "Mortal72",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 72,
                      "docs": []
                    },
                    {
                      "name": "Mortal73",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 73,
                      "docs": []
                    },
                    {
                      "name": "Mortal74",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 74,
                      "docs": []
                    },
                    {
                      "name": "Mortal75",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 75,
                      "docs": []
                    },
                    {
                      "name": "Mortal76",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 76,
                      "docs": []
                    },
                    {
                      "name": "Mortal77",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 77,
                      "docs": []
                    },
                    {
                      "name": "Mortal78",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 78,
                      "docs": []
                    },
                    {
                      "name": "Mortal79",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 79,
                      "docs": []
                    },
                    {
                      "name": "Mortal80",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 80,
                      "docs": []
                    },
                    {
                      "name": "Mortal81",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 81,
                      "docs": []
                    },
                    {
                      "name": "Mortal82",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 82,
                      "docs": []
                    },
                    {
                      "name": "Mortal83",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 83,
                      "docs": []
                    },
                    {
                      "name": "Mortal84",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 84,
                      "docs": []
                    },
                    {
                      "name": "Mortal85",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 85,
                      "docs": []
                    },
                    {
                      "name": "Mortal86",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 86,
                      "docs": []
                    },
                    {
                      "name": "Mortal87",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 87,
                      "docs": []
                    },
                    {
                      "name": "Mortal88",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 88,
                      "docs": []
                    },
                    {
                      "name": "Mortal89",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 89,
                      "docs": []
                    },
                    {
                      "name": "Mortal90",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 90,
                      "docs": []
                    },
                    {
                      "name": "Mortal91",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 91,
                      "docs": []
                    },
                    {
                      "name": "Mortal92",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 92,
                      "docs": []
                    },
                    {
                      "name": "Mortal93",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 93,
                      "docs": []
                    },
                    {
                      "name": "Mortal94",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 94,
                      "docs": []
                    },
                    {
                      "name": "Mortal95",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 95,
                      "docs": []
                    },
                    {
                      "name": "Mortal96",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 96,
                      "docs": []
                    },
                    {
                      "name": "Mortal97",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 97,
                      "docs": []
                    },
                    {
                      "name": "Mortal98",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 98,
                      "docs": []
                    },
                    {
                      "name": "Mortal99",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 99,
                      "docs": []
                    },
                    {
                      "name": "Mortal100",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 100,
                      "docs": []
                    },
                    {
                      "name": "Mortal101",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 101,
                      "docs": []
                    },
                    {
                      "name": "Mortal102",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 102,
                      "docs": []
                    },
                    {
                      "name": "Mortal103",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 103,
                      "docs": []
                    },
                    {
                      "name": "Mortal104",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 104,
                      "docs": []
                    },
                    {
                      "name": "Mortal105",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 105,
                      "docs": []
                    },
                    {
                      "name": "Mortal106",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 106,
                      "docs": []
                    },
                    {
                      "name": "Mortal107",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 107,
                      "docs": []
                    },
                    {
                      "name": "Mortal108",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 108,
                      "docs": []
                    },
                    {
                      "name": "Mortal109",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 109,
                      "docs": []
                    },
                    {
                      "name": "Mortal110",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 110,
                      "docs": []
                    },
                    {
                      "name": "Mortal111",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 111,
                      "docs": []
                    },
                    {
                      "name": "Mortal112",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 112,
                      "docs": []
                    },
                    {
                      "name": "Mortal113",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 113,
                      "docs": []
                    },
                    {
                      "name": "Mortal114",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 114,
                      "docs": []
                    },
                    {
                      "name": "Mortal115",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 115,
                      "docs": []
                    },
                    {
                      "name": "Mortal116",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 116,
                      "docs": []
                    },
                    {
                      "name": "Mortal117",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 117,
                      "docs": []
                    },
                    {
                      "name": "Mortal118",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 118,
                      "docs": []
                    },
                    {
                      "name": "Mortal119",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 119,
                      "docs": []
                    },
                    {
                      "name": "Mortal120",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 120,
                      "docs": []
                    },
                    {
                      "name": "Mortal121",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 121,
                      "docs": []
                    },
                    {
                      "name": "Mortal122",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 122,
                      "docs": []
                    },
                    {
                      "name": "Mortal123",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 123,
                      "docs": []
                    },
                    {
                      "name": "Mortal124",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 124,
                      "docs": []
                    },
                    {
                      "name": "Mortal125",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 125,
                      "docs": []
                    },
                    {
                      "name": "Mortal126",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 126,
                      "docs": []
                    },
                    {
                      "name": "Mortal127",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 127,
                      "docs": []
                    },
                    {
                      "name": "Mortal128",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 128,
                      "docs": []
                    },
                    {
                      "name": "Mortal129",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 129,
                      "docs": []
                    },
                    {
                      "name": "Mortal130",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 130,
                      "docs": []
                    },
                    {
                      "name": "Mortal131",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 131,
                      "docs": []
                    },
                    {
                      "name": "Mortal132",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 132,
                      "docs": []
                    },
                    {
                      "name": "Mortal133",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 133,
                      "docs": []
                    },
                    {
                      "name": "Mortal134",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 134,
                      "docs": []
                    },
                    {
                      "name": "Mortal135",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 135,
                      "docs": []
                    },
                    {
                      "name": "Mortal136",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 136,
                      "docs": []
                    },
                    {
                      "name": "Mortal137",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 137,
                      "docs": []
                    },
                    {
                      "name": "Mortal138",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 138,
                      "docs": []
                    },
                    {
                      "name": "Mortal139",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 139,
                      "docs": []
                    },
                    {
                      "name": "Mortal140",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 140,
                      "docs": []
                    },
                    {
                      "name": "Mortal141",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 141,
                      "docs": []
                    },
                    {
                      "name": "Mortal142",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 142,
                      "docs": []
                    },
                    {
                      "name": "Mortal143",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 143,
                      "docs": []
                    },
                    {
                      "name": "Mortal144",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 144,
                      "docs": []
                    },
                    {
                      "name": "Mortal145",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 145,
                      "docs": []
                    },
                    {
                      "name": "Mortal146",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 146,
                      "docs": []
                    },
                    {
                      "name": "Mortal147",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 147,
                      "docs": []
                    },
                    {
                      "name": "Mortal148",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 148,
                      "docs": []
                    },
                    {
                      "name": "Mortal149",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 149,
                      "docs": []
                    },
                    {
                      "name": "Mortal150",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 150,
                      "docs": []
                    },
                    {
                      "name": "Mortal151",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 151,
                      "docs": []
                    },
                    {
                      "name": "Mortal152",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 152,
                      "docs": []
                    },
                    {
                      "name": "Mortal153",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 153,
                      "docs": []
                    },
                    {
                      "name": "Mortal154",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 154,
                      "docs": []
                    },
                    {
                      "name": "Mortal155",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 155,
                      "docs": []
                    },
                    {
                      "name": "Mortal156",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 156,
                      "docs": []
                    },
                    {
                      "name": "Mortal157",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 157,
                      "docs": []
                    },
                    {
                      "name": "Mortal158",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 158,
                      "docs": []
                    },
                    {
                      "name": "Mortal159",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 159,
                      "docs": []
                    },
                    {
                      "name": "Mortal160",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 160,
                      "docs": []
                    },
                    {
                      "name": "Mortal161",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 161,
                      "docs": []
                    },
                    {
                      "name": "Mortal162",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 162,
                      "docs": []
                    },
                    {
                      "name": "Mortal163",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 163,
                      "docs": []
                    },
                    {
                      "name": "Mortal164",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 164,
                      "docs": []
                    },
                    {
                      "name": "Mortal165",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 165,
                      "docs": []
                    },
                    {
                      "name": "Mortal166",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 166,
                      "docs": []
                    },
                    {
                      "name": "Mortal167",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 167,
                      "docs": []
                    },
                    {
                      "name": "Mortal168",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 168,
                      "docs": []
                    },
                    {
                      "name": "Mortal169",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 169,
                      "docs": []
                    },
                    {
                      "name": "Mortal170",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 170,
                      "docs": []
                    },
                    {
                      "name": "Mortal171",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 171,
                      "docs": []
                    },
                    {
                      "name": "Mortal172",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 172,
                      "docs": []
                    },
                    {
                      "name": "Mortal173",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 173,
                      "docs": []
                    },
                    {
                      "name": "Mortal174",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 174,
                      "docs": []
                    },
                    {
                      "name": "Mortal175",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 175,
                      "docs": []
                    },
                    {
                      "name": "Mortal176",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 176,
                      "docs": []
                    },
                    {
                      "name": "Mortal177",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 177,
                      "docs": []
                    },
                    {
                      "name": "Mortal178",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 178,
                      "docs": []
                    },
                    {
                      "name": "Mortal179",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 179,
                      "docs": []
                    },
                    {
                      "name": "Mortal180",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 180,
                      "docs": []
                    },
                    {
                      "name": "Mortal181",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 181,
                      "docs": []
                    },
                    {
                      "name": "Mortal182",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 182,
                      "docs": []
                    },
                    {
                      "name": "Mortal183",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 183,
                      "docs": []
                    },
                    {
                      "name": "Mortal184",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 184,
                      "docs": []
                    },
                    {
                      "name": "Mortal185",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 185,
                      "docs": []
                    },
                    {
                      "name": "Mortal186",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 186,
                      "docs": []
                    },
                    {
                      "name": "Mortal187",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 187,
                      "docs": []
                    },
                    {
                      "name": "Mortal188",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 188,
                      "docs": []
                    },
                    {
                      "name": "Mortal189",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 189,
                      "docs": []
                    },
                    {
                      "name": "Mortal190",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 190,
                      "docs": []
                    },
                    {
                      "name": "Mortal191",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 191,
                      "docs": []
                    },
                    {
                      "name": "Mortal192",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 192,
                      "docs": []
                    },
                    {
                      "name": "Mortal193",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 193,
                      "docs": []
                    },
                    {
                      "name": "Mortal194",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 194,
                      "docs": []
                    },
                    {
                      "name": "Mortal195",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 195,
                      "docs": []
                    },
                    {
                      "name": "Mortal196",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 196,
                      "docs": []
                    },
                    {
                      "name": "Mortal197",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 197,
                      "docs": []
                    },
                    {
                      "name": "Mortal198",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 198,
                      "docs": []
                    },
                    {
                      "name": "Mortal199",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 199,
                      "docs": []
                    },
                    {
                      "name": "Mortal200",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 200,
                      "docs": []
                    },
                    {
                      "name": "Mortal201",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 201,
                      "docs": []
                    },
                    {
                      "name": "Mortal202",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 202,
                      "docs": []
                    },
                    {
                      "name": "Mortal203",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 203,
                      "docs": []
                    },
                    {
                      "name": "Mortal204",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 204,
                      "docs": []
                    },
                    {
                      "name": "Mortal205",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 205,
                      "docs": []
                    },
                    {
                      "name": "Mortal206",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 206,
                      "docs": []
                    },
                    {
                      "name": "Mortal207",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 207,
                      "docs": []
                    },
                    {
                      "name": "Mortal208",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 208,
                      "docs": []
                    },
                    {
                      "name": "Mortal209",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 209,
                      "docs": []
                    },
                    {
                      "name": "Mortal210",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 210,
                      "docs": []
                    },
                    {
                      "name": "Mortal211",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 211,
                      "docs": []
                    },
                    {
                      "name": "Mortal212",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 212,
                      "docs": []
                    },
                    {
                      "name": "Mortal213",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 213,
                      "docs": []
                    },
                    {
                      "name": "Mortal214",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 214,
                      "docs": []
                    },
                    {
                      "name": "Mortal215",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 215,
                      "docs": []
                    },
                    {
                      "name": "Mortal216",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 216,
                      "docs": []
                    },
                    {
                      "name": "Mortal217",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 217,
                      "docs": []
                    },
                    {
                      "name": "Mortal218",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 218,
                      "docs": []
                    },
                    {
                      "name": "Mortal219",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 219,
                      "docs": []
                    },
                    {
                      "name": "Mortal220",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 220,
                      "docs": []
                    },
                    {
                      "name": "Mortal221",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 221,
                      "docs": []
                    },
                    {
                      "name": "Mortal222",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 222,
                      "docs": []
                    },
                    {
                      "name": "Mortal223",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 223,
                      "docs": []
                    },
                    {
                      "name": "Mortal224",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 224,
                      "docs": []
                    },
                    {
                      "name": "Mortal225",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 225,
                      "docs": []
                    },
                    {
                      "name": "Mortal226",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 226,
                      "docs": []
                    },
                    {
                      "name": "Mortal227",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 227,
                      "docs": []
                    },
                    {
                      "name": "Mortal228",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 228,
                      "docs": []
                    },
                    {
                      "name": "Mortal229",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 229,
                      "docs": []
                    },
                    {
                      "name": "Mortal230",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 230,
                      "docs": []
                    },
                    {
                      "name": "Mortal231",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 231,
                      "docs": []
                    },
                    {
                      "name": "Mortal232",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 232,
                      "docs": []
                    },
                    {
                      "name": "Mortal233",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 233,
                      "docs": []
                    },
                    {
                      "name": "Mortal234",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 234,
                      "docs": []
                    },
                    {
                      "name": "Mortal235",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 235,
                      "docs": []
                    },
                    {
                      "name": "Mortal236",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 236,
                      "docs": []
                    },
                    {
                      "name": "Mortal237",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 237,
                      "docs": []
                    },
                    {
                      "name": "Mortal238",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 238,
                      "docs": []
                    },
                    {
                      "name": "Mortal239",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 239,
                      "docs": []
                    },
                    {
                      "name": "Mortal240",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 240,
                      "docs": []
                    },
                    {
                      "name": "Mortal241",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 241,
                      "docs": []
                    },
                    {
                      "name": "Mortal242",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 242,
                      "docs": []
                    },
                    {
                      "name": "Mortal243",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 243,
                      "docs": []
                    },
                    {
                      "name": "Mortal244",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 244,
                      "docs": []
                    },
                    {
                      "name": "Mortal245",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 245,
                      "docs": []
                    },
                    {
                      "name": "Mortal246",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 246,
                      "docs": []
                    },
                    {
                      "name": "Mortal247",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 247,
                      "docs": []
                    },
                    {
                      "name": "Mortal248",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 248,
                      "docs": []
                    },
                    {
                      "name": "Mortal249",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 249,
                      "docs": []
                    },
                    {
                      "name": "Mortal250",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 250,
                      "docs": []
                    },
                    {
                      "name": "Mortal251",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 251,
                      "docs": []
                    },
                    {
                      "name": "Mortal252",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 252,
                      "docs": []
                    },
                    {
                      "name": "Mortal253",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 253,
                      "docs": []
                    },
                    {
                      "name": "Mortal254",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 254,
                      "docs": []
                    },
                    {
                      "name": "Mortal255",
                      "fields": [
                        {
                          "name": null,
                          "type": 2,
                          "typeName": null,
                          "docs": []
                        }
                      ],
                      "index": 255,
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 884,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_nonce",
                "CheckNonce"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 158,
                      "typeName": "T::Nonce",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 885,
            "type": {
              "path": [
                "frame_system",
                "extensions",
                "check_weight",
                "CheckWeight"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": []
                }
              },
              "docs": []
            }
          },
          {
            "id": 886,
            "type": {
              "path": [
                "pallet_asset_conversion_tx_payment",
                "ChargeAssetTxPayment"
              ],
              "params": [
                {
                  "name": "T",
                  "type": null
                }
              ],
              "def": {
                "composite": {
                  "fields": [
                    {
                      "name": "tip",
                      "type": 83,
                      "typeName": "BalanceOf<T>",
                      "docs": []
                    },
                    {
                      "name": "asset_id",
                      "type": 38,
                      "typeName": "Option<ChargeAssetIdOf<T>>",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          }
        ]
      },
      "pallets": [
        {
          "name": "System",
          "storage": {
            "prefix": "System",
            "items": [
              {
                "name": "Account",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 3
                  }
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080",
                "docs": [
                  " The full account information for a particular account ID."
                ]
              },
              {
                "name": "ExtrinsicCount",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Total extrinsics count for the current block."
                ]
              },
              {
                "name": "BlockWeight",
                "modifier": "Default",
                "type": {
                  "plain": 8
                },
                "fallback": "0x000000000000",
                "docs": [
                  " The current weight for the block."
                ]
              },
              {
                "name": "AllExtrinsicsLen",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Total length (in bytes) for all extrinsics put together, for the current block."
                ]
              },
              {
                "name": "BlockHash",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 12
                  }
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Map of block numbers to block hashes."
                ]
              },
              {
                "name": "ExtrinsicData",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 13
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Extrinsics data for the current block (maps an extrinsic's index to its data)."
                ]
              },
              {
                "name": "Number",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The current block number being processed. Set by `execute_block`."
                ]
              },
              {
                "name": "ParentHash",
                "modifier": "Default",
                "type": {
                  "plain": 12
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Hash of the previous block."
                ]
              },
              {
                "name": "Digest",
                "modifier": "Default",
                "type": {
                  "plain": 14
                },
                "fallback": "0x00",
                "docs": [
                  " Digest of the current block, also part of the block header."
                ]
              },
              {
                "name": "Events",
                "modifier": "Default",
                "type": {
                  "plain": 18
                },
                "fallback": "0x00",
                "docs": [
                  " Events deposited for the current block.",
                  "",
                  " NOTE: The item is unbound and should therefore never be read on chain.",
                  " It could otherwise inflate the PoV size of a block.",
                  "",
                  " Events have a large in-memory size. Box the events to not go out-of-memory",
                  " just in case someone still reads them from within the runtime."
                ]
              },
              {
                "name": "EventCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The number of events in the `Events<T>` list."
                ]
              },
              {
                "name": "EventTopics",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 12,
                    "value": 466
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Mapping between a topic (represented by T::Hash) and a vector of indexes",
                  " of events in the `<Events<T>>` list.",
                  "",
                  " All topic vectors have deterministic storage locations depending on the topic. This",
                  " allows light-clients to leverage the changes trie storage tracking mechanism and",
                  " in case of changes fetch the list of events of interest.",
                  "",
                  " The value has the type `(BlockNumberFor<T>, EventIndex)` because if we used only just",
                  " the `EventIndex` then in case if the topic has the same contents on the next block",
                  " no notification will be triggered thus the event might be lost."
                ]
              },
              {
                "name": "LastRuntimeUpgrade",
                "modifier": "Optional",
                "type": {
                  "plain": 467
                },
                "fallback": "0x00",
                "docs": [
                  " Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."
                ]
              },
              {
                "name": "UpgradedToU32RefCount",
                "modifier": "Default",
                "type": {
                  "plain": 43
                },
                "fallback": "0x00",
                "docs": [
                  " True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."
                ]
              },
              {
                "name": "UpgradedToTripleRefCount",
                "modifier": "Default",
                "type": {
                  "plain": 43
                },
                "fallback": "0x00",
                "docs": [
                  " True if we have upgraded so that AccountInfo contains three types of `RefCount`. False",
                  " (default) if not."
                ]
              },
              {
                "name": "ExecutionPhase",
                "modifier": "Optional",
                "type": {
                  "plain": 465
                },
                "fallback": "0x00",
                "docs": [
                  " The execution phase of the block."
                ]
              }
            ]
          },
          "calls": {
            "type": 143
          },
          "events": {
            "type": 21
          },
          "constants": [
            {
              "name": "BlockWeights",
              "type": 469,
              "value": "0x025b1f5d000b00204aa9d10113ffffffffffffffffc2a0a91d00010bd05f9fa62e011366666666666666a6010b0098f73e5d0113ffffffffffffffbf010000c2a0a91d00010bd0e7f110a3011366666666666666e6010b00204aa9d10113ffffffffffffffff01070088526a74130000000000000040c2a0a91d00000000",
              "docs": [
                " Block & extrinsics weights: base values and limits."
              ]
            },
            {
              "name": "BlockLength",
              "type": 472,
              "value": "0x00003c000000500000005000",
              "docs": [
                " The maximum length of a block (in bytes)."
              ]
            },
            {
              "name": "BlockHashCount",
              "type": 4,
              "value": "0x60090000",
              "docs": [
                " Maximum number of block number to block hash mappings to keep (oldest pruned first)."
              ]
            },
            {
              "name": "DbWeight",
              "type": 474,
              "value": "0x40787d010000000000e1f50500000000",
              "docs": [
                " The weight of runtime database operations the runtime can invoke."
              ]
            },
            {
              "name": "Version",
              "type": 475,
              "value": "0x106e6f6465387375627374726174652d6e6f64650a0000000c0100000000000058df6acb689907609b0400000037e397fc7c91f5e40200000040fe3ad401f8959a06000000d2bc9897eed08f1503000000be9fb0c91a8046cf01000000f78b278be53f454c02000000ed99c5acb25eedf50300000017a6bc0d0062aeb30100000018ef58a3b67ba77001000000cbca25e39f14238702000000687ad44ad37f03c201000000bc9d89904f5b923f010000008453b50b222939770100000068b66ba122c93fa70200000037c8bb1350a9a2a8040000008a8047a53a8277ec01000000f3ff14d5ab52705903000000899a250cbe84f2500100000091d5df18b0d2cf58020000006fd7c327202e4a8d01000000ab3c0572291feb8b01000000fbc577b9d747efd6010000000200000001",
              "docs": [
                " Get the chain's current version."
              ]
            },
            {
              "name": "SS58Prefix",
              "type": 102,
              "value": "0x2a00",
              "docs": [
                " The designated SS58 prefix of this chain.",
                "",
                " This replaces the \"ss58Format\" property declared in the chain spec. Reason is",
                " that the runtime should know about the prefix in order to make use of it as",
                " an identifier of the chain."
              ]
            }
          ],
          "errors": {
            "type": 479
          },
          "index": 0
        },
        {
          "name": "Utility",
          "storage": null,
          "calls": {
            "type": 147
          },
          "events": {
            "type": 30
          },
          "constants": [
            {
              "name": "batched_calls_limit",
              "type": 4,
              "value": "0xaa2a0000",
              "docs": [
                " The limit on the number of batched calls."
              ]
            }
          ],
          "errors": {
            "type": 480
          },
          "index": 1
        },
        {
          "name": "Babe",
          "storage": {
            "prefix": "Babe",
            "items": [
              {
                "name": "EpochIndex",
                "modifier": "Default",
                "type": {
                  "plain": 11
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " Current epoch index."
                ]
              },
              {
                "name": "Authorities",
                "modifier": "Default",
                "type": {
                  "plain": 481
                },
                "fallback": "0x00",
                "docs": [
                  " Current epoch authorities."
                ]
              },
              {
                "name": "GenesisSlot",
                "modifier": "Default",
                "type": {
                  "plain": 160
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " The slot at which the first epoch actually started. This is 0",
                  " until the first block of the chain."
                ]
              },
              {
                "name": "CurrentSlot",
                "modifier": "Default",
                "type": {
                  "plain": 160
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " Current slot number."
                ]
              },
              {
                "name": "Randomness",
                "modifier": "Default",
                "type": {
                  "plain": 1
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " The epoch randomness for the *current* epoch.",
                  "",
                  " # Security",
                  "",
                  " This MUST NOT be used for gambling, as it can be influenced by a",
                  " malicious validator in the short term. It MAY be used in many",
                  " cryptographic protocols, however, so long as one remembers that this",
                  " (like everything else on-chain) it is public. For example, it can be",
                  " used where a number is needed that cannot have been chosen by an",
                  " adversary, for purposes such as public-coin zero-knowledge proofs."
                ]
              },
              {
                "name": "PendingEpochConfigChange",
                "modifier": "Optional",
                "type": {
                  "plain": 162
                },
                "fallback": "0x00",
                "docs": [
                  " Pending epoch configuration change that will be applied when the next epoch is enacted."
                ]
              },
              {
                "name": "NextRandomness",
                "modifier": "Default",
                "type": {
                  "plain": 1
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Next epoch randomness."
                ]
              },
              {
                "name": "NextAuthorities",
                "modifier": "Default",
                "type": {
                  "plain": 481
                },
                "fallback": "0x00",
                "docs": [
                  " Next epoch authorities."
                ]
              },
              {
                "name": "SegmentIndex",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Randomness under construction.",
                  "",
                  " We make a trade-off between storage accesses and list length.",
                  " We store the under-construction randomness in segments of up to",
                  " `UNDER_CONSTRUCTION_SEGMENT_LENGTH`.",
                  "",
                  " Once a segment reaches this length, we begin the next one.",
                  " We reset all segments and return to `0` at the beginning of every",
                  " epoch."
                ]
              },
              {
                "name": "UnderConstruction",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 484
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " TWOX-NOTE: `SegmentIndex` is an increasing integer, so this is okay."
                ]
              },
              {
                "name": "Initialized",
                "modifier": "Optional",
                "type": {
                  "plain": 486
                },
                "fallback": "0x00",
                "docs": [
                  " Temporary value (cleared at block finalization) which is `Some`",
                  " if per-block initialization has already been called for current block."
                ]
              },
              {
                "name": "AuthorVrfRandomness",
                "modifier": "Default",
                "type": {
                  "plain": 96
                },
                "fallback": "0x00",
                "docs": [
                  " This field should always be populated during block processing unless",
                  " secondary plain slots are enabled (which don't contain a VRF output).",
                  "",
                  " It is set in `on_finalize`, before it will contain the value from the last block."
                ]
              },
              {
                "name": "EpochStart",
                "modifier": "Default",
                "type": {
                  "plain": 95
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " The block numbers when the last and current epoch have started, respectively `N-1` and",
                  " `N`.",
                  " NOTE: We track this is in order to annotate the block number when a given pool of",
                  " entropy was fixed (i.e. it was known to chain observers). Since epochs are defined in",
                  " slots, which may be skipped, the block numbers may not line up with the slot numbers."
                ]
              },
              {
                "name": "Lateness",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " How late the current block is compared to its parent.",
                  "",
                  " This entry is populated as part of block execution and is cleaned up",
                  " on block finalization. Querying this storage entry outside of block",
                  " execution context should always yield zero."
                ]
              },
              {
                "name": "EpochConfig",
                "modifier": "Optional",
                "type": {
                  "plain": 492
                },
                "fallback": "0x00",
                "docs": [
                  " The configuration for the current epoch. Should never be `None` as it is initialized in",
                  " genesis."
                ]
              },
              {
                "name": "NextEpochConfig",
                "modifier": "Optional",
                "type": {
                  "plain": 492
                },
                "fallback": "0x00",
                "docs": [
                  " The configuration for the next epoch, `None` if the config will not change",
                  " (you can fallback to `EpochConfig` instead in that case)."
                ]
              },
              {
                "name": "SkippedEpochs",
                "modifier": "Default",
                "type": {
                  "plain": 493
                },
                "fallback": "0x00",
                "docs": [
                  " A list of the last 100 skipped epochs and the corresponding session index",
                  " when the epoch was skipped.",
                  "",
                  " This is only used for validating equivocation proofs. An equivocation proof",
                  " must contains a key-ownership proof for a given session, therefore we need a",
                  " way to tie together sessions and epoch indices, i.e. we need to validate that",
                  " a validator was the owner of a given key on a given session, and what the",
                  " active epoch index was during that session."
                ]
              }
            ]
          },
          "calls": {
            "type": 155
          },
          "events": null,
          "constants": [
            {
              "name": "EpochDuration",
              "type": 11,
              "value": "0xc800000000000000",
              "docs": [
                " The amount of time, in slots, that each epoch should last.",
                " NOTE: Currently it is not possible to change the epoch duration after",
                " the chain has started. Attempting to do so will brick block production."
              ]
            },
            {
              "name": "ExpectedBlockTime",
              "type": 11,
              "value": "0xb80b000000000000",
              "docs": [
                " The expected average block time at which BABE should be creating",
                " blocks. Since BABE is probabilistic it is not trivial to figure out",
                " what the expected average block time should be based on the slot",
                " duration and the security parameter `c` (where `1 - c` represents",
                " the probability of a slot being empty)."
              ]
            },
            {
              "name": "MaxAuthorities",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " Max number of authorities allowed"
              ]
            },
            {
              "name": "MaxNominators",
              "type": 4,
              "value": "0x40000000",
              "docs": [
                " The maximum number of nominators for each validator."
              ]
            }
          ],
          "errors": {
            "type": 496
          },
          "index": 2
        },
        {
          "name": "Timestamp",
          "storage": {
            "prefix": "Timestamp",
            "items": [
              {
                "name": "Now",
                "modifier": "Default",
                "type": {
                  "plain": 11
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " The current time for the current block."
                ]
              },
              {
                "name": "DidUpdate",
                "modifier": "Default",
                "type": {
                  "plain": 43
                },
                "fallback": "0x00",
                "docs": [
                  " Whether the timestamp has been updated in this block.",
                  "",
                  " This value is updated to `true` upon successful submission of a timestamp by a node.",
                  " It is then checked at the end of each block execution in the `on_finalize` hook."
                ]
              }
            ]
          },
          "calls": {
            "type": 165
          },
          "events": null,
          "constants": [
            {
              "name": "MinimumPeriod",
              "type": 11,
              "value": "0xdc05000000000000",
              "docs": [
                " The minimum period between blocks.",
                "",
                " Be aware that this is different to the *expected* period that the block production",
                " apparatus provides. Your chosen consensus system will generally work with this to",
                " determine a sensible block time. For example, in the Aura pallet it will be double this",
                " period on default settings."
              ]
            }
          ],
          "errors": null,
          "index": 3
        },
        {
          "name": "Authorship",
          "storage": {
            "prefix": "Authorship",
            "items": [
              {
                "name": "Author",
                "modifier": "Optional",
                "type": {
                  "plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " Author of current block."
                ]
              }
            ]
          },
          "calls": null,
          "events": null,
          "constants": [],
          "errors": null,
          "index": 4
        },
        {
          "name": "Indices",
          "storage": {
            "prefix": "Indices",
            "items": [
              {
                "name": "Accounts",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 497
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The lookup from index to account."
                ]
              }
            ]
          },
          "calls": {
            "type": 166
          },
          "events": {
            "type": 33
          },
          "constants": [
            {
              "name": "Deposit",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " The deposit needed for reserving an index."
              ]
            }
          ],
          "errors": {
            "type": 498
          },
          "index": 5
        },
        {
          "name": "Balances",
          "storage": {
            "prefix": "Balances",
            "items": [
              {
                "name": "TotalIssuance",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The total units issued in the system."
                ]
              },
              {
                "name": "InactiveIssuance",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The total units of outstanding deactivated balance in the system."
                ]
              },
              {
                "name": "Account",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 5
                  }
                },
                "fallback": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080",
                "docs": [
                  " The Balances pallet example of storing the balance of an account.",
                  "",
                  " # Example",
                  "",
                  " ```nocompile",
                  "  impl pallet_balances::Config for Runtime {",
                  "    type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>>",
                  "  }",
                  " ```",
                  "",
                  " You can also store the balance of an account in the `System` pallet.",
                  "",
                  " # Example",
                  "",
                  " ```nocompile",
                  "  impl pallet_balances::Config for Runtime {",
                  "   type AccountStore = System",
                  "  }",
                  " ```",
                  "",
                  " But this comes with tradeoffs, storing account balances in the system pallet stores",
                  " `frame_system` data alongside the account data contrary to storing account balances in the",
                  " `Balances` pallet, which uses a `StorageMap` to store balances data only.",
                  " NOTE: This is only used in the case that this pallet is used to store balances."
                ]
              },
              {
                "name": "Locks",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 499
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Any liquidity locks on some account balances.",
                  " NOTE: Should only be accessed when setting, changing and freeing a lock."
                ]
              },
              {
                "name": "Reserves",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 503
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Named reserves on some account balances."
                ]
              },
              {
                "name": "Holds",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 506
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Holds on account balances."
                ]
              },
              {
                "name": "Freezes",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 516
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Freeze locks on account balances."
                ]
              }
            ]
          },
          "calls": {
            "type": 169
          },
          "events": {
            "type": 34
          },
          "constants": [
            {
              "name": "ExistentialDeposit",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " The minimum amount required to keep an account open. MUST BE GREATER THAN ZERO!",
                "",
                " If you *really* need it to be zero, you can enable the feature `insecure_zero_ed` for",
                " this pallet. However, you do so at your own risk: this will open up a major DoS vector.",
                " In case you have multiple sources of provider references, you may also get unexpected",
                " behaviour if you set this to zero.",
                "",
                " Bottom line: Do yourself a favour and make it at least one!"
              ]
            },
            {
              "name": "MaxLocks",
              "type": 4,
              "value": "0x32000000",
              "docs": [
                " The maximum number of locks that should exist on an account.",
                " Not strictly enforced, but used for weight estimation."
              ]
            },
            {
              "name": "MaxReserves",
              "type": 4,
              "value": "0x32000000",
              "docs": [
                " The maximum number of named reserves that can exist on an account."
              ]
            },
            {
              "name": "MaxHolds",
              "type": 4,
              "value": "0x06000000",
              "docs": [
                " The maximum number of holds that can exist on an account at any time."
              ]
            },
            {
              "name": "MaxFreezes",
              "type": 4,
              "value": "0x01000000",
              "docs": [
                " The maximum number of individual freeze locks that can exist on an account at any time."
              ]
            }
          ],
          "errors": {
            "type": 521
          },
          "index": 6
        },
        {
          "name": "TransactionPayment",
          "storage": {
            "prefix": "TransactionPayment",
            "items": [
              {
                "name": "NextFeeMultiplier",
                "modifier": "Default",
                "type": {
                  "plain": 72
                },
                "fallback": "0x000064a7b3b6e00d0000000000000000",
                "docs": []
              },
              {
                "name": "StorageVersion",
                "modifier": "Default",
                "type": {
                  "plain": 522
                },
                "fallback": "0x00",
                "docs": []
              }
            ]
          },
          "calls": null,
          "events": {
            "type": 36
          },
          "constants": [
            {
              "name": "OperationalFeeMultiplier",
              "type": 2,
              "value": "0x05",
              "docs": [
                " A fee multiplier for `Operational` extrinsics to compute \"virtual tip\" to boost their",
                " `priority`",
                "",
                " This value is multiplied by the `final_fee` to obtain a \"virtual tip\" that is later",
                " added to a tip component in regular `priority` calculations.",
                " It means that a `Normal` transaction can front-run a similarly-sized `Operational`",
                " extrinsic (with no tip), by including a tip value greater than the virtual tip.",
                "",
                " ```rust,ignore",
                " // For `Normal`",
                " let priority = priority_calc(tip);",
                "",
                " // For `Operational`",
                " let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;",
                " let priority = priority_calc(tip + virtual_tip);",
                " ```",
                "",
                " Note that since we use `final_fee` the multiplier applies also to the regular `tip`",
                " sent with the transaction. So, not only does the transaction get a priority bump based",
                " on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`",
                " transactions."
              ]
            }
          ],
          "errors": null,
          "index": 7
        },
        {
          "name": "AssetTxPayment",
          "storage": null,
          "calls": null,
          "events": {
            "type": 37
          },
          "constants": [],
          "errors": null,
          "index": 8
        },
        {
          "name": "AssetConversionTxPayment",
          "storage": null,
          "calls": null,
          "events": {
            "type": 39
          },
          "constants": [],
          "errors": null,
          "index": 9
        },
        {
          "name": "ElectionProviderMultiPhase",
          "storage": {
            "prefix": "ElectionProviderMultiPhase",
            "items": [
              {
                "name": "Round",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x01000000",
                "docs": [
                  " Internal counter for the number of rounds.",
                  "",
                  " This is useful for de-duplication of transactions submitted to the pool, and general",
                  " diagnostics of the pallet.",
                  "",
                  " This is merely incremented once per every time that an upstream `elect` is called."
                ]
              },
              {
                "name": "CurrentPhase",
                "modifier": "Default",
                "type": {
                  "plain": 45
                },
                "fallback": "0x00",
                "docs": [
                  " Current phase."
                ]
              },
              {
                "name": "QueuedSolution",
                "modifier": "Optional",
                "type": {
                  "plain": 523
                },
                "fallback": "0x00",
                "docs": [
                  " Current best solution, signed or unsigned, queued to be returned upon `elect`.",
                  "",
                  " Always sorted by score."
                ]
              },
              {
                "name": "Snapshot",
                "modifier": "Optional",
                "type": {
                  "plain": 525
                },
                "fallback": "0x00",
                "docs": [
                  " Snapshot data of the round.",
                  "",
                  " This is created at the beginning of the signed phase and cleared upon calling `elect`."
                ]
              },
              {
                "name": "DesiredTargets",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Desired number of targets to elect for this round.",
                  "",
                  " Only exists when [`Snapshot`] is present."
                ]
              },
              {
                "name": "SnapshotMetadata",
                "modifier": "Optional",
                "type": {
                  "plain": 223
                },
                "fallback": "0x00",
                "docs": [
                  " The metadata of the [`RoundSnapshot`]",
                  "",
                  " Only exists when [`Snapshot`] is present."
                ]
              },
              {
                "name": "SignedSubmissionNextIndex",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The next index to be assigned to an incoming signed submission.",
                  "",
                  " Every accepted submission is assigned a unique index; that index is bound to that particular",
                  " submission for the duration of the election. On election finalization, the next index is",
                  " reset to 0.",
                  "",
                  " We can't just use `SignedSubmissionIndices.len()`, because that's a bounded set; past its",
                  " capacity, it will simply saturate. We can't just iterate over `SignedSubmissionsMap`,",
                  " because iteration is slow. Instead, we store the value here."
                ]
              },
              {
                "name": "SignedSubmissionIndices",
                "modifier": "Default",
                "type": {
                  "plain": 529
                },
                "fallback": "0x00",
                "docs": [
                  " A sorted, bounded vector of `(score, block_number, index)`, where each `index` points to a",
                  " value in `SignedSubmissions`.",
                  "",
                  " We never need to process more than a single signed submission at a time. Signed submissions",
                  " can be quite large, so we're willing to pay the cost of multiple database accesses to access",
                  " them one at a time instead of reading and decoding all of them at once."
                ]
              },
              {
                "name": "SignedSubmissionsMap",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 532
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Unchecked, signed solutions.",
                  "",
                  " Together with `SubmissionIndices`, this stores a bounded set of `SignedSubmissions` while",
                  " allowing us to keep only a single one in memory at a time.",
                  "",
                  " Twox note: the key of the map is an auto-incrementing index which users cannot inspect or",
                  " affect; we shouldn't need a cryptographically secure hasher."
                ]
              },
              {
                "name": "MinimumUntrustedScore",
                "modifier": "Optional",
                "type": {
                  "plain": 44
                },
                "fallback": "0x00",
                "docs": [
                  " The minimum score that each 'untrusted' solution must attain in order to be considered",
                  " feasible.",
                  "",
                  " Can be set via `set_minimum_untrusted_score`."
                ]
              }
            ]
          },
          "calls": {
            "type": 170
          },
          "events": {
            "type": 40
          },
          "constants": [
            {
              "name": "UnsignedPhase",
              "type": 4,
              "value": "0x32000000",
              "docs": [
                " Duration of the unsigned phase."
              ]
            },
            {
              "name": "SignedPhase",
              "type": 4,
              "value": "0x32000000",
              "docs": [
                " Duration of the signed phase."
              ]
            },
            {
              "name": "BetterSignedThreshold",
              "type": 49,
              "value": "0x00000000",
              "docs": [
                " The minimum amount of improvement to the solution score that defines a solution as",
                " \"better\" in the Signed phase."
              ]
            },
            {
              "name": "BetterUnsignedThreshold",
              "type": 49,
              "value": "0xa0860100",
              "docs": [
                " The minimum amount of improvement to the solution score that defines a solution as",
                " \"better\" in the Unsigned phase."
              ]
            },
            {
              "name": "OffchainRepeat",
              "type": 4,
              "value": "0x05000000",
              "docs": [
                " The repeat threshold of the offchain worker.",
                "",
                " For example, if it is 5, that means that at least 5 blocks will elapse between attempts",
                " to submit the worker's solution."
              ]
            },
            {
              "name": "MinerTxPriority",
              "type": 11,
              "value": "0xfeffffffffffff7f",
              "docs": [
                " The priority of the unsigned transaction submitted in the unsigned-phase"
              ]
            },
            {
              "name": "SignedMaxSubmissions",
              "type": 4,
              "value": "0x0a000000",
              "docs": [
                " Maximum number of signed submissions that can be queued.",
                "",
                " It is best to avoid adjusting this during an election, as it impacts downstream data",
                " structures. In particular, `SignedSubmissionIndices<T>` is bounded on this value. If you",
                " update this value during an election, you _must_ ensure that",
                " `SignedSubmissionIndices.len()` is less than or equal to the new value. Otherwise,",
                " attempts to submit new solutions may cause a runtime panic."
              ]
            },
            {
              "name": "SignedMaxWeight",
              "type": 9,
              "value": "0x0b1089578f2e011366666666666666a6",
              "docs": [
                " Maximum weight of a signed solution.",
                "",
                " If [`Config::MinerConfig`] is being implemented to submit signed solutions (outside of",
                " this pallet), then [`MinerConfig::solution_weight`] is used to compare against",
                " this value."
              ]
            },
            {
              "name": "SignedMaxRefunds",
              "type": 4,
              "value": "0x03000000",
              "docs": [
                " The maximum amount of unchecked solutions to refund the call fee for."
              ]
            },
            {
              "name": "SignedRewardBase",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " Base reward for a signed solution"
              ]
            },
            {
              "name": "SignedDepositByte",
              "type": 6,
              "value": "0x0010a5d4e80000000000000000000000",
              "docs": [
                " Per-byte deposit for a signed solution."
              ]
            },
            {
              "name": "SignedDepositWeight",
              "type": 6,
              "value": "0x00000000000000000000000000000000",
              "docs": [
                " Per-weight deposit for a signed solution."
              ]
            },
            {
              "name": "MaxWinners",
              "type": 4,
              "value": "0xe8030000",
              "docs": [
                " The maximum number of winners that can be elected by this `ElectionProvider`",
                " implementation.",
                "",
                " Note: This must always be greater or equal to `T::DataProvider::desired_targets()`."
              ]
            },
            {
              "name": "MinerMaxLength",
              "type": 4,
              "value": "0x00003600",
              "docs": []
            },
            {
              "name": "MinerMaxWeight",
              "type": 9,
              "value": "0x0b1089578f2e011366666666666666a6",
              "docs": []
            },
            {
              "name": "MinerMaxVotesPerVoter",
              "type": 4,
              "value": "0x10000000",
              "docs": []
            },
            {
              "name": "MinerMaxWinners",
              "type": 4,
              "value": "0xe8030000",
              "docs": []
            }
          ],
          "errors": {
            "type": 533
          },
          "index": 10
        },
        {
          "name": "Staking",
          "storage": {
            "prefix": "Staking",
            "items": [
              {
                "name": "ValidatorCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The ideal number of active validators."
                ]
              },
              {
                "name": "MinimumValidatorCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Minimum number of staking participants before emergency conditions are imposed."
                ]
              },
              {
                "name": "Invulnerables",
                "modifier": "Default",
                "type": {
                  "plain": 90
                },
                "fallback": "0x00",
                "docs": [
                  " Any validators that may never be slashed or forcibly kicked. It's a Vec since they're",
                  " easy to initialize and the performance hit is minimal (we expect no more than four",
                  " invulnerables) and restricted to testnets."
                ]
              },
              {
                "name": "Bonded",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 0
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Map from all locked \"stash\" accounts to the controller account.",
                  "",
                  " TWOX-NOTE: SAFE since `AccountId` is a secure hash."
                ]
              },
              {
                "name": "MinNominatorBond",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The minimum active bond to become and maintain the role of a nominator."
                ]
              },
              {
                "name": "MinValidatorBond",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The minimum active bond to become and maintain the role of a validator."
                ]
              },
              {
                "name": "MinimumActiveStake",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The minimum active nominator stake of the last successful election."
                ]
              },
              {
                "name": "MinCommission",
                "modifier": "Default",
                "type": {
                  "plain": 49
                },
                "fallback": "0x00000000",
                "docs": [
                  " The minimum amount of commission that validators can set.",
                  "",
                  " If set to `0`, no limit exists."
                ]
              },
              {
                "name": "Ledger",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 534
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Map from all (unlocked) \"controller\" accounts to the info regarding the staking.",
                  "",
                  " Note: All the reads and mutations to this storage *MUST* be done through the methods exposed",
                  " by [`StakingLedger`] to ensure data and lock consistency."
                ]
              },
              {
                "name": "Payee",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 48
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Where the reward payment should be made. Keyed by stash.",
                  "",
                  " TWOX-NOTE: SAFE since `AccountId` is a secure hash."
                ]
              },
              {
                "name": "Validators",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 50
                  }
                },
                "fallback": "0x0000",
                "docs": [
                  " The map from (wannabe) validator stash key to the preferences of that validator.",
                  "",
                  " TWOX-NOTE: SAFE since `AccountId` is a secure hash."
                ]
              },
              {
                "name": "CounterForValidators",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "MaxValidatorsCount",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " The maximum validator count before we stop allowing new validators to join.",
                  "",
                  " When this value is not set, no limits are enforced."
                ]
              },
              {
                "name": "Nominators",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 539
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The map from nominator stash key to their nomination preferences, namely the validators that",
                  " they wish to support.",
                  "",
                  " Note that the keys of this storage map might become non-decodable in case the",
                  " account's [`NominationsQuota::MaxNominations`] configuration is decreased.",
                  " In this rare case, these nominators",
                  " are still existent in storage, their key is correct and retrievable (i.e. `contains_key`",
                  " indicates that they exist), but their value cannot be decoded. Therefore, the non-decodable",
                  " nominators will effectively not-exist, until they re-submit their preferences such that it",
                  " is within the bounds of the newly set `Config::MaxNominations`.",
                  "",
                  " This implies that `::iter_keys().count()` and `::iter().count()` might return different",
                  " values for this map. Moreover, the main `::count()` is aligned with the former, namely the",
                  " number of keys that exist.",
                  "",
                  " Lastly, if any of the nominators become non-decodable, they can be chilled immediately via",
                  " [`Call::chill_other`] dispatchable by anyone.",
                  "",
                  " TWOX-NOTE: SAFE since `AccountId` is a secure hash."
                ]
              },
              {
                "name": "CounterForNominators",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "MaxNominatorsCount",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " The maximum nominator count before we stop allowing new validators to join.",
                  "",
                  " When this value is not set, no limits are enforced."
                ]
              },
              {
                "name": "CurrentEra",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " The current era index.",
                  "",
                  " This is the latest planned era, depending on how the Session pallet queues the validator",
                  " set, it might be active or not."
                ]
              },
              {
                "name": "ActiveEra",
                "modifier": "Optional",
                "type": {
                  "plain": 540
                },
                "fallback": "0x00",
                "docs": [
                  " The active era information, it holds index and start.",
                  "",
                  " The active era is the era being currently rewarded. Validator set of this era must be",
                  " equal to [`SessionInterface::validators`]."
                ]
              },
              {
                "name": "ErasStartSessionIndex",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The session index at which the era start for the last [`Config::HistoryDepth`] eras.",
                  "",
                  " Note: This tracks the starting session (i.e. session index when era start being active)",
                  " for the eras in `[CurrentEra - HISTORY_DEPTH, CurrentEra]`."
                ]
              },
              {
                "name": "ErasStakers",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 542,
                    "value": 82
                  }
                },
                "fallback": "0x000000",
                "docs": [
                  " Exposure of validator at era.",
                  "",
                  " This is keyed first by the era index to allow bulk deletion and then the stash account.",
                  "",
                  " Is it removed after [`Config::HistoryDepth`] eras.",
                  " If stakers hasn't been set or has been removed then empty exposure is returned.",
                  "",
                  " Note: Deprecated since v14. Use `EraInfo` instead to work with exposures."
                ]
              },
              {
                "name": "ErasStakersOverview",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 542,
                    "value": 543
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Summary of validator exposure at a given era.",
                  "",
                  " This contains the total stake in support of the validator and their own stake. In addition,",
                  " it can also be used to get the number of nominators backing this validator and the number of",
                  " exposure pages they are divided into. The page count is useful to determine the number of",
                  " pages of rewards that needs to be claimed.",
                  "",
                  " This is keyed first by the era index to allow bulk deletion and then the stash account.",
                  " Should only be accessed through `EraInfo`.",
                  "",
                  " Is it removed after [`Config::HistoryDepth`] eras.",
                  " If stakers hasn't been set or has been removed then empty overview is returned."
                ]
              },
              {
                "name": "ErasStakersClipped",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 542,
                    "value": 82
                  }
                },
                "fallback": "0x000000",
                "docs": [
                  " Clipped Exposure of validator at era.",
                  "",
                  " Note: This is deprecated, should be used as read-only and will be removed in the future.",
                  " New `Exposure`s are stored in a paged manner in `ErasStakersPaged` instead.",
                  "",
                  " This is similar to [`ErasStakers`] but number of nominators exposed is reduced to the",
                  " `T::MaxExposurePageSize` biggest stakers.",
                  " (Note: the field `total` and `own` of the exposure remains unchanged).",
                  " This is used to limit the i/o cost for the nominator payout.",
                  "",
                  " This is keyed fist by the era index to allow bulk deletion and then the stash account.",
                  "",
                  " It is removed after [`Config::HistoryDepth`] eras.",
                  " If stakers hasn't been set or has been removed then empty exposure is returned.",
                  "",
                  " Note: Deprecated since v14. Use `EraInfo` instead to work with exposures."
                ]
              },
              {
                "name": "ErasStakersPaged",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 544,
                    "value": 545
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Paginated exposure of a validator at given era.",
                  "",
                  " This is keyed first by the era index to allow bulk deletion, then stash account and finally",
                  " the page. Should only be accessed through `EraInfo`.",
                  "",
                  " This is cleared after [`Config::HistoryDepth`] eras."
                ]
              },
              {
                "name": "ClaimedRewards",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 542,
                    "value": 115
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " History of claimed paged rewards by era and validator.",
                  "",
                  " This is keyed by era and validator stash which maps to the set of page indexes which have",
                  " been claimed.",
                  "",
                  " It is removed after [`Config::HistoryDepth`] eras."
                ]
              },
              {
                "name": "ErasValidatorPrefs",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 542,
                    "value": 50
                  }
                },
                "fallback": "0x0000",
                "docs": [
                  " Similar to `ErasStakers`, this holds the preferences of validators.",
                  "",
                  " This is keyed first by the era index to allow bulk deletion and then the stash account.",
                  "",
                  " Is it removed after [`Config::HistoryDepth`] eras."
                ]
              },
              {
                "name": "ErasValidatorReward",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 6
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The total validator era payout for the last [`Config::HistoryDepth`] eras.",
                  "",
                  " Eras that haven't finished yet or has been removed doesn't have reward."
                ]
              },
              {
                "name": "ErasRewardPoints",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 546
                  }
                },
                "fallback": "0x0000000000",
                "docs": [
                  " Rewards for the last [`Config::HistoryDepth`] eras.",
                  " If reward hasn't been set or has been removed then 0 reward is returned."
                ]
              },
              {
                "name": "ErasTotalStake",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 6
                  }
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The total amount staked for the last [`Config::HistoryDepth`] eras.",
                  " If total hasn't been set or has been removed then 0 stake is returned."
                ]
              },
              {
                "name": "ForceEra",
                "modifier": "Default",
                "type": {
                  "plain": 52
                },
                "fallback": "0x00",
                "docs": [
                  " Mode of era forcing."
                ]
              },
              {
                "name": "SlashRewardFraction",
                "modifier": "Default",
                "type": {
                  "plain": 49
                },
                "fallback": "0x00000000",
                "docs": [
                  " The percentage of the slash that is distributed to reporters.",
                  "",
                  " The rest of the slashed value is handled by the `Slash`."
                ]
              },
              {
                "name": "CanceledSlashPayout",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The amount of currency given to reporters of a slash event which was",
                  " canceled by extraordinary circumstances (e.g. governance)."
                ]
              },
              {
                "name": "UnappliedSlashes",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 550
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " All unapplied slashes that are queued for later."
                ]
              },
              {
                "name": "BondedEras",
                "modifier": "Default",
                "type": {
                  "plain": 466
                },
                "fallback": "0x00",
                "docs": [
                  " A mapping from still-bonded eras to the first session index of that era.",
                  "",
                  " Must contains information for eras for the range:",
                  " `[active_era - bounding_duration; active_era]`"
                ]
              },
              {
                "name": "ValidatorSlashInEra",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 542,
                    "value": 552
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " All slashing events on validators, mapped by era to the highest slash proportion",
                  " and slash value of the era."
                ]
              },
              {
                "name": "NominatorSlashInEra",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 542,
                    "value": 6
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " All slashing events on nominators, mapped by era to the highest slash value of the era."
                ]
              },
              {
                "name": "SlashingSpans",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 553
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Slashing spans for stash accounts."
                ]
              },
              {
                "name": "SpanSlash",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 549,
                    "value": 554
                  }
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Records information about the maximum slash of a stash within a slashing span,",
                  " as well as how much reward has been paid out."
                ]
              },
              {
                "name": "CurrentPlannedSession",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The last planned session scheduled by the session pallet.",
                  "",
                  " This is basically in sync with the call to [`pallet_session::SessionManager::new_session`]."
                ]
              },
              {
                "name": "OffendingValidators",
                "modifier": "Default",
                "type": {
                  "plain": 555
                },
                "fallback": "0x00",
                "docs": [
                  " Indices of validators that have offended in the active era and whether they are currently",
                  " disabled.",
                  "",
                  " This value should be a superset of disabled validators since not all offences lead to the",
                  " validator being disabled (if there was no slash). This is needed to track the percentage of",
                  " validators that have offended in the current era, ensuring a new era is forced if",
                  " `OffendingValidatorsThreshold` is reached. The vec is always kept sorted so that we can find",
                  " whether a given validator has previously offended using binary search. It gets cleared when",
                  " the era ends."
                ]
              },
              {
                "name": "ChillThreshold",
                "modifier": "Optional",
                "type": {
                  "plain": 230
                },
                "fallback": "0x00",
                "docs": [
                  " The threshold for when users can start calling `chill_other` for other validators /",
                  " nominators. The threshold is compared to the actual number of validators / nominators",
                  " (`CountFor*`) in the system compared to the configured max (`Max*Count`)."
                ]
              }
            ]
          },
          "calls": {
            "type": 228
          },
          "events": {
            "type": 47
          },
          "constants": [
            {
              "name": "HistoryDepth",
              "type": 4,
              "value": "0x54000000",
              "docs": [
                " Number of eras to keep in history.",
                "",
                " Following information is kept for eras in `[current_era -",
                " HistoryDepth, current_era]`: `ErasStakers`, `ErasStakersClipped`,",
                " `ErasValidatorPrefs`, `ErasValidatorReward`, `ErasRewardPoints`,",
                " `ErasTotalStake`, `ErasStartSessionIndex`, `ClaimedRewards`, `ErasStakersPaged`,",
                " `ErasStakersOverview`.",
                "",
                " Must be more than the number of eras delayed by session.",
                " I.e. active era must always be in history. I.e. `active_era >",
                " current_era - history_depth` must be guaranteed.",
                "",
                " If migrating an existing pallet from storage value to config value,",
                " this should be set to same value or greater as in storage.",
                "",
                " Note: `HistoryDepth` is used as the upper bound for the `BoundedVec`",
                " item `StakingLedger.legacy_claimed_rewards`. Setting this value lower than",
                " the existing value can lead to inconsistencies in the",
                " `StakingLedger` and will need to be handled properly in a migration.",
                " The test `reducing_history_depth_abrupt` shows this effect."
              ]
            },
            {
              "name": "SessionsPerEra",
              "type": 4,
              "value": "0x06000000",
              "docs": [
                " Number of sessions per era."
              ]
            },
            {
              "name": "BondingDuration",
              "type": 4,
              "value": "0xa0020000",
              "docs": [
                " Number of eras that staked funds must remain bonded for."
              ]
            },
            {
              "name": "SlashDeferDuration",
              "type": 4,
              "value": "0xa8000000",
              "docs": [
                " Number of eras that slashes are deferred by, after computation.",
                "",
                " This should be less than the bonding duration. Set to 0 if slashes",
                " should be applied immediately, without opportunity for intervention."
              ]
            },
            {
              "name": "MaxExposurePageSize",
              "type": 4,
              "value": "0x00010000",
              "docs": [
                " The maximum size of each `T::ExposurePage`.",
                "",
                " An `ExposurePage` is weakly bounded to a maximum of `MaxExposurePageSize`",
                " nominators.",
                "",
                " For older non-paged exposure, a reward payout was restricted to the top",
                " `MaxExposurePageSize` nominators. This is to limit the i/o cost for the",
                " nominator payout.",
                "",
                " Note: `MaxExposurePageSize` is used to bound `ClaimedRewards` and is unsafe to reduce",
                " without handling it in a migration."
              ]
            },
            {
              "name": "MaxUnlockingChunks",
              "type": 4,
              "value": "0x20000000",
              "docs": [
                " The maximum number of `unlocking` chunks a [`StakingLedger`] can",
                " have. Effectively determines how many unique eras a staker may be",
                " unbonding in.",
                "",
                " Note: `MaxUnlockingChunks` is used as the upper bound for the",
                " `BoundedVec` item `StakingLedger.unlocking`. Setting this value",
                " lower than the existing value can lead to inconsistencies in the",
                " `StakingLedger` and will need to be handled properly in a runtime",
                " migration. The test `reducing_max_unlocking_chunks_abrupt` shows",
                " this effect."
              ]
            }
          ],
          "errors": {
            "type": 557
          },
          "index": 11
        },
        {
          "name": "Session",
          "storage": {
            "prefix": "Session",
            "items": [
              {
                "name": "Validators",
                "modifier": "Default",
                "type": {
                  "plain": 90
                },
                "fallback": "0x00",
                "docs": [
                  " The current set of validators."
                ]
              },
              {
                "name": "CurrentIndex",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Current index of the session."
                ]
              },
              {
                "name": "QueuedChanged",
                "modifier": "Default",
                "type": {
                  "plain": 43
                },
                "fallback": "0x00",
                "docs": [
                  " True if the underlying economic identities or weighting behind the validators",
                  " has changed in the queued validator set."
                ]
              },
              {
                "name": "QueuedKeys",
                "modifier": "Default",
                "type": {
                  "plain": 558
                },
                "fallback": "0x00",
                "docs": [
                  " The queued keys for the next session. When the next session begins, these keys",
                  " will be used to determine the validator's session keys."
                ]
              },
              {
                "name": "DisabledValidators",
                "modifier": "Default",
                "type": {
                  "plain": 115
                },
                "fallback": "0x00",
                "docs": [
                  " Indices of disabled validators.",
                  "",
                  " The vec is always kept sorted so that we can find whether a given validator is",
                  " disabled using binary search. It gets cleared when `on_session_ending` returns",
                  " a new set of identities."
                ]
              },
              {
                "name": "NextKeys",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 236
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The next session keys for a validator."
                ]
              },
              {
                "name": "KeyOwner",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 560,
                    "value": 0
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The owner of a key. The key is the `KeyTypeId` + the encoded key."
                ]
              }
            ]
          },
          "calls": {
            "type": 235
          },
          "events": {
            "type": 53
          },
          "constants": [],
          "errors": {
            "type": 562
          },
          "index": 12
        },
        {
          "name": "Democracy",
          "storage": {
            "prefix": "Democracy",
            "items": [
              {
                "name": "PublicPropCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The number of (public) proposals that have been made so far."
                ]
              },
              {
                "name": "PublicProps",
                "modifier": "Default",
                "type": {
                  "plain": 563
                },
                "fallback": "0x00",
                "docs": [
                  " The public proposals. Unsorted. The second item is the proposal."
                ]
              },
              {
                "name": "DepositOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 566
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Those who have locked a deposit.",
                  "",
                  " TWOX-NOTE: Safe, as increasing integer keys are safe."
                ]
              },
              {
                "name": "ReferendumCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The next free referendum index, aka the number of referenda started so far."
                ]
              },
              {
                "name": "LowestUnbaked",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The lowest referendum index representing an unbaked referendum. Equal to",
                  " `ReferendumCount` if there isn't a unbaked referendum."
                ]
              },
              {
                "name": "ReferendumInfoOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 568
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Information concerning any given referendum.",
                  "",
                  " TWOX-NOTE: SAFE as indexes are not under an attacker’s control."
                ]
              },
              {
                "name": "VotingOf",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 571
                  }
                },
                "fallback": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " All votes for a particular voter. We store the balance for the number of votes that we",
                  " have recorded. The second item is the total amount of delegations, that will be added.",
                  "",
                  " TWOX-NOTE: SAFE as `AccountId`s are crypto hashes anyway."
                ]
              },
              {
                "name": "LastTabledWasExternal",
                "modifier": "Default",
                "type": {
                  "plain": 43
                },
                "fallback": "0x00",
                "docs": [
                  " True if the last referendum tabled was submitted externally. False if it was a public",
                  " proposal."
                ]
              },
              {
                "name": "NextExternal",
                "modifier": "Optional",
                "type": {
                  "plain": 577
                },
                "fallback": "0x00",
                "docs": [
                  " The referendum to be tabled whenever it would be valid to table an external proposal.",
                  " This happens when a referendum needs to be tabled and one of two conditions are met:",
                  " - `LastTabledWasExternal` is `false`; or",
                  " - `PublicProps` is empty."
                ]
              },
              {
                "name": "Blacklist",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 578
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A record of who vetoed what. Maps proposal hash to a possible existent block number",
                  " (until when it may not be resubmitted) and who vetoed it."
                ]
              },
              {
                "name": "Cancellations",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 43
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Record of all proposals that have been subject to emergency cancellation."
                ]
              },
              {
                "name": "MetadataOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 58,
                    "value": 12
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " General information concerning any proposal or referendum.",
                  " The `Hash` refers to the preimage of the `Preimages` provider which can be a JSON",
                  " dump or IPFS hash of a JSON file.",
                  "",
                  " Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove)",
                  " large preimages."
                ]
              }
            ]
          },
          "calls": {
            "type": 239
          },
          "events": {
            "type": 54
          },
          "constants": [
            {
              "name": "EnactmentPeriod",
              "type": 4,
              "value": "0x002f0d00",
              "docs": [
                " The period between a proposal being approved and enacted.",
                "",
                " It should generally be a little more than the unstake period to ensure that",
                " voting stakers have an opportunity to remove themselves from the system in the case",
                " where they are on the losing side of a vote."
              ]
            },
            {
              "name": "LaunchPeriod",
              "type": 4,
              "value": "0x004e0c00",
              "docs": [
                " How often (in blocks) new public referenda are launched."
              ]
            },
            {
              "name": "VotingPeriod",
              "type": 4,
              "value": "0x004e0c00",
              "docs": [
                " How often (in blocks) to check for new votes."
              ]
            },
            {
              "name": "VoteLockingPeriod",
              "type": 4,
              "value": "0x002f0d00",
              "docs": [
                " The minimum period of vote locking.",
                "",
                " It should be no shorter than enactment period to ensure that in the case of an approval,",
                " those successful voters are locked into the consequences that their votes entail."
              ]
            },
            {
              "name": "MinimumDeposit",
              "type": 6,
              "value": "0x0000c16ff28623000000000000000000",
              "docs": [
                " The minimum amount to be used as a deposit for a public referendum proposal."
              ]
            },
            {
              "name": "InstantAllowed",
              "type": 43,
              "value": "0x01",
              "docs": [
                " Indicator for whether an emergency origin is even allowed to happen. Some chains may",
                " want to set this permanently to `false`, others may want to condition it on things such",
                " as an upgrade having happened recently."
              ]
            },
            {
              "name": "FastTrackVotingPeriod",
              "type": 4,
              "value": "0x80510100",
              "docs": [
                " Minimum voting period allowed for a fast-track referendum."
              ]
            },
            {
              "name": "CooloffPeriod",
              "type": 4,
              "value": "0x004e0c00",
              "docs": [
                " Period in blocks where an external proposal may not be re-submitted after being vetoed."
              ]
            },
            {
              "name": "MaxVotes",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum number of votes for an account.",
                "",
                " Also used to compute weight, an overly big value can",
                " lead to extrinsic with very big weight: see `delegate` for instance."
              ]
            },
            {
              "name": "MaxProposals",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum number of public proposals that can exist at any time."
              ]
            },
            {
              "name": "MaxDeposits",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum number of deposits a public proposal may have at any time."
              ]
            },
            {
              "name": "MaxBlacklisted",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum number of items which can be blacklisted."
              ]
            }
          ],
          "errors": {
            "type": 579
          },
          "index": 13
        },
        {
          "name": "Council",
          "storage": {
            "prefix": "Council",
            "items": [
              {
                "name": "Proposals",
                "modifier": "Default",
                "type": {
                  "plain": 580
                },
                "fallback": "0x00",
                "docs": [
                  " The hashes of the active proposals."
                ]
              },
              {
                "name": "ProposalOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 142
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Actual proposal for a given hash, if it's current."
                ]
              },
              {
                "name": "Voting",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 581
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Votes on a given proposal, if it is ongoing."
                ]
              },
              {
                "name": "ProposalCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Proposals so far."
                ]
              },
              {
                "name": "Members",
                "modifier": "Default",
                "type": {
                  "plain": 90
                },
                "fallback": "0x00",
                "docs": [
                  " The current members of the collective. This is stored sorted (just by value)."
                ]
              },
              {
                "name": "Prime",
                "modifier": "Optional",
                "type": {
                  "plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " The prime member that helps determine the default vote behavior in case of absentations."
                ]
              }
            ]
          },
          "calls": {
            "type": 242
          },
          "events": {
            "type": 59
          },
          "constants": [
            {
              "name": "MaxProposalWeight",
              "type": 9,
              "value": "0x070010a5d4e813ffffffffffffff7f",
              "docs": [
                " The maximum weight of a dispatch call that can be proposed and executed."
              ]
            }
          ],
          "errors": {
            "type": 582
          },
          "index": 14
        },
        {
          "name": "TechnicalCommittee",
          "storage": {
            "prefix": "TechnicalCommittee",
            "items": [
              {
                "name": "Proposals",
                "modifier": "Default",
                "type": {
                  "plain": 583
                },
                "fallback": "0x00",
                "docs": [
                  " The hashes of the active proposals."
                ]
              },
              {
                "name": "ProposalOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 142
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Actual proposal for a given hash, if it's current."
                ]
              },
              {
                "name": "Voting",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 581
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Votes on a given proposal, if it is ongoing."
                ]
              },
              {
                "name": "ProposalCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Proposals so far."
                ]
              },
              {
                "name": "Members",
                "modifier": "Default",
                "type": {
                  "plain": 90
                },
                "fallback": "0x00",
                "docs": [
                  " The current members of the collective. This is stored sorted (just by value)."
                ]
              },
              {
                "name": "Prime",
                "modifier": "Optional",
                "type": {
                  "plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " The prime member that helps determine the default vote behavior in case of absentations."
                ]
              }
            ]
          },
          "calls": {
            "type": 243
          },
          "events": {
            "type": 60
          },
          "constants": [
            {
              "name": "MaxProposalWeight",
              "type": 9,
              "value": "0x070010a5d4e813ffffffffffffff7f",
              "docs": [
                " The maximum weight of a dispatch call that can be proposed and executed."
              ]
            }
          ],
          "errors": {
            "type": 584
          },
          "index": 15
        },
        {
          "name": "Elections",
          "storage": {
            "prefix": "Elections",
            "items": [
              {
                "name": "Members",
                "modifier": "Default",
                "type": {
                  "plain": 585
                },
                "fallback": "0x00",
                "docs": [
                  " The current elected members.",
                  "",
                  " Invariant: Always sorted based on account id."
                ]
              },
              {
                "name": "RunnersUp",
                "modifier": "Default",
                "type": {
                  "plain": 585
                },
                "fallback": "0x00",
                "docs": [
                  " The current reserved runners-up.",
                  "",
                  " Invariant: Always sorted based on rank (worse to best). Upon removal of a member, the",
                  " last (i.e. _best_) runner-up will be replaced."
                ]
              },
              {
                "name": "Candidates",
                "modifier": "Default",
                "type": {
                  "plain": 62
                },
                "fallback": "0x00",
                "docs": [
                  " The present candidate list. A current member or runner-up can never enter this vector",
                  " and is always implicitly assumed to be a candidate.",
                  "",
                  " Second element is the deposit.",
                  "",
                  " Invariant: Always sorted based on account id."
                ]
              },
              {
                "name": "ElectionRounds",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The total number of vote rounds that have happened, excluding the upcoming one."
                ]
              },
              {
                "name": "Voting",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 587
                  }
                },
                "fallback": "0x000000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Votes and locked stake of a particular voter.",
                  "",
                  " TWOX-NOTE: SAFE as `AccountId` is a crypto hash."
                ]
              }
            ]
          },
          "calls": {
            "type": 244
          },
          "events": {
            "type": 61
          },
          "constants": [
            {
              "name": "PalletId",
              "type": 281,
              "value": "0x706872656c656374",
              "docs": [
                " Identifier for the elections-phragmen pallet's lock"
              ]
            },
            {
              "name": "CandidacyBond",
              "type": 6,
              "value": "0x0080c6a47e8d03000000000000000000",
              "docs": [
                " How much should be locked up in order to submit one's candidacy."
              ]
            },
            {
              "name": "VotingBondBase",
              "type": 6,
              "value": "0x00f0436de36a01000000000000000000",
              "docs": [
                " Base deposit associated with voting.",
                "",
                " This should be sensibly high to economically ensure the pallet cannot be attacked by",
                " creating a gigantic number of votes."
              ]
            },
            {
              "name": "VotingBondFactor",
              "type": 6,
              "value": "0x0000cc7b9fae00000000000000000000",
              "docs": [
                " The amount of bond that need to be locked for each vote (32 bytes)."
              ]
            },
            {
              "name": "DesiredMembers",
              "type": 4,
              "value": "0x0d000000",
              "docs": [
                " Number of members to elect."
              ]
            },
            {
              "name": "DesiredRunnersUp",
              "type": 4,
              "value": "0x07000000",
              "docs": [
                " Number of runners_up to keep."
              ]
            },
            {
              "name": "TermDuration",
              "type": 4,
              "value": "0x80130300",
              "docs": [
                " How long each seat is kept. This defines the next block number at which an election",
                " round will happen. If set to zero, no elections are ever triggered and the module will",
                " be in passive mode."
              ]
            },
            {
              "name": "MaxCandidates",
              "type": 4,
              "value": "0x40000000",
              "docs": [
                " The maximum number of candidates in a phragmen election.",
                "",
                " Warning: This impacts the size of the election which is run onchain. Chose wisely, and",
                " consider how it will impact `T::WeightInfo::election_phragmen`.",
                "",
                " When this limit is reached no more candidates are accepted in the election."
              ]
            },
            {
              "name": "MaxVoters",
              "type": 4,
              "value": "0x00020000",
              "docs": [
                " The maximum number of voters to allow in a phragmen election.",
                "",
                " Warning: This impacts the size of the election which is run onchain. Chose wisely, and",
                " consider how it will impact `T::WeightInfo::election_phragmen`.",
                "",
                " When the limit is reached the new voters are ignored."
              ]
            },
            {
              "name": "MaxVotesPerVoter",
              "type": 4,
              "value": "0x10000000",
              "docs": [
                " Maximum numbers of votes per voter.",
                "",
                " Warning: This impacts the size of the election which is run onchain. Chose wisely, and",
                " consider how it will impact `T::WeightInfo::election_phragmen`."
              ]
            }
          ],
          "errors": {
            "type": 588
          },
          "index": 16
        },
        {
          "name": "TechnicalMembership",
          "storage": {
            "prefix": "TechnicalMembership",
            "items": [
              {
                "name": "Members",
                "modifier": "Default",
                "type": {
                  "plain": 589
                },
                "fallback": "0x00",
                "docs": [
                  " The current membership, stored as an ordered Vec."
                ]
              },
              {
                "name": "Prime",
                "modifier": "Optional",
                "type": {
                  "plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " The current prime member, if one exists."
                ]
              }
            ]
          },
          "calls": {
            "type": 246
          },
          "events": {
            "type": 64
          },
          "constants": [],
          "errors": {
            "type": 590
          },
          "index": 17
        },
        {
          "name": "Grandpa",
          "storage": {
            "prefix": "Grandpa",
            "items": [
              {
                "name": "State",
                "modifier": "Default",
                "type": {
                  "plain": 591
                },
                "fallback": "0x00",
                "docs": [
                  " State of the current authority set."
                ]
              },
              {
                "name": "PendingChange",
                "modifier": "Optional",
                "type": {
                  "plain": 592
                },
                "fallback": "0x00",
                "docs": [
                  " Pending change: (signaled at, scheduled change)."
                ]
              },
              {
                "name": "NextForced",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " next block number where we can force a change."
                ]
              },
              {
                "name": "Stalled",
                "modifier": "Optional",
                "type": {
                  "plain": 95
                },
                "fallback": "0x00",
                "docs": [
                  " `true` if we are currently stalled."
                ]
              },
              {
                "name": "CurrentSetId",
                "modifier": "Default",
                "type": {
                  "plain": 11
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " The number of changes (both in terms of keys and underlying economic responsibilities)",
                  " in the \"set\" of Grandpa validators from genesis."
                ]
              },
              {
                "name": "SetIdSession",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 11,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A mapping from grandpa set ID to the index of the *most recent* session for which its",
                  " members were responsible.",
                  "",
                  " This is only used for validating equivocation proofs. An equivocation proof must",
                  " contains a key-ownership proof for a given session, therefore we need a way to tie",
                  " together sessions and GRANDPA set ids, i.e. we need to validate that a validator",
                  " was the owner of a given key on a given session, and what the active set ID was",
                  " during that session.",
                  "",
                  " TWOX-NOTE: `SetId` is not under user control."
                ]
              },
              {
                "name": "Authorities",
                "modifier": "Default",
                "type": {
                  "plain": 593
                },
                "fallback": "0x00",
                "docs": [
                  " The current list of authorities."
                ]
              }
            ]
          },
          "calls": {
            "type": 247
          },
          "events": {
            "type": 65
          },
          "constants": [
            {
              "name": "MaxAuthorities",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " Max Authorities in use"
              ]
            },
            {
              "name": "MaxNominators",
              "type": 4,
              "value": "0x40000000",
              "docs": [
                " The maximum number of nominators for each validator."
              ]
            },
            {
              "name": "MaxSetIdSessionEntries",
              "type": 11,
              "value": "0xc00f000000000000",
              "docs": [
                " The maximum number of entries to keep in the set id to session index mapping.",
                "",
                " Since the `SetIdSession` map is only used for validating equivocations this",
                " value should relate to the bonding duration of whatever staking system is",
                " being used (if any). If equivocation handling is not enabled then this value",
                " can be zero."
              ]
            }
          ],
          "errors": {
            "type": 594
          },
          "index": 18
        },
        {
          "name": "Treasury",
          "storage": {
            "prefix": "Treasury",
            "items": [
              {
                "name": "ProposalCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Number of proposals that have been made."
                ]
              },
              {
                "name": "Proposals",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 595
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Proposals that have been made."
                ]
              },
              {
                "name": "Deactivated",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The amount which has been reported as inactive to Currency."
                ]
              },
              {
                "name": "Approvals",
                "modifier": "Default",
                "type": {
                  "plain": 596
                },
                "fallback": "0x00",
                "docs": [
                  " Proposal indices that have been approved but not yet awarded."
                ]
              },
              {
                "name": "SpendCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The count of spends that have been made."
                ]
              },
              {
                "name": "Spends",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 597
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Spends that have been approved and being processed."
                ]
              }
            ]
          },
          "calls": {
            "type": 259
          },
          "events": {
            "type": 70
          },
          "constants": [
            {
              "name": "ProposalBond",
              "type": 444,
              "value": "0x50c30000",
              "docs": [
                " Fraction of a proposal's value that should be bonded in order to place the proposal.",
                " An accepted proposal gets these back. A rejected proposal does not."
              ]
            },
            {
              "name": "ProposalBondMinimum",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " Minimum amount of funds that should be placed in a deposit for making a proposal."
              ]
            },
            {
              "name": "ProposalBondMaximum",
              "type": 331,
              "value": "0x00",
              "docs": [
                " Maximum amount of funds that should be placed in a deposit for making a proposal."
              ]
            },
            {
              "name": "SpendPeriod",
              "type": 4,
              "value": "0x80700000",
              "docs": [
                " Period between successive spends."
              ]
            },
            {
              "name": "Burn",
              "type": 444,
              "value": "0x20a10700",
              "docs": [
                " Percentage of spare funds (if any) that are burnt per spend period."
              ]
            },
            {
              "name": "PalletId",
              "type": 599,
              "value": "0x70792f7472737279",
              "docs": [
                " The treasury's pallet id, used for deriving its sovereign account ID."
              ]
            },
            {
              "name": "MaxApprovals",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum number of approvals that can wait in the spending queue.",
                "",
                " NOTE: This parameter is also used within the Bounties Pallet extension if enabled."
              ]
            },
            {
              "name": "PayoutPeriod",
              "type": 4,
              "value": "0x002f0d00",
              "docs": [
                " The period during which an approved treasury spend has to be claimed."
              ]
            }
          ],
          "errors": {
            "type": 600
          },
          "index": 19
        },
        {
          "name": "AssetRate",
          "storage": {
            "prefix": "AssetRate",
            "items": [
              {
                "name": "ConversionRateToNative",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 72
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Maps an asset to its fixed point representation in the native balance.",
                  "",
                  " E.g. `native_amount = asset_amount * ConversionRateToNative::<T>::get(asset_kind)`"
                ]
              }
            ]
          },
          "calls": {
            "type": 260
          },
          "events": {
            "type": 71
          },
          "constants": [],
          "errors": {
            "type": 601
          },
          "index": 20
        },
        {
          "name": "Contracts",
          "storage": {
            "prefix": "Contracts",
            "items": [
              {
                "name": "PristineCode",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 602
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A mapping from a contract's code hash to its code."
                ]
              },
              {
                "name": "CodeInfoOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 603
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A mapping from a contract's code hash to its code info."
                ]
              },
              {
                "name": "Nonce",
                "modifier": "Default",
                "type": {
                  "plain": 11
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " This is a **monotonic** counter incremented on contract instantiation.",
                  "",
                  " This is used in order to generate unique trie ids for contracts.",
                  " The trie id of a new contract is calculated from hash(account_id, nonce).",
                  " The nonce is required because otherwise the following sequence would lead to",
                  " a possible collision of storage:",
                  "",
                  " 1. Create a new contract.",
                  " 2. Terminate the contract.",
                  " 3. Immediately recreate the contract with the same account_id.",
                  "",
                  " This is bad because the contents of a trie are deleted lazily and there might be",
                  " storage of the old instantiation still in it when the new contract is created. Please",
                  " note that we can't replace the counter by the block number because the sequence above",
                  " can happen in the same block. We also can't keep the account counter in memory only",
                  " because storage is the only way to communicate across different extrinsics in the",
                  " same block.",
                  "",
                  " # Note",
                  "",
                  " Do not use it to determine the number of contracts. It won't be decremented if",
                  " a contract is destroyed."
                ]
              },
              {
                "name": "ContractInfoOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 604
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The code associated with a given account.",
                  "",
                  " TWOX-NOTE: SAFE since `AccountId` is a secure hash."
                ]
              },
              {
                "name": "DeletionQueue",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 114
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Evicted contracts that await child trie deletion.",
                  "",
                  " Child trie deletion is a heavy operation depending on the amount of storage items",
                  " stored in said trie. Therefore this operation is performed lazily in `on_idle`."
                ]
              },
              {
                "name": "DeletionQueueCounter",
                "modifier": "Default",
                "type": {
                  "plain": 609
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " A pair of monotonic counters used to track the latest contract marked for deletion",
                  " and the latest deleted contract in queue."
                ]
              },
              {
                "name": "MigrationInProgress",
                "modifier": "Optional",
                "type": {
                  "plain": 610
                },
                "fallback": "0x00",
                "docs": [
                  " A migration can span across multiple blocks. This storage defines a cursor to track the",
                  " progress of the migration, enabling us to resume from the last completed position."
                ]
              }
            ]
          },
          "calls": {
            "type": 261
          },
          "events": {
            "type": 73
          },
          "constants": [
            {
              "name": "Schedule",
              "type": 611,
              "value": "0x0400000000010000000400008000000010000000001000000001000020000000004000000000000827130000b6b5140018f222dd06f129baf81507012a762b1a0018362c0b000cd2170a000c4afb1400185aad160018b616650018a233150018ca941400189230140018129f1400181e4c5800387a4111001871100000b41d0600032470934d4952b2927d00285278e80028fe36ae1e31276d0b0062b90e001c391100a687811f95048d0800b90804f6e2264849308a30741f850410041e81480785044d0104d2355207a504c90f048642721fa5040d0a04ee4cf9266127261fc876852aee7d506535290e4ed290ad515d11006e7d8df7ad2a0265cd1dd527ad1e003120007273180020b91100eef830002049350026531d0020991300cad71e002091130016eaf90a35016e5ed902a812c0610dc1012d6004be060b000cc66a1300a02a5409000c1209661fb9280e33351f2128",
              "docs": [
                " Cost schedule and limits."
              ]
            },
            {
              "name": "DepositPerByte",
              "type": 6,
              "value": "0x0060defb740500000000000000000000",
              "docs": [
                " The amount of balance a caller has to pay for each byte of storage.",
                "",
                " # Note",
                "",
                " Changing this value for an existing chain might need a storage migration."
              ]
            },
            {
              "name": "DefaultDepositLimit",
              "type": 6,
              "value": "0x0000c0afbc4f86570000000000000000",
              "docs": [
                " Fallback value to limit the storage deposit if it's not being set by the caller."
              ]
            },
            {
              "name": "DepositPerItem",
              "type": 6,
              "value": "0x00f0ab75a40d00000000000000000000",
              "docs": [
                " The amount of balance a caller has to pay for each storage item.",
                "",
                " # Note",
                "",
                " Changing this value for an existing chain might need a storage migration."
              ]
            },
            {
              "name": "CodeHashLockupDepositPercent",
              "type": 49,
              "value": "0x00a3e111",
              "docs": [
                " The percentage of the storage deposit that should be held for using a code hash.",
                " Instantiating a contract, or calling [`chain_extension::Ext::add_delegate_dependency`]",
                " protects the code from being removed. In order to prevent abuse these actions are",
                " protected with a percentage of the code deposit."
              ]
            },
            {
              "name": "MaxCodeLen",
              "type": 4,
              "value": "0x00ec0100",
              "docs": [
                " The maximum length of a contract code in bytes.",
                "",
                " The value should be chosen carefully taking into the account the overall memory limit",
                " your runtime has, as well as the [maximum allowed callstack",
                " depth](#associatedtype.CallStack). Look into the `integrity_test()` for some insights."
              ]
            },
            {
              "name": "MaxStorageKeyLen",
              "type": 4,
              "value": "0x80000000",
              "docs": [
                " The maximum allowable length in bytes for storage keys."
              ]
            },
            {
              "name": "MaxDelegateDependencies",
              "type": 4,
              "value": "0x20000000",
              "docs": [
                " The maximum number of delegate_dependencies that a contract can lock with",
                " [`chain_extension::Ext::add_delegate_dependency`]."
              ]
            },
            {
              "name": "UnsafeUnstableInterface",
              "type": 43,
              "value": "0x00",
              "docs": [
                " Make contract callable functions marked as `#[unstable]` available.",
                "",
                " Contracts that use `#[unstable]` functions won't be able to be uploaded unless",
                " this is set to `true`. This is only meant for testnets and dev nodes in order to",
                " experiment with new features.",
                "",
                " # Warning",
                "",
                " Do **not** set to `true` on productions chains."
              ]
            },
            {
              "name": "MaxDebugBufferLen",
              "type": 4,
              "value": "0x00002000",
              "docs": [
                " The maximum length of the debug buffer in bytes."
              ]
            },
            {
              "name": "Environment",
              "type": 615,
              "value": "0x",
              "docs": [
                " Type that bundles together all the runtime configurable interface types.",
                "",
                " This is not a real config. We just mention the type here as constant so that",
                " its type appears in the metadata. Only valid value is `()`."
              ]
            }
          ],
          "errors": {
            "type": 622
          },
          "index": 21
        },
        {
          "name": "Sudo",
          "storage": {
            "prefix": "Sudo",
            "items": [
              {
                "name": "Key",
                "modifier": "Optional",
                "type": {
                  "plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " The `AccountId` of the sudo key."
                ]
              }
            ]
          },
          "calls": {
            "type": 264
          },
          "events": {
            "type": 76
          },
          "constants": [],
          "errors": {
            "type": 623
          },
          "index": 22
        },
        {
          "name": "ImOnline",
          "storage": {
            "prefix": "ImOnline",
            "items": [
              {
                "name": "HeartbeatAfter",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The block number after which it's ok to send heartbeats in the current",
                  " session.",
                  "",
                  " At the beginning of each session we set this to a value that should fall",
                  " roughly in the middle of the session duration. The idea is to first wait for",
                  " the validators to produce a block in the current session, so that the",
                  " heartbeat later on will not be necessary.",
                  "",
                  " This value will only be used as a fallback if we fail to get a proper session",
                  " progress estimate from `NextSessionRotation`, as those estimates should be",
                  " more accurate then the value we calculate for `HeartbeatAfter`."
                ]
              },
              {
                "name": "Keys",
                "modifier": "Default",
                "type": {
                  "plain": 624
                },
                "fallback": "0x00",
                "docs": [
                  " The current set of keys that may issue a heartbeat."
                ]
              },
              {
                "name": "ReceivedHeartbeats",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 95,
                    "value": 43
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " For each session index, we keep a mapping of `SessionIndex` and `AuthIndex`."
                ]
              },
              {
                "name": "AuthoredBlocks",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 542,
                    "value": 4
                  }
                },
                "fallback": "0x00000000",
                "docs": [
                  " For each session index, we keep a mapping of `ValidatorId<T>` to the",
                  " number of blocks authored by the given authority."
                ]
              }
            ]
          },
          "calls": {
            "type": 265
          },
          "events": {
            "type": 77
          },
          "constants": [
            {
              "name": "UnsignedPriority",
              "type": 11,
              "value": "0xffffffffffffffff",
              "docs": [
                " A configuration for base priority of unsigned transactions.",
                "",
                " This is exposed so that it can be tuned for particular runtime, when",
                " multiple pallets send unsigned transactions."
              ]
            }
          ],
          "errors": {
            "type": 626
          },
          "index": 23
        },
        {
          "name": "AuthorityDiscovery",
          "storage": {
            "prefix": "AuthorityDiscovery",
            "items": [
              {
                "name": "Keys",
                "modifier": "Default",
                "type": {
                  "plain": 627
                },
                "fallback": "0x00",
                "docs": [
                  " Keys of the current authority set."
                ]
              },
              {
                "name": "NextKeys",
                "modifier": "Default",
                "type": {
                  "plain": 627
                },
                "fallback": "0x00",
                "docs": [
                  " Keys of the next authority set."
                ]
              }
            ]
          },
          "calls": null,
          "events": null,
          "constants": [],
          "errors": null,
          "index": 24
        },
        {
          "name": "Offences",
          "storage": {
            "prefix": "Offences",
            "items": [
              {
                "name": "Reports",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 12,
                    "value": 629
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The primary structure that holds all offence records keyed by report identifiers."
                ]
              },
              {
                "name": "ConcurrentReportsIndex",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 630,
                    "value": 316
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A vector of reports of the same kind that happened at the same time slot."
                ]
              }
            ]
          },
          "calls": null,
          "events": {
            "type": 86
          },
          "constants": [],
          "errors": null,
          "index": 25
        },
        {
          "name": "Historical",
          "storage": null,
          "calls": null,
          "events": null,
          "constants": [],
          "errors": null,
          "index": 26
        },
        {
          "name": "RandomnessCollectiveFlip",
          "storage": {
            "prefix": "RandomnessCollectiveFlip",
            "items": [
              {
                "name": "RandomMaterial",
                "modifier": "Default",
                "type": {
                  "plain": 631
                },
                "fallback": "0x00",
                "docs": [
                  " Series of block headers from the last 81 blocks that acts as random seed material. This",
                  " is arranged as a ring buffer with `block_number % 81` being the index into the `Vec` of",
                  " the oldest hash."
                ]
              }
            ]
          },
          "calls": null,
          "events": null,
          "constants": [],
          "errors": null,
          "index": 27
        },
        {
          "name": "Identity",
          "storage": {
            "prefix": "Identity",
            "items": [
              {
                "name": "IdentityOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 632
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Information that is pertinent to identify the entity behind an account.",
                  "",
                  " TWOX-NOTE: OK ― `AccountId` is a secure hash."
                ]
              },
              {
                "name": "SuperOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 306
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The super-identity of an alternative \"sub\" identity together with its name, within that",
                  " context. If the account is not some other account's sub-identity, then just `None`."
                ]
              },
              {
                "name": "SubsOf",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 636
                  }
                },
                "fallback": "0x0000000000000000000000000000000000",
                "docs": [
                  " Alternative \"sub\" identities of this account.",
                  "",
                  " The first item is the deposit, the second is a vector of the accounts.",
                  "",
                  " TWOX-NOTE: OK ― `AccountId` is a secure hash."
                ]
              },
              {
                "name": "Registrars",
                "modifier": "Default",
                "type": {
                  "plain": 638
                },
                "fallback": "0x00",
                "docs": [
                  " The set of registrars. Not expected to get very big as can only be added through a",
                  " special origin (likely a council motion).",
                  "",
                  " The index into this can be cast to `RegistrarIndex` to get a valid value."
                ]
              }
            ]
          },
          "calls": {
            "type": 269
          },
          "events": {
            "type": 88
          },
          "constants": [
            {
              "name": "BasicDeposit",
              "type": 6,
              "value": "0x0050702f696a00000000000000000000",
              "docs": [
                " The amount held on deposit for a registered identity"
              ]
            },
            {
              "name": "ByteDeposit",
              "type": 6,
              "value": "0x0060defb740500000000000000000000",
              "docs": [
                " The amount held on deposit per encoded byte for a registered identity."
              ]
            },
            {
              "name": "SubAccountDeposit",
              "type": 6,
              "value": "0x0080f420e6b500000000000000000000",
              "docs": [
                " The amount held on deposit for a registered subaccount. This should account for the fact",
                " that one storage item's value will increase by the size of an account ID, and there will",
                " be another trie item whose value is the size of an account ID plus 32 bytes."
              ]
            },
            {
              "name": "MaxSubAccounts",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum number of sub-accounts allowed per identified account."
              ]
            },
            {
              "name": "MaxRegistrars",
              "type": 4,
              "value": "0x14000000",
              "docs": [
                " Maxmimum number of registrars allowed in the system. Needed to bound the complexity",
                " of, e.g., updating judgements."
              ]
            }
          ],
          "errors": {
            "type": 642
          },
          "index": 28
        },
        {
          "name": "Society",
          "storage": {
            "prefix": "Society",
            "items": [
              {
                "name": "Parameters",
                "modifier": "Optional",
                "type": {
                  "plain": 91
                },
                "fallback": "0x00",
                "docs": [
                  " The max number of members for the society at one time."
                ]
              },
              {
                "name": "Pot",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " Amount of our account balance that is specifically for the next round's bid(s)."
                ]
              },
              {
                "name": "Founder",
                "modifier": "Optional",
                "type": {
                  "plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " The first member."
                ]
              },
              {
                "name": "Head",
                "modifier": "Optional",
                "type": {
                  "plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " The most primary from the most recently approved rank 0 members in the society."
                ]
              },
              {
                "name": "Rules",
                "modifier": "Optional",
                "type": {
                  "plain": 12
                },
                "fallback": "0x00",
                "docs": [
                  " A hash of the rules of this society concerning membership. Can only be set once and",
                  " only by the founder."
                ]
              },
              {
                "name": "Members",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 643
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The current members and their rank. Doesn't include `SuspendedMembers`."
                ]
              },
              {
                "name": "Payouts",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 646
                  }
                },
                "fallback": "0x0000000000000000000000000000000000",
                "docs": [
                  " Information regarding rank-0 payouts, past and future."
                ]
              },
              {
                "name": "MemberCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The number of items in `Members` currently. (Doesn't include `SuspendedMembers`.)"
                ]
              },
              {
                "name": "MemberByIndex",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 0
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The current items in `Members` keyed by their unique index. Keys are densely populated",
                  " `0..MemberCount` (does not include `MemberCount`)."
                ]
              },
              {
                "name": "SuspendedMembers",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 643
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The set of suspended members, with their old membership record."
                ]
              },
              {
                "name": "RoundCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The number of rounds which have passed."
                ]
              },
              {
                "name": "Bids",
                "modifier": "Default",
                "type": {
                  "plain": 650
                },
                "fallback": "0x00",
                "docs": [
                  " The current bids, stored ordered by the value of the bid."
                ]
              },
              {
                "name": "Candidates",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 654
                  }
                },
                "fallback": "0x00",
                "docs": []
              },
              {
                "name": "Skeptic",
                "modifier": "Optional",
                "type": {
                  "plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " The current skeptic."
                ]
              },
              {
                "name": "Votes",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 656,
                    "value": 657
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Double map from Candidate -> Voter -> (Maybe) Vote."
                ]
              },
              {
                "name": "VoteClearCursor",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 658
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Clear-cursor for Vote, map from Candidate -> (Maybe) Cursor."
                ]
              },
              {
                "name": "NextHead",
                "modifier": "Optional",
                "type": {
                  "plain": 659
                },
                "fallback": "0x00",
                "docs": [
                  " At the end of the claim period, this contains the most recently approved members (along with",
                  " their bid and round ID) who is from the most recent round with the lowest bid. They will",
                  " become the new `Head`."
                ]
              },
              {
                "name": "ChallengeRoundCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The number of challenge rounds there have been. Used to identify stale DefenderVotes."
                ]
              },
              {
                "name": "Defending",
                "modifier": "Optional",
                "type": {
                  "plain": 660
                },
                "fallback": "0x00",
                "docs": [
                  " The defending member currently being challenged, along with a running tally of votes."
                ]
              },
              {
                "name": "DefenderVotes",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 542,
                    "value": 657
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Votes for the defender, keyed by challenge round."
                ]
              }
            ]
          },
          "calls": {
            "type": 308
          },
          "events": {
            "type": 89
          },
          "constants": [
            {
              "name": "PalletId",
              "type": 599,
              "value": "0x70792f736f636965",
              "docs": [
                " The societies's pallet id"
              ]
            },
            {
              "name": "GraceStrikes",
              "type": 4,
              "value": "0x0a000000",
              "docs": [
                " The maximum number of strikes before a member gets funds slashed."
              ]
            },
            {
              "name": "PeriodSpend",
              "type": 6,
              "value": "0x0000c52ebca2b1000000000000000000",
              "docs": [
                " The amount of incentive paid within each period. Doesn't include VoterTip."
              ]
            },
            {
              "name": "VotingPeriod",
              "type": 4,
              "value": "0x00770100",
              "docs": [
                " The number of blocks on which new candidates should be voted on. Together with",
                " `ClaimPeriod`, this sums to the number of blocks between candidate intake periods."
              ]
            },
            {
              "name": "ClaimPeriod",
              "type": 4,
              "value": "0x00770100",
              "docs": [
                " The number of blocks on which new candidates can claim their membership and be the",
                " named head."
              ]
            },
            {
              "name": "MaxLockDuration",
              "type": 4,
              "value": "0x009cda01",
              "docs": [
                " The maximum duration of the payout lock."
              ]
            },
            {
              "name": "ChallengePeriod",
              "type": 4,
              "value": "0x80130300",
              "docs": [
                " The number of blocks between membership challenges."
              ]
            },
            {
              "name": "MaxPayouts",
              "type": 4,
              "value": "0x0a000000",
              "docs": [
                " The maximum number of payouts a member may have waiting unclaimed."
              ]
            },
            {
              "name": "MaxBids",
              "type": 4,
              "value": "0x0a000000",
              "docs": [
                " The maximum number of bids at once."
              ]
            }
          ],
          "errors": {
            "type": 661
          },
          "index": 29
        },
        {
          "name": "Recovery",
          "storage": {
            "prefix": "Recovery",
            "items": [
              {
                "name": "Recoverable",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 662
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The set of recoverable accounts and their recovery configuration."
                ]
              },
              {
                "name": "ActiveRecoveries",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 656,
                    "value": 664
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Active recovery attempts.",
                  "",
                  " First account is the account to be recovered, and the second account",
                  " is the user trying to recover the account."
                ]
              },
              {
                "name": "Proxy",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 0
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The list of allowed proxy accounts.",
                  "",
                  " Map from the user who can access it to the recovered account."
                ]
              }
            ]
          },
          "calls": {
            "type": 309
          },
          "events": {
            "type": 92
          },
          "constants": [
            {
              "name": "ConfigDepositBase",
              "type": 6,
              "value": "0x00406352bfc601000000000000000000",
              "docs": [
                " The base amount of currency needed to reserve for creating a recovery configuration.",
                "",
                " This is held for an additional storage item whose value size is",
                " `2 + sizeof(BlockNumber, Balance)` bytes."
              ]
            },
            {
              "name": "FriendDepositFactor",
              "type": 6,
              "value": "0x00203d88792d00000000000000000000",
              "docs": [
                " The amount of currency needed per additional user when creating a recovery",
                " configuration.",
                "",
                " This is held for adding `sizeof(AccountId)` bytes more into a pre-existing storage",
                " value."
              ]
            },
            {
              "name": "MaxFriends",
              "type": 4,
              "value": "0x09000000",
              "docs": [
                " The maximum amount of friends allowed in a recovery configuration.",
                "",
                " NOTE: The threshold programmed in this Pallet uses u16, so it does",
                " not really make sense to have a limit here greater than u16::MAX.",
                " But also, that is a lot more than you should probably set this value",
                " to anyway..."
              ]
            },
            {
              "name": "RecoveryDeposit",
              "type": 6,
              "value": "0x00406352bfc601000000000000000000",
              "docs": [
                " The base amount of currency needed to reserve for starting a recovery.",
                "",
                " This is primarily held for deterring malicious recovery attempts, and should",
                " have a value large enough that a bad actor would choose not to place this",
                " deposit. It also acts to fund additional storage item whose value size is",
                " `sizeof(BlockNumber, Balance + T * AccountId)` bytes. Where T is a configurable",
                " threshold."
              ]
            }
          ],
          "errors": {
            "type": 665
          },
          "index": 30
        },
        {
          "name": "Vesting",
          "storage": {
            "prefix": "Vesting",
            "items": [
              {
                "name": "Vesting",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 666
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Information regarding the vesting of a given account."
                ]
              },
              {
                "name": "StorageVersion",
                "modifier": "Default",
                "type": {
                  "plain": 668
                },
                "fallback": "0x00",
                "docs": [
                  " Storage version of the pallet.",
                  "",
                  " New networks start with latest version, as determined by the genesis build."
                ]
              }
            ]
          },
          "calls": {
            "type": 310
          },
          "events": {
            "type": 93
          },
          "constants": [
            {
              "name": "MinVestedTransfer",
              "type": 6,
              "value": "0x0000c16ff28623000000000000000000",
              "docs": [
                " The minimum amount transferred to call `vested_transfer`."
              ]
            },
            {
              "name": "MaxVestingSchedules",
              "type": 4,
              "value": "0x1c000000",
              "docs": []
            }
          ],
          "errors": {
            "type": 669
          },
          "index": 31
        },
        {
          "name": "Scheduler",
          "storage": {
            "prefix": "Scheduler",
            "items": [
              {
                "name": "IncompleteSince",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": []
              },
              {
                "name": "Agenda",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 670
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Items to be executed, indexed by the block number that they should be executed on."
                ]
              },
              {
                "name": "Lookup",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 1,
                    "value": 95
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Lookup from a name to the block number and index of the task.",
                  "",
                  " For v3 -> v4 the previously unbounded identities are Blake2-256 hashed to form the v4",
                  " identities."
                ]
              }
            ]
          },
          "calls": {
            "type": 312
          },
          "events": {
            "type": 94
          },
          "constants": [
            {
              "name": "MaximumWeight",
              "type": 9,
              "value": "0x0b00806e87740113cccccccccccccccc",
              "docs": [
                " The maximum weight that may be scheduled per block for any dispatchables."
              ]
            },
            {
              "name": "MaxScheduledPerBlock",
              "type": 4,
              "value": "0x32000000",
              "docs": [
                " The maximum number of scheduled calls in the queue for a single block.",
                "",
                " NOTE:",
                " + Dependent pallets' benchmarks might require a higher limit for the setting. Set a",
                " higher limit under `runtime-benchmarks` feature."
              ]
            }
          ],
          "errors": {
            "type": 674
          },
          "index": 32
        },
        {
          "name": "Glutton",
          "storage": {
            "prefix": "Glutton",
            "items": [
              {
                "name": "Compute",
                "modifier": "Default",
                "type": {
                  "plain": 98
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " The proportion of the remaining `ref_time` to consume during `on_idle`.",
                  "",
                  " `1.0` is mapped to `100%`. Must be at most [`crate::RESOURCE_HARD_LIMIT`]. Setting this to",
                  " over `1.0` could stall the chain."
                ]
              },
              {
                "name": "Storage",
                "modifier": "Default",
                "type": {
                  "plain": 98
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " The proportion of the remaining `proof_size` to consume during `on_idle`.",
                  "",
                  " `1.0` is mapped to `100%`. Must be at most [`crate::RESOURCE_HARD_LIMIT`]. Setting this to",
                  " over `1.0` could stall the chain."
                ]
              },
              {
                "name": "TrashData",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 675
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Storage map used for wasting proof size.",
                  "",
                  " It contains no meaningful data - hence the name \"Trash\". The maximal number of entries is",
                  " set to 65k, which is just below the next jump at 16^4. This is important to reduce the proof",
                  " size benchmarking overestimate. The assumption here is that we won't have more than 65k *",
                  " 1KiB = 65MiB of proof size wasting in practice. However, this limit is not enforced, so the",
                  " pallet would also work out of the box with more entries, but its benchmarked proof weight",
                  " would possibly be underestimated in that case."
                ]
              },
              {
                "name": "TrashDataCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The current number of entries in `TrashData`."
                ]
              }
            ]
          },
          "calls": {
            "type": 314
          },
          "events": {
            "type": 97
          },
          "constants": [],
          "errors": {
            "type": 676
          },
          "index": 33
        },
        {
          "name": "Preimage",
          "storage": {
            "prefix": "Preimage",
            "items": [
              {
                "name": "StatusFor",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 677
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The request status of a given hash."
                ]
              },
              {
                "name": "RequestStatusFor",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 679
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The request status of a given hash."
                ]
              },
              {
                "name": "PreimageFor",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 683,
                    "value": 684
                  }
                },
                "fallback": "0x00",
                "docs": []
              }
            ]
          },
          "calls": {
            "type": 315
          },
          "events": {
            "type": 99
          },
          "constants": [],
          "errors": {
            "type": 685
          },
          "index": 34
        },
        {
          "name": "Proxy",
          "storage": {
            "prefix": "Proxy",
            "items": [
              {
                "name": "Proxies",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 686
                  }
                },
                "fallback": "0x0000000000000000000000000000000000",
                "docs": [
                  " The set of account proxies. Maps the account which has delegated to the accounts",
                  " which are being delegated to, together with the amount held on deposit."
                ]
              },
              {
                "name": "Announcements",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 690
                  }
                },
                "fallback": "0x0000000000000000000000000000000000",
                "docs": [
                  " The announcements made by the proxy (key)."
                ]
              }
            ]
          },
          "calls": {
            "type": 317
          },
          "events": {
            "type": 100
          },
          "constants": [
            {
              "name": "ProxyDepositBase",
              "type": 6,
              "value": "0x00f09e544c3900000000000000000000",
              "docs": [
                " The base amount of currency needed to reserve for creating a proxy.",
                "",
                " This is held for an additional storage item whose value size is",
                " `sizeof(Balance)` bytes and whose key size is `sizeof(AccountId)` bytes."
              ]
            },
            {
              "name": "ProxyDepositFactor",
              "type": 6,
              "value": "0x0060aa7714b400000000000000000000",
              "docs": [
                " The amount of currency needed per proxy added.",
                "",
                " This is held for adding 32 bytes plus an instance of `ProxyType` more into a",
                " pre-existing storage value. Thus, when configuring `ProxyDepositFactor` one should take",
                " into account `32 + proxy_type.encode().len()` bytes of data."
              ]
            },
            {
              "name": "MaxProxies",
              "type": 4,
              "value": "0x20000000",
              "docs": [
                " The maximum amount of proxies allowed for a single account."
              ]
            },
            {
              "name": "MaxPending",
              "type": 4,
              "value": "0x20000000",
              "docs": [
                " The maximum amount of time-delayed announcements that are allowed to be pending."
              ]
            },
            {
              "name": "AnnouncementDepositBase",
              "type": 6,
              "value": "0x00f09e544c3900000000000000000000",
              "docs": [
                " The base amount of currency needed to reserve for creating an announcement.",
                "",
                " This is held when a new storage item holding a `Balance` is created (typically 16",
                " bytes)."
              ]
            },
            {
              "name": "AnnouncementDepositFactor",
              "type": 6,
              "value": "0x00c054ef286801000000000000000000",
              "docs": [
                " The amount of currency needed per announcement made.",
                "",
                " This is held for adding an `AccountId`, `Hash` and `BlockNumber` (typically 68 bytes)",
                " into a pre-existing storage value."
              ]
            }
          ],
          "errors": {
            "type": 694
          },
          "index": 35
        },
        {
          "name": "Multisig",
          "storage": {
            "prefix": "Multisig",
            "items": [
              {
                "name": "Multisigs",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 695,
                    "value": 696
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The set of open multisig operations."
                ]
              }
            ]
          },
          "calls": {
            "type": 319
          },
          "events": {
            "type": 103
          },
          "constants": [
            {
              "name": "DepositBase",
              "type": 6,
              "value": "0x00f01c0adbed01000000000000000000",
              "docs": [
                " The base amount of currency needed to reserve for creating a multisig execution or to",
                " store a dispatch call for later.",
                "",
                " This is held for an additional storage item whose value size is",
                " `4 + sizeof((BlockNumber, Balance, AccountId))` bytes and whose key size is",
                " `32 + sizeof(AccountId)` bytes."
              ]
            },
            {
              "name": "DepositFactor",
              "type": 6,
              "value": "0x0000cc7b9fae00000000000000000000",
              "docs": [
                " The amount of currency needed per unit threshold when creating a multisig execution.",
                "",
                " This is held for adding 32 bytes more into a pre-existing storage value."
              ]
            },
            {
              "name": "MaxSignatories",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum amount of signatories allowed in the multisig."
              ]
            }
          ],
          "errors": {
            "type": 697
          },
          "index": 36
        },
        {
          "name": "Bounties",
          "storage": {
            "prefix": "Bounties",
            "items": [
              {
                "name": "BountyCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Number of bounty proposals that have been made."
                ]
              },
              {
                "name": "Bounties",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 698
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Bounties that have been made."
                ]
              },
              {
                "name": "BountyDescriptions",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 700
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The description of each bounty."
                ]
              },
              {
                "name": "BountyApprovals",
                "modifier": "Default",
                "type": {
                  "plain": 596
                },
                "fallback": "0x00",
                "docs": [
                  " Bounty indices that have been approved but not yet funded."
                ]
              }
            ]
          },
          "calls": {
            "type": 321
          },
          "events": {
            "type": 105
          },
          "constants": [
            {
              "name": "BountyDepositBase",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " The amount held on deposit for placing a bounty proposal."
              ]
            },
            {
              "name": "BountyDepositPayoutDelay",
              "type": 4,
              "value": "0x80700000",
              "docs": [
                " The delay period for which a bounty beneficiary need to wait before claim the payout."
              ]
            },
            {
              "name": "BountyUpdatePeriod",
              "type": 4,
              "value": "0x00270600",
              "docs": [
                " Bounty duration in blocks."
              ]
            },
            {
              "name": "CuratorDepositMultiplier",
              "type": 444,
              "value": "0x20a10700",
              "docs": [
                " The curator deposit is calculated as a percentage of the curator fee.",
                "",
                " This deposit has optional upper and lower bounds with `CuratorDepositMax` and",
                " `CuratorDepositMin`."
              ]
            },
            {
              "name": "CuratorDepositMax",
              "type": 331,
              "value": "0x010000c16ff28623000000000000000000",
              "docs": [
                " Maximum amount of funds that should be placed in a deposit for making a proposal."
              ]
            },
            {
              "name": "CuratorDepositMin",
              "type": 331,
              "value": "0x0100407a10f35a00000000000000000000",
              "docs": [
                " Minimum amount of funds that should be placed in a deposit for making a proposal."
              ]
            },
            {
              "name": "BountyValueMinimum",
              "type": 6,
              "value": "0x00406352bfc601000000000000000000",
              "docs": [
                " Minimum value for a bounty."
              ]
            },
            {
              "name": "DataDepositPerByte",
              "type": 6,
              "value": "0x0010a5d4e80000000000000000000000",
              "docs": [
                " The amount held on deposit per byte within the tip report reason or bounty description."
              ]
            },
            {
              "name": "MaximumReasonLength",
              "type": 4,
              "value": "0x2c010000",
              "docs": [
                " Maximum acceptable reason length.",
                "",
                " Benchmarks depend on this value, be sure to update weights file when changing this value"
              ]
            }
          ],
          "errors": {
            "type": 701
          },
          "index": 37
        },
        {
          "name": "Tips",
          "storage": {
            "prefix": "Tips",
            "items": [
              {
                "name": "Tips",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 12,
                    "value": 702
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " TipsMap that are not yet completed. Keyed by the hash of `(reason, who)` from the value.",
                  " This has the insecure enumerable hash function since the key itself is already",
                  " guaranteed to be a secure hash."
                ]
              },
              {
                "name": "Reasons",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 13
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Simple preimage lookup from the reason's hash to the original data. Again, has an",
                  " insecure enumerable hash since the key is guaranteed to be the result of a secure hash."
                ]
              }
            ]
          },
          "calls": {
            "type": 322
          },
          "events": {
            "type": 106
          },
          "constants": [
            {
              "name": "MaximumReasonLength",
              "type": 4,
              "value": "0x2c010000",
              "docs": [
                " Maximum acceptable reason length.",
                "",
                " Benchmarks depend on this value, be sure to update weights file when changing this value"
              ]
            },
            {
              "name": "DataDepositPerByte",
              "type": 6,
              "value": "0x0010a5d4e80000000000000000000000",
              "docs": [
                " The amount held on deposit per byte within the tip report reason or bounty description."
              ]
            },
            {
              "name": "TipCountdown",
              "type": 4,
              "value": "0x80700000",
              "docs": [
                " The period for which a tip remains open after is has achieved threshold tippers."
              ]
            },
            {
              "name": "TipFindersFee",
              "type": 230,
              "value": "0x14",
              "docs": [
                " The percent of the final tip which goes to the original reporter of the tip."
              ]
            },
            {
              "name": "TipReportDepositBase",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " The amount held on deposit for placing a tip report."
              ]
            },
            {
              "name": "MaxTipAmount",
              "type": 6,
              "value": "0x0000c52ebca2b1000000000000000000",
              "docs": [
                " The maximum amount for a single tip."
              ]
            }
          ],
          "errors": {
            "type": 703
          },
          "index": 38
        },
        {
          "name": "Assets",
          "storage": {
            "prefix": "Assets",
            "items": [
              {
                "name": "Asset",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 704
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Details of an asset."
                ]
              },
              {
                "name": "Account",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 542,
                    "value": 706
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The holdings of a specific account for a specific asset."
                ]
              },
              {
                "name": "Approvals",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 709,
                    "value": 710
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Approved balance transfers. First balance is the amount approved for transfer. Second",
                  " is the amount of `T::Currency` reserved for storing this.",
                  " First key is the asset ID, second key is the owner and third key is the delegate."
                ]
              },
              {
                "name": "Metadata",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 711
                  }
                },
                "fallback": "0x0000000000000000000000000000000000000000",
                "docs": [
                  " Metadata of an asset."
                ]
              }
            ]
          },
          "calls": {
            "type": 323
          },
          "events": {
            "type": 107
          },
          "constants": [
            {
              "name": "RemoveItemsLimit",
              "type": 4,
              "value": "0xe8030000",
              "docs": [
                " Max number of items to destroy per `destroy_accounts` and `destroy_approvals` call.",
                "",
                " Must be configured to result in a weight that makes each call fit in a block."
              ]
            },
            {
              "name": "AssetDeposit",
              "type": 6,
              "value": "0x0000c16ff28623000000000000000000",
              "docs": [
                " The basic amount of funds that must be reserved for an asset."
              ]
            },
            {
              "name": "AssetAccountDeposit",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " The amount of funds that must be reserved for a non-provider asset account to be",
                " maintained."
              ]
            },
            {
              "name": "MetadataDepositBase",
              "type": 6,
              "value": "0x0080c6a47e8d03000000000000000000",
              "docs": [
                " The basic amount of funds that must be reserved when adding metadata to your asset."
              ]
            },
            {
              "name": "MetadataDepositPerByte",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " The additional funds that must be reserved for the number of bytes you store in your",
                " metadata."
              ]
            },
            {
              "name": "ApprovalDeposit",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " The amount of funds that must be reserved when creating a new approval."
              ]
            },
            {
              "name": "StringLimit",
              "type": 4,
              "value": "0x32000000",
              "docs": [
                " The maximum length of a name or symbol stored on-chain."
              ]
            }
          ],
          "errors": {
            "type": 713
          },
          "index": 39
        },
        {
          "name": "PoolAssets",
          "storage": {
            "prefix": "PoolAssets",
            "items": [
              {
                "name": "Asset",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 704
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Details of an asset."
                ]
              },
              {
                "name": "Account",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 542,
                    "value": 706
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The holdings of a specific account for a specific asset."
                ]
              },
              {
                "name": "Approvals",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 709,
                    "value": 710
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Approved balance transfers. First balance is the amount approved for transfer. Second",
                  " is the amount of `T::Currency` reserved for storing this.",
                  " First key is the asset ID, second key is the owner and third key is the delegate."
                ]
              },
              {
                "name": "Metadata",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 711
                  }
                },
                "fallback": "0x0000000000000000000000000000000000000000",
                "docs": [
                  " Metadata of an asset."
                ]
              }
            ]
          },
          "calls": {
            "type": 324
          },
          "events": {
            "type": 108
          },
          "constants": [
            {
              "name": "RemoveItemsLimit",
              "type": 4,
              "value": "0xe8030000",
              "docs": [
                " Max number of items to destroy per `destroy_accounts` and `destroy_approvals` call.",
                "",
                " Must be configured to result in a weight that makes each call fit in a block."
              ]
            },
            {
              "name": "AssetDeposit",
              "type": 6,
              "value": "0x0000c16ff28623000000000000000000",
              "docs": [
                " The basic amount of funds that must be reserved for an asset."
              ]
            },
            {
              "name": "AssetAccountDeposit",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " The amount of funds that must be reserved for a non-provider asset account to be",
                " maintained."
              ]
            },
            {
              "name": "MetadataDepositBase",
              "type": 6,
              "value": "0x0080c6a47e8d03000000000000000000",
              "docs": [
                " The basic amount of funds that must be reserved when adding metadata to your asset."
              ]
            },
            {
              "name": "MetadataDepositPerByte",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " The additional funds that must be reserved for the number of bytes you store in your",
                " metadata."
              ]
            },
            {
              "name": "ApprovalDeposit",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " The amount of funds that must be reserved when creating a new approval."
              ]
            },
            {
              "name": "StringLimit",
              "type": 4,
              "value": "0x32000000",
              "docs": [
                " The maximum length of a name or symbol stored on-chain."
              ]
            }
          ],
          "errors": {
            "type": 714
          },
          "index": 40
        },
        {
          "name": "Mmr",
          "storage": {
            "prefix": "Mmr",
            "items": [
              {
                "name": "RootHash",
                "modifier": "Default",
                "type": {
                  "plain": 12
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Latest MMR Root hash."
                ]
              },
              {
                "name": "NumberOfLeaves",
                "modifier": "Default",
                "type": {
                  "plain": 11
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " Current size of the MMR (number of leaves)."
                ]
              },
              {
                "name": "Nodes",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 11,
                    "value": 12
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Hashes of the nodes in the MMR.",
                  "",
                  " Note this collection only contains MMR peaks, the inner nodes (and leaves)",
                  " are pruned and only stored in the Offchain DB."
                ]
              }
            ]
          },
          "calls": null,
          "events": null,
          "constants": [],
          "errors": null,
          "index": 41
        },
        {
          "name": "Lottery",
          "storage": {
            "prefix": "Lottery",
            "items": [
              {
                "name": "LotteryIndex",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": []
              },
              {
                "name": "Lottery",
                "modifier": "Optional",
                "type": {
                  "plain": 715
                },
                "fallback": "0x00",
                "docs": [
                  " The configuration for the current lottery."
                ]
              },
              {
                "name": "Participants",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 716
                  }
                },
                "fallback": "0x0000000000",
                "docs": [
                  " Users who have purchased a ticket. (Lottery Index, Tickets Purchased)"
                ]
              },
              {
                "name": "TicketsCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Total number of tickets sold."
                ]
              },
              {
                "name": "Tickets",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 0
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Each ticket's owner.",
                  "",
                  " May have residual storage from previous lotteries. Use `TicketsCount` to see which ones",
                  " are actually valid ticket mappings."
                ]
              },
              {
                "name": "CallIndices",
                "modifier": "Default",
                "type": {
                  "plain": 717
                },
                "fallback": "0x00",
                "docs": [
                  " The calls stored in this pallet to be used in an active lottery if configured",
                  " by `Config::ValidateCall`."
                ]
              }
            ]
          },
          "calls": {
            "type": 325
          },
          "events": {
            "type": 109
          },
          "constants": [
            {
              "name": "PalletId",
              "type": 599,
              "value": "0x70792f6c6f74746f",
              "docs": [
                " The Lottery's pallet id"
              ]
            },
            {
              "name": "MaxCalls",
              "type": 4,
              "value": "0x0a000000",
              "docs": [
                " The max number of calls available in a single lottery."
              ]
            },
            {
              "name": "MaxGenerateRandom",
              "type": 4,
              "value": "0x0a000000",
              "docs": [
                " Number of time we should try to generate a random number that has no modulo bias.",
                " The larger this number, the more potential computation is used for picking the winner,",
                " but also the more likely that the chosen winner is done fairly."
              ]
            }
          ],
          "errors": {
            "type": 719
          },
          "index": 42
        },
        {
          "name": "Nis",
          "storage": {
            "prefix": "Nis",
            "items": [
              {
                "name": "QueueTotals",
                "modifier": "Default",
                "type": {
                  "plain": 720
                },
                "fallback": "",
                "docs": [
                  " The totals of items and balances within each queue. Saves a lot of storage reads in the",
                  " case of sparsely packed queues.",
                  "",
                  " The vector is indexed by duration in `Period`s, offset by one, so information on the queue",
                  " whose duration is one `Period` would be storage `0`."
                ]
              },
              {
                "name": "Queues",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 721
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The queues of bids. Indexed by duration (in `Period`s)."
                ]
              },
              {
                "name": "Summary",
                "modifier": "Default",
                "type": {
                  "plain": 724
                },
                "fallback": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " Summary information over the general state."
                ]
              },
              {
                "name": "Receipts",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 725
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The currently outstanding receipts, indexed according to the order of creation."
                ]
              }
            ]
          },
          "calls": {
            "type": 326
          },
          "events": {
            "type": 111
          },
          "constants": [
            {
              "name": "PalletId",
              "type": 599,
              "value": "0x70792f6e69732020",
              "docs": [
                " The treasury's pallet id, used for deriving its sovereign account ID."
              ]
            },
            {
              "name": "QueueCount",
              "type": 4,
              "value": "0x2c010000",
              "docs": [
                " Number of duration queues in total. This sets the maximum duration supported, which is",
                " this value multiplied by `Period`."
              ]
            },
            {
              "name": "MaxQueueLen",
              "type": 4,
              "value": "0xe8030000",
              "docs": [
                " Maximum number of items that may be in each duration queue.",
                "",
                " Must be larger than zero."
              ]
            },
            {
              "name": "FifoQueueLen",
              "type": 4,
              "value": "0xf4010000",
              "docs": [
                " Portion of the queue which is free from ordering and just a FIFO.",
                "",
                " Must be no greater than `MaxQueueLen`."
              ]
            },
            {
              "name": "BasePeriod",
              "type": 4,
              "value": "0x002f0d00",
              "docs": [
                " The base period for the duration queues. This is the common multiple across all",
                " supported freezing durations that can be bid upon."
              ]
            },
            {
              "name": "MinBid",
              "type": 6,
              "value": "0x0000c16ff28623000000000000000000",
              "docs": [
                " The minimum amount of funds that may be placed in a bid. Note that this",
                " does not actually limit the amount which may be represented in a receipt since bids may",
                " be split up by the system.",
                "",
                " It should be at least big enough to ensure that there is no possible storage spam attack",
                " or queue-filling attack."
              ]
            },
            {
              "name": "MinReceipt",
              "type": 112,
              "value": "0x0000c16ff2862300",
              "docs": [
                " The minimum amount of funds which may intentionally be left remaining under a single",
                " receipt."
              ]
            },
            {
              "name": "IntakePeriod",
              "type": 4,
              "value": "0x0a000000",
              "docs": [
                " The number of blocks between consecutive attempts to dequeue bids and create receipts.",
                "",
                " A larger value results in fewer storage hits each block, but a slower period to get to",
                " the target."
              ]
            },
            {
              "name": "MaxIntakeWeight",
              "type": 9,
              "value": "0x0700d0ed902e139999999999999919",
              "docs": [
                " The maximum amount of bids that can consolidated into receipts in a single intake. A",
                " larger value here means less of the block available for transactions should there be a",
                " glut of bids."
              ]
            },
            {
              "name": "ThawThrottle",
              "type": 726,
              "value": "0x0000d9e9ac2d780305000000",
              "docs": [
                " The maximum proportion which may be thawed and the period over which it is reset."
              ]
            }
          ],
          "errors": {
            "type": 727
          },
          "index": 43
        },
        {
          "name": "Uniques",
          "storage": {
            "prefix": "Uniques",
            "items": [
              {
                "name": "Class",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 728
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Details of a collection."
                ]
              },
              {
                "name": "OwnershipAcceptance",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The collection, if any, of which an account is willing to take ownership."
                ]
              },
              {
                "name": "Account",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 729,
                    "value": 32
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The items held by any given account; set out this way so that items owned by a single",
                  " account can be enumerated."
                ]
              },
              {
                "name": "ClassAccount",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 549,
                    "value": 32
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The collections owned by any given account; set out this way so that collections owned by",
                  " a single account can be enumerated."
                ]
              },
              {
                "name": "Asset",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 95,
                    "value": 730
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The items in existence and their ownership details."
                ]
              },
              {
                "name": "ClassMetadataOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 731
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Metadata of a collection."
                ]
              },
              {
                "name": "InstanceMetadataOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 95,
                    "value": 732
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Metadata of an item."
                ]
              },
              {
                "name": "Attribute",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 733,
                    "value": 734
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Attributes of a collection."
                ]
              },
              {
                "name": "ItemPriceOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 95,
                    "value": 735
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Price of an asset instance."
                ]
              },
              {
                "name": "CollectionMaxSupply",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Keeps track of the number of items a collection might have."
                ]
              }
            ]
          },
          "calls": {
            "type": 328
          },
          "events": {
            "type": 113
          },
          "constants": [
            {
              "name": "CollectionDeposit",
              "type": 6,
              "value": "0x0000c16ff28623000000000000000000",
              "docs": [
                " The basic amount of funds that must be reserved for collection."
              ]
            },
            {
              "name": "ItemDeposit",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " The basic amount of funds that must be reserved for an item."
              ]
            },
            {
              "name": "MetadataDepositBase",
              "type": 6,
              "value": "0x0080c6a47e8d03000000000000000000",
              "docs": [
                " The basic amount of funds that must be reserved when adding metadata to your item."
              ]
            },
            {
              "name": "AttributeDepositBase",
              "type": 6,
              "value": "0x0080c6a47e8d03000000000000000000",
              "docs": [
                " The basic amount of funds that must be reserved when adding an attribute to an item."
              ]
            },
            {
              "name": "DepositPerByte",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " The additional funds that must be reserved for the number of bytes store in metadata,",
                " either \"normal\" metadata or attribute metadata."
              ]
            },
            {
              "name": "StringLimit",
              "type": 4,
              "value": "0x80000000",
              "docs": [
                " The maximum length of data stored on-chain."
              ]
            },
            {
              "name": "KeyLimit",
              "type": 4,
              "value": "0x20000000",
              "docs": [
                " The maximum length of an attribute key."
              ]
            },
            {
              "name": "ValueLimit",
              "type": 4,
              "value": "0x40000000",
              "docs": [
                " The maximum length of an attribute value."
              ]
            }
          ],
          "errors": {
            "type": 736
          },
          "index": 44
        },
        {
          "name": "Nfts",
          "storage": {
            "prefix": "Nfts",
            "items": [
              {
                "name": "Collection",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 737
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Details of a collection."
                ]
              },
              {
                "name": "OwnershipAcceptance",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The collection, if any, of which an account is willing to take ownership."
                ]
              },
              {
                "name": "Account",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 729,
                    "value": 32
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The items held by any given account; set out this way so that items owned by a single",
                  " account can be enumerated."
                ]
              },
              {
                "name": "CollectionAccount",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 549,
                    "value": 32
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The collections owned by any given account; set out this way so that collections owned by",
                  " a single account can be enumerated."
                ]
              },
              {
                "name": "CollectionRoleOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 542,
                    "value": 738
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The items in existence and their ownership details.",
                  " Stores collection roles as per account."
                ]
              },
              {
                "name": "Item",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 95,
                    "value": 740
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The items in existence and their ownership details."
                ]
              },
              {
                "name": "CollectionMetadataOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 746
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Metadata of a collection."
                ]
              },
              {
                "name": "ItemMetadataOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 95,
                    "value": 747
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Metadata of an item."
                ]
              },
              {
                "name": "Attribute",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat",
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 749,
                    "value": 750
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Attributes of a collection."
                ]
              },
              {
                "name": "ItemPriceOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 95,
                    "value": 735
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A price of an item."
                ]
              },
              {
                "name": "ItemAttributesApprovalsOf",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 95,
                    "value": 752
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Item attribute approvals."
                ]
              },
              {
                "name": "NextCollectionId",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Stores the `CollectionId` that is going to be used for the next collection.",
                  " This gets incremented whenever a new collection is created."
                ]
              },
              {
                "name": "PendingSwapOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 95,
                    "value": 754
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Handles all the pending swaps."
                ]
              },
              {
                "name": "CollectionConfigOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 333
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Config of a collection."
                ]
              },
              {
                "name": "ItemConfigOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Blake2_128Concat"
                    ],
                    "key": 95,
                    "value": 343
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Config of an item."
                ]
              }
            ]
          },
          "calls": {
            "type": 332
          },
          "events": {
            "type": 118
          },
          "constants": [
            {
              "name": "CollectionDeposit",
              "type": 6,
              "value": "0x0000c16ff28623000000000000000000",
              "docs": [
                " The basic amount of funds that must be reserved for collection."
              ]
            },
            {
              "name": "ItemDeposit",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " The basic amount of funds that must be reserved for an item."
              ]
            },
            {
              "name": "MetadataDepositBase",
              "type": 6,
              "value": "0x0080c6a47e8d03000000000000000000",
              "docs": [
                " The basic amount of funds that must be reserved when adding metadata to your item."
              ]
            },
            {
              "name": "AttributeDepositBase",
              "type": 6,
              "value": "0x0080c6a47e8d03000000000000000000",
              "docs": [
                " The basic amount of funds that must be reserved when adding an attribute to an item."
              ]
            },
            {
              "name": "DepositPerByte",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " The additional funds that must be reserved for the number of bytes store in metadata,",
                " either \"normal\" metadata or attribute metadata."
              ]
            },
            {
              "name": "StringLimit",
              "type": 4,
              "value": "0x00010000",
              "docs": [
                " The maximum length of data stored on-chain."
              ]
            },
            {
              "name": "KeyLimit",
              "type": 4,
              "value": "0x40000000",
              "docs": [
                " The maximum length of an attribute key."
              ]
            },
            {
              "name": "ValueLimit",
              "type": 4,
              "value": "0x00010000",
              "docs": [
                " The maximum length of an attribute value."
              ]
            },
            {
              "name": "ApprovalsLimit",
              "type": 4,
              "value": "0x14000000",
              "docs": [
                " The maximum approvals an item could have."
              ]
            },
            {
              "name": "ItemAttributesApprovalsLimit",
              "type": 4,
              "value": "0x14000000",
              "docs": [
                " The maximum attributes approvals an item could have."
              ]
            },
            {
              "name": "MaxTips",
              "type": 4,
              "value": "0x0a000000",
              "docs": [
                " The max number of tips a user could send."
              ]
            },
            {
              "name": "MaxDeadlineDuration",
              "type": 4,
              "value": "0x00349e00",
              "docs": [
                " The max duration in blocks for deadlines."
              ]
            },
            {
              "name": "MaxAttributesPerCall",
              "type": 4,
              "value": "0x0a000000",
              "docs": [
                " The max number of attributes a user could set per call."
              ]
            },
            {
              "name": "Features",
              "type": 755,
              "value": "0x0000000000000000",
              "docs": [
                " Disables some of pallet's features."
              ]
            }
          ],
          "errors": {
            "type": 757
          },
          "index": 45
        },
        {
          "name": "NftFractionalization",
          "storage": {
            "prefix": "NftFractionalization",
            "items": [
              {
                "name": "NftToAsset",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 95,
                    "value": 758
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Keeps track of the corresponding NFT ID, asset ID and amount minted."
                ]
              }
            ]
          },
          "calls": {
            "type": 353
          },
          "events": {
            "type": 125
          },
          "constants": [
            {
              "name": "Deposit",
              "type": 6,
              "value": "0x0000c16ff28623000000000000000000",
              "docs": [
                " The deposit paid by the user locking an NFT. The deposit is returned to the original NFT",
                " owner when the asset is unified and the NFT is unlocked."
              ]
            },
            {
              "name": "PalletId",
              "type": 599,
              "value": "0x6672616374696f6e",
              "docs": [
                " The pallet's id, used for deriving its sovereign account ID."
              ]
            },
            {
              "name": "NewAssetSymbol",
              "type": 712,
              "value": "0x1046524143",
              "docs": [
                " The newly created asset's symbol."
              ]
            },
            {
              "name": "NewAssetName",
              "type": 712,
              "value": "0x1046726163",
              "docs": [
                " The newly created asset's name."
              ]
            },
            {
              "name": "StringLimit",
              "type": 4,
              "value": "0x32000000",
              "docs": [
                " The maximum length of a name or symbol stored on-chain."
              ]
            }
          ],
          "errors": {
            "type": 759
          },
          "index": 46
        },
        {
          "name": "Salary",
          "storage": {
            "prefix": "Salary",
            "items": [
              {
                "name": "Status",
                "modifier": "Optional",
                "type": {
                  "plain": 760
                },
                "fallback": "0x00",
                "docs": [
                  " The overall status of the system."
                ]
              },
              {
                "name": "Claimant",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 761
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The status of a claimant."
                ]
              }
            ]
          },
          "calls": {
            "type": 354
          },
          "events": {
            "type": 126
          },
          "constants": [
            {
              "name": "RegistrationPeriod",
              "type": 4,
              "value": "0xc8000000",
              "docs": [
                " The number of blocks within a cycle which accounts have to register their intent to",
                " claim.",
                "",
                " The number of blocks between sequential payout cycles is the sum of this and",
                " `PayoutPeriod`."
              ]
            },
            {
              "name": "PayoutPeriod",
              "type": 4,
              "value": "0xc8000000",
              "docs": [
                " The number of blocks within a cycle which accounts have to claim the payout.",
                "",
                " The number of blocks between sequential payout cycles is the sum of this and",
                " `RegistrationPeriod`."
              ]
            },
            {
              "name": "Budget",
              "type": 6,
              "value": "0x000064a7b3b6e00d0000000000000000",
              "docs": [
                " The total budget per cycle.",
                "",
                " This may change over the course of a cycle without any problem."
              ]
            }
          ],
          "errors": {
            "type": 763
          },
          "index": 47
        },
        {
          "name": "CoreFellowship",
          "storage": {
            "prefix": "CoreFellowship",
            "items": [
              {
                "name": "Params",
                "modifier": "Default",
                "type": {
                  "plain": 128
                },
                "fallback": "0x
                "docs": [
                  " The overall status of the system."
                ]
              },
              {
                "name": "Member",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 764
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The status of a claimant."
                ]
              },
              {
                "name": "MemberEvidence",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 765
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Some evidence together with the desired outcome for which it was presented."
                ]
              }
            ]
          },
          "calls": {
            "type": 355
          },
          "events": {
            "type": 127
          },
          "constants": [
            {
              "name": "EvidenceSize",
              "type": 4,
              "value": "0x00400000",
              "docs": [
                " The maximum size in bytes submitted evidence is allowed to be."
              ]
            }
          ],
          "errors": {
            "type": 766
          },
          "index": 48
        },
        {
          "name": "TransactionStorage",
          "storage": {
            "prefix": "TransactionStorage",
            "items": [
              {
                "name": "Transactions",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 767
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Collection of transaction metadata by block number."
                ]
              },
              {
                "name": "ChunkCount",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 4
                  }
                },
                "fallback": "0x00000000",
                "docs": [
                  " Count indexed chunks for each block."
                ]
              },
              {
                "name": "ByteFee",
                "modifier": "Optional",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00",
                "docs": [
                  " Storage fee per byte."
                ]
              },
              {
                "name": "EntryFee",
                "modifier": "Optional",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00",
                "docs": [
                  " Storage fee per transaction."
                ]
              },
              {
                "name": "StoragePeriod",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Storage period for data in blocks. Should match `sp_storage_proof::DEFAULT_STORAGE_PERIOD`",
                  " for block authoring."
                ]
              },
              {
                "name": "BlockTransactions",
                "modifier": "Default",
                "type": {
                  "plain": 767
                },
                "fallback": "0x00",
                "docs": []
              },
              {
                "name": "ProofChecked",
                "modifier": "Default",
                "type": {
                  "plain": 43
                },
                "fallback": "0x00",
                "docs": [
                  " Was the proof checked in this block?"
                ]
              }
            ]
          },
          "calls": {
            "type": 356
          },
          "events": {
            "type": 134
          },
          "constants": [],
          "errors": {
            "type": 770
          },
          "index": 49
        },
        {
          "name": "VoterList",
          "storage": {
            "prefix": "VoterList",
            "items": [
              {
                "name": "ListNodes",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 771
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A single node, within some bag.",
                  "",
                  " Nodes store links forward and back within their respective bags."
                ]
              },
              {
                "name": "CounterForListNodes",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "ListBags",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 11,
                    "value": 772
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A bag stored in storage.",
                  "",
                  " Stores a `Bag` struct, which stores head and tail pointers to itself."
                ]
              }
            ]
          },
          "calls": {
            "type": 358
          },
          "events": {
            "type": 135
          },
          "constants": [
            {
              "name": "BagThresholds",
              "type": 773,
              "value": "0x210300407a10f35a00006a70ccd4a96000009ef3397fbc660000a907ccd5306d00003d9a67fb0c740000a9bfa275577b0000a6fdf73217830000034f5d91538b0000132445651494000078081001629d00000302f63c45a70000392e6f7fc7b10000f59c23c6f2bc00004ae76aafd1c80000598a64846fd50000129fb243d8e200003f22e1ac18f1000033a4844c3e000100e2e51b895710010076a2c0b0732101006789b407a3330100793ed8d7f646010078131b81815b01000c1cf38a567101004437eeb68a8801009eb56d1434a10100335e9f156abb010067c3c7a545d701003218f340e1f40100de0b230d59140200699c11f5ca350200ad50a2c4565902009ae41c471e7f0200d0244e6745a70200f984ad51f2d10200ace7a7984dff0200a118325b822f0300ffa4c76dbe620300580bfd8532990300a9afce6812d30300109ad81b95100400d9caa519f551040038df488970970400bee1727949e10400cc73401fc62f0500b304f91831830500828bffb4d9db05001235383d143a0600a5b42a473a9e060036662d09ab080700f73aeab4cb790700b87e93d707f20700ffec23c0d1710800b84b0beca2f90800c9dcae7afc89090091752ba867230a0064f1cd4f76c60a003609be76c3730b0078655fdff32b0c00a407f5a5b6ef0c0052f61be7c5bf0d00da71bb70e79c0e000de9127eed870f001477987fb7811000ebee65ef328b11001269fe325ca5120033f8428b3fd113008ba57a13fa0f15001b2b60d0ba6216000d1d37d0c3ca17006c64fa5c6b4919002622c7411de01a00045bb9245c901c00233d83f6c25b1e00c8771c79064420003013fddef64a2200aa8b6e848172240082c096c4b2bc260016a3faebb72b29008296524ae1c12b00a636a865a4812e00d0e2d4509e6d31009c0a9a2796883400e4faafb27fd53700e6e64d367e573b000e4bd66de7113f0088b17db746084300b07def72603e470034de249635b84b00d48bd57b077a5000d0bd20ef5b885500b8f0467801e85a0010f88aee139e60003892925301b066009c95e4fc8e236d00b4126d10dffe730028b43e5976487b00a08a1c7a42078300b09ab083a0428b002846b2f463029400c861a42ade4e9d0050d23d4ae630a700805101a7e1b1b10038e501b2ccdbbc002016527844b9c800388924ba9055d50070ca35a4aebce200805fb1355cfbf0008035685d241f0001a0c3dcd96b361001d07862e87e50210160e852d09f7d330190662c5816cf460110274c3340575b01804be277a22971013082b92dfc5a880180d276075a01a101b0f511592b34bb014031745f580cd701802f6cee59a4f40140ff799b521814026075607d2986350260fde999a60d590200e5e71c91d07e02c0df2575cff2a602a07fd975899ad102a067009d4cf0fe0220dc29a1321f2f0320ff526b0a5562038088caa383c29803e05683fb5c9bd203401dd75d9516100400317e39a06e5104c0b071129de1960480b48c9192b1e00480e8124aad242f05c007ca7082858205007c13c45623db0540836fe869523906c0700f81466c9d0640f09c5017d00707c0e624b301e37807c0332ac78510f10780074ca1e4ca700800d5a9eb8c8bf80800a849588ed3880900804254142c220a80a25170e826c50a00e8d5fafc5e720b801df64e00792a0c80d4fe64f923ee0c006dd038ee19be0d001e90a494209b0e0010bf570e0a860f00da6a9db0b57f1000bf64afd810891100bb5b60cd17a31200f963f3aed6ce1300d5f004766a0d1500e099770202601600103d663bdfc71700de3e2d4158461900ecdbadb2d8dc1a0045c70007e38c1c00b8bde0fc11581e00ba5c2a211a402000407de46dcb462200dea55b03136e2400aaf1f3fcfcb7260014226f63b62629006492803e8fbc2b008486a6c7fc7b2e002cf05fc09b673100da63f7ed32823400f0b13fbdb5ce3700f291c41047503b00422a1a3c3c0a3f002c24212f20004300ac9342d4b6354700cc6ed7a400af4b00c4d022773e70500020017d89f57d5500f86387cef3dc5a008c4c7f7e54926000206207f284a36600cc1e05cb49166d00b42a7a70c4f07300d43a90e278397b0038f461ec53f78200a07264b9b1318b0048c9b3d464f09300007fe998bd3b9d0010058f17921ca70000dfaf7f469cb100e80c880bd6c4bc0058bdcb7ddca0c80038d18d37a03bd50030d55bf01ca1e200704ac01a0fdef0ffffffffffffffff",
              "docs": [
                " The list of thresholds separating the various bags.",
                "",
                " Ids are separated into unsorted bags according to their score. This specifies the",
                " thresholds separating the bags. An id's bag is the largest bag for which the id's score",
                " is less than or equal to its upper threshold.",
                "",
                " When ids are iterated, higher bags are iterated completely before lower bags. This means",
                " that iteration is _semi-sorted_: ids of higher score tend to come before ids of lower",
                " score, but peer ids within a particular bag are sorted in insertion order.",
                "",
                " # Expressing the constant",
                "",
                " This constant must be sorted in strictly increasing order. Duplicate items are not",
                " permitted.",
                "",
                " There is an implied upper limit of `Score::MAX`; that value does not need to be",
                " specified within the bag. For any two threshold lists, if one ends with",
                " `Score::MAX`, the other one does not, and they are otherwise equal, the two",
                " lists will behave identically.",
                "",
                " # Calculation",
                "",
                " It is recommended to generate the set of thresholds in a geometric series, such that",
                " there exists some constant ratio such that `threshold[k + 1] == (threshold[k] *",
                " constant_ratio).max(threshold[k] + 1)` for all `k`.",
                "",
                " The helpers in the `/utils/frame/generate-bags` module can simplify this calculation.",
                "",
                " # Examples",
                "",
                " - If `BagThresholds::get().is_empty()`, then all ids are put into the same bag, and",
                "   iteration is strictly in insertion order.",
                " - If `BagThresholds::get().len() == 64`, and the thresholds are determined according to",
                "   the procedure given above, then the constant ratio is equal to 2.",
                " - If `BagThresholds::get().len() == 200`, and the thresholds are determined according to",
                "   the procedure given above, then the constant ratio is approximately equal to 1.248.",
                " - If the threshold list begins `[1, 2, 3, ...]`, then an id with score 0 or 1 will fall",
                "   into bag 0, an id with score 2 will fall into bag 1, etc.",
                "",
                " # Migration",
                "",
                " In the event that this list ever changes, a copy of the old bags list must be retained.",
                " With that `List::migrate` can be called, which will perform the appropriate migration."
              ]
            }
          ],
          "errors": {
            "type": 774
          },
          "index": 50
        },
        {
          "name": "StateTrieMigration",
          "storage": {
            "prefix": "StateTrieMigration",
            "items": [
              {
                "name": "MigrationProcess",
                "modifier": "Default",
                "type": {
                  "plain": 362
                },
                "fallback": "0x0000000000000000000000000000",
                "docs": [
                  " Migration progress.",
                  "",
                  " This stores the snapshot of the last migrated keys. It can be set into motion and move",
                  " forward by any of the means provided by this pallet."
                ]
              },
              {
                "name": "AutoLimits",
                "modifier": "Default",
                "type": {
                  "plain": 360
                },
                "fallback": "0x00",
                "docs": [
                  " The limits that are imposed on automatic migrations.",
                  "",
                  " If set to None, then no automatic migration happens."
                ]
              },
              {
                "name": "SignedMigrationMaxLimits",
                "modifier": "Optional",
                "type": {
                  "plain": 361
                },
                "fallback": "0x00",
                "docs": [
                  " The maximum limits that the signed migration could use.",
                  "",
                  " If not set, no signed submission is allowed."
                ]
              }
            ]
          },
          "calls": {
            "type": 359
          },
          "events": {
            "type": 136
          },
          "constants": [
            {
              "name": "MaxKeyLen",
              "type": 4,
              "value": "0x00020000",
              "docs": [
                " Maximal number of bytes that a key can have.",
                "",
                " FRAME itself does not limit the key length.",
                " The concrete value must therefore depend on your storage usage.",
                " A [`frame_support::storage::StorageNMap`] for example can have an arbitrary number of",
                " keys which are then hashed and concatenated, resulting in arbitrarily long keys.",
                "",
                " Use the *state migration RPC* to retrieve the length of the longest key in your",
                " storage: <https://github.com/paritytech/substrate/issues/11642>",
                "",
                " The migration will halt with a `Halted` event if this value is too small.",
                " Since there is no real penalty from over-estimating, it is advised to use a large",
                " value. The default is 512 byte.",
                "",
                " Some key lengths for reference:",
                " - [`frame_support::storage::StorageValue`]: 32 byte",
                " - [`frame_support::storage::StorageMap`]: 64 byte",
                " - [`frame_support::storage::StorageDoubleMap`]: 96 byte",
                "",
                " For more info see",
                " <https://www.shawntabrizi.com/substrate/querying-substrate-storage-via-rpc/>"
              ]
            }
          ],
          "errors": {
            "type": 138
          },
          "index": 51
        },
        {
          "name": "ChildBounties",
          "storage": {
            "prefix": "ChildBounties",
            "items": [
              {
                "name": "ChildBountyCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Number of total child bounties."
                ]
              },
              {
                "name": "ParentChildBounties",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 4
                  }
                },
                "fallback": "0x00000000",
                "docs": [
                  " Number of child bounties per parent bounty.",
                  " Map of parent bounty index to number of child bounties."
                ]
              },
              {
                "name": "ChildBounties",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 95,
                    "value": 776
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Child bounties that have been added."
                ]
              },
              {
                "name": "ChildBountyDescriptions",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 700
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The description of each child-bounty."
                ]
              },
              {
                "name": "ChildrenCuratorFees",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 6
                  }
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The cumulative child-bounty curator fee for each parent bounty."
                ]
              }
            ]
          },
          "calls": {
            "type": 365
          },
          "events": {
            "type": 139
          },
          "constants": [
            {
              "name": "MaxActiveChildBountyCount",
              "type": 4,
              "value": "0x05000000",
              "docs": [
                " Maximum number of child bounties that can be added to a parent bounty."
              ]
            },
            {
              "name": "ChildBountyValueMinimum",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " Minimum value for a child-bounty."
              ]
            }
          ],
          "errors": {
            "type": 778
          },
          "index": 52
        },
        {
          "name": "Referenda",
          "storage": {
            "prefix": "Referenda",
            "items": [
              {
                "name": "ReferendumCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The next free referendum index, aka the number of referenda started so far."
                ]
              },
              {
                "name": "ReferendumInfoFor",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 779
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Information concerning any given referendum."
                ]
              },
              {
                "name": "TrackQueue",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 102,
                    "value": 787
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The sorted list of referenda ready to be decided but not yet being decided, ordered by",
                  " conviction-weighted approvals.",
                  "",
                  " This should be empty if `DecidingCount` is less than `TrackInfo::max_deciding`."
                ]
              },
              {
                "name": "DecidingCount",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 102,
                    "value": 4
                  }
                },
                "fallback": "0x00000000",
                "docs": [
                  " The number of referenda being decided currently."
                ]
              },
              {
                "name": "MetadataOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 12
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The metadata is a general information concerning the referendum.",
                  " The `Hash` refers to the preimage of the `Preimages` provider which can be a JSON",
                  " dump or IPFS hash of a JSON file.",
                  "",
                  " Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove)",
                  " large preimages."
                ]
              }
            ]
          },
          "calls": {
            "type": 366
          },
          "events": {
            "type": 140
          },
          "constants": [
            {
              "name": "SubmissionDeposit",
              "type": 6,
              "value": "0x0000c16ff28623000000000000000000",
              "docs": [
                " The minimum amount to be used as a deposit for a public referendum proposal."
              ]
            },
            {
              "name": "MaxQueued",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " Maximum size of the referendum queue for a single track."
              ]
            },
            {
              "name": "UndecidingTimeout",
              "type": 4,
              "value": "0x004e0c00",
              "docs": [
                " The number of blocks after submission that a referendum must begin being decided by.",
                " Once this passes, then anyone may cancel the referendum."
              ]
            },
            {
              "name": "AlarmInterval",
              "type": 4,
              "value": "0x01000000",
              "docs": [
                " Quantization level for the referendum wakeup scheduler. A higher number will result in",
                " fewer storage reads/writes needed for smaller voters, but also result in delays to the",
                " automatic referendum status changes. Explicit servicing instructions are unaffected."
              ]
            },
            {
              "name": "Tracks",
              "type": 788,
              "value": "0x04000010726f6f74010000000a000000000000000000000000000000040000000400000002000000040000000000ca9a3b0065cd1d00ca9a3b0000ca9a3b0000000000ca9a3b",
              "docs": [
                " Information concerning the different referendum tracks."
              ]
            }
          ],
          "errors": {
            "type": 794
          },
          "index": 53
        },
        {
          "name": "Remark",
          "storage": null,
          "calls": {
            "type": 368
          },
          "events": {
            "type": 427
          },
          "constants": [],
          "errors": {
            "type": 795
          },
          "index": 54
        },
        {
          "name": "RootTesting",
          "storage": null,
          "calls": {
            "type": 369
          },
          "events": {
            "type": 428
          },
          "constants": [],
          "errors": null,
          "index": 55
        },
        {
          "name": "ConvictionVoting",
          "storage": {
            "prefix": "ConvictionVoting",
            "items": [
              {
                "name": "VotingFor",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 796,
                    "value": 797
                  }
                },
                "fallback": "0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " All voting for a particular voter in a particular voting class. We store the balance for the",
                  " number of votes that we have recorded."
                ]
              },
              {
                "name": "ClassLocksFor",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 805
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The voting classes which have a non-zero lock requirement and the lock amounts which they",
                  " require. The actual amount locked on behalf of this pallet should always be the maximum of",
                  " this list."
                ]
              }
            ]
          },
          "calls": {
            "type": 370
          },
          "events": {
            "type": 429
          },
          "constants": [
            {
              "name": "MaxVotes",
              "type": 4,
              "value": "0x00020000",
              "docs": [
                " The maximum number of concurrent votes an account may have.",
                "",
                " Also used to compute weight, an overly large value can lead to extrinsics with large",
                " weight estimation: see `delegate` for instance."
              ]
            },
            {
              "name": "VoteLockingPeriod",
              "type": 4,
              "value": "0x002f0d00",
              "docs": [
                " The minimum period of vote locking.",
                "",
                " It should be no shorter than enactment period to ensure that in the case of an approval,",
                " those successful voters are locked into the consequences that their votes entail."
              ]
            }
          ],
          "errors": {
            "type": 808
          },
          "index": 56
        },
        {
          "name": "Whitelist",
          "storage": {
            "prefix": "Whitelist",
            "items": [
              {
                "name": "WhitelistedCall",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 12,
                    "value": 32
                  }
                },
                "fallback": "0x00",
                "docs": []
              }
            ]
          },
          "calls": {
            "type": 374
          },
          "events": {
            "type": 430
          },
          "constants": [],
          "errors": {
            "type": 809
          },
          "index": 57
        },
        {
          "name": "AllianceMotion",
          "storage": {
            "prefix": "AllianceMotion",
            "items": [
              {
                "name": "Proposals",
                "modifier": "Default",
                "type": {
                  "plain": 810
                },
                "fallback": "0x00",
                "docs": [
                  " The hashes of the active proposals."
                ]
              },
              {
                "name": "ProposalOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 142
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Actual proposal for a given hash, if it's current."
                ]
              },
              {
                "name": "Voting",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 12,
                    "value": 581
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Votes on a given proposal, if it is ongoing."
                ]
              },
              {
                "name": "ProposalCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Proposals so far."
                ]
              },
              {
                "name": "Members",
                "modifier": "Default",
                "type": {
                  "plain": 90
                },
                "fallback": "0x00",
                "docs": [
                  " The current members of the collective. This is stored sorted (just by value)."
                ]
              },
              {
                "name": "Prime",
                "modifier": "Optional",
                "type": {
                  "plain": 0
                },
                "fallback": "0x00",
                "docs": [
                  " The prime member that helps determine the default vote behavior in case of absentations."
                ]
              }
            ]
          },
          "calls": {
            "type": 375
          },
          "events": {
            "type": 435
          },
          "constants": [
            {
              "name": "MaxProposalWeight",
              "type": 9,
              "value": "0x070010a5d4e813ffffffffffffff7f",
              "docs": [
                " The maximum weight of a dispatch call that can be proposed and executed."
              ]
            }
          ],
          "errors": {
            "type": 811
          },
          "index": 58
        },
        {
          "name": "Alliance",
          "storage": {
            "prefix": "Alliance",
            "items": [
              {
                "name": "Rule",
                "modifier": "Optional",
                "type": {
                  "plain": 378
                },
                "fallback": "0x00",
                "docs": [
                  " The IPFS CID of the alliance rule.",
                  " Fellows can propose a new rule with a super-majority."
                ]
              },
              {
                "name": "Announcements",
                "modifier": "Default",
                "type": {
                  "plain": 812
                },
                "fallback": "0x00",
                "docs": [
                  " The current IPFS CIDs of any announcements."
                ]
              },
              {
                "name": "DepositOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 6
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Maps members to their candidacy deposit."
                ]
              },
              {
                "name": "Members",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 814,
                    "value": 815
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Maps member type to members of each type."
                ]
              },
              {
                "name": "RetiringMembers",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 0,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A set of members who gave a retirement notice. They can retire after the end of retirement",
                  " period stored as a future block number."
                ]
              },
              {
                "name": "UnscrupulousAccounts",
                "modifier": "Default",
                "type": {
                  "plain": 567
                },
                "fallback": "0x00",
                "docs": [
                  " The current list of accounts deemed unscrupulous. These accounts non grata cannot submit",
                  " candidacy."
                ]
              },
              {
                "name": "UnscrupulousWebsites",
                "modifier": "Default",
                "type": {
                  "plain": 816
                },
                "fallback": "0x00",
                "docs": [
                  " The current list of websites deemed unscrupulous."
                ]
              }
            ]
          },
          "calls": {
            "type": 376
          },
          "events": {
            "type": 436
          },
          "constants": [
            {
              "name": "MaxUnscrupulousItems",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum number of the unscrupulous items supported by the pallet."
              ]
            },
            {
              "name": "MaxWebsiteUrlLength",
              "type": 4,
              "value": "0xff000000",
              "docs": [
                " The maximum length of a website URL."
              ]
            },
            {
              "name": "AllyDeposit",
              "type": 6,
              "value": "0x0080c6a47e8d03000000000000000000",
              "docs": [
                " The deposit required for submitting candidacy."
              ]
            },
            {
              "name": "MaxAnnouncementsCount",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum number of announcements."
              ]
            },
            {
              "name": "MaxMembersCount",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum number of members per member role."
              ]
            }
          ],
          "errors": {
            "type": 818
          },
          "index": 59
        },
        {
          "name": "NominationPools",
          "storage": {
            "prefix": "NominationPools",
            "items": [
              {
                "name": "TotalValueLocked",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " The sum of funds across all pools.",
                  "",
                  " This might be lower but never higher than the sum of `total_balance` of all [`PoolMembers`]",
                  " because calling `pool_withdraw_unbonded` might decrease the total stake of the pool's",
                  " `bonded_account` without adjusting the pallet-internal `UnbondingPool`'s."
                ]
              },
              {
                "name": "MinJoinBond",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " Minimum amount to bond to join a pool."
                ]
              },
              {
                "name": "MinCreateBond",
                "modifier": "Default",
                "type": {
                  "plain": 6
                },
                "fallback": "0x00000000000000000000000000000000",
                "docs": [
                  " Minimum bond required to create a pool.",
                  "",
                  " This is the amount that the depositor must put as their initial stake in the pool, as an",
                  " indication of \"skin in the game\".",
                  "",
                  " This is the value that will always exist in the staking ledger of the pool bonded account",
                  " while all other accounts leave."
                ]
              },
              {
                "name": "MaxPools",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Maximum number of nomination pools that can exist. If `None`, then an unbounded number of",
                  " pools can exist."
                ]
              },
              {
                "name": "MaxPoolMembers",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Maximum number of members that can exist in the system. If `None`, then the count",
                  " members are not bound on a system wide basis."
                ]
              },
              {
                "name": "MaxPoolMembersPerPool",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Maximum number of members that may belong to pool. If `None`, then the count of",
                  " members is not bound on a per pool basis."
                ]
              },
              {
                "name": "GlobalMaxCommission",
                "modifier": "Optional",
                "type": {
                  "plain": 49
                },
                "fallback": "0x00",
                "docs": [
                  " The maximum commission that can be charged by a pool. Used on commission payouts to bound",
                  " pool commissions that are > `GlobalMaxCommission`, necessary if a future",
                  " `GlobalMaxCommission` is lower than some current pool commissions."
                ]
              },
              {
                "name": "PoolMembers",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 819
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Active members.",
                  "",
                  " TWOX-NOTE: SAFE since `AccountId` is a secure hash."
                ]
              },
              {
                "name": "CounterForPoolMembers",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "BondedPools",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 822
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Storage for bonded pools."
                ]
              },
              {
                "name": "CounterForBondedPools",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "RewardPools",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 827
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Reward pools. This is where there rewards for each pool accumulate. When a members payout is",
                  " claimed, the balance comes out fo the reward pool. Keyed by the bonded pools account."
                ]
              },
              {
                "name": "CounterForRewardPools",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "SubPoolsStorage",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 828
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Groups of unbonding pools. Each group of unbonding pools belongs to a",
                  " bonded pool, hence the name sub-pools. Keyed by the bonded pools account."
                ]
              },
              {
                "name": "CounterForSubPoolsStorage",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "Metadata",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 119
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Metadata for the pool."
                ]
              },
              {
                "name": "CounterForMetadata",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "LastPoolId",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Ever increasing number of all pools created so far."
                ]
              },
              {
                "name": "ReversePoolIdLookup",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A reverse lookup from the pool's account id to its id.",
                  "",
                  " This is only used for slashing. In all other instances, the pool id is used, and the",
                  " accounts are deterministically derived from it."
                ]
              },
              {
                "name": "CounterForReversePoolIdLookup",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "ClaimPermissions",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 392
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Map from a pool member account to their opted claim permission."
                ]
              }
            ]
          },
          "calls": {
            "type": 385
          },
          "events": {
            "type": 437
          },
          "constants": [
            {
              "name": "PalletId",
              "type": 599,
              "value": "0x70792f6e6f706c73",
              "docs": [
                " The nomination pool's pallet id."
              ]
            },
            {
              "name": "MaxPointsToBalance",
              "type": 2,
              "value": "0x0a",
              "docs": [
                " The maximum pool points-to-balance ratio that an `open` pool can have.",
                "",
                " This is important in the event slashing takes place and the pool's points-to-balance",
                " ratio becomes disproportional.",
                "",
                " Moreover, this relates to the `RewardCounter` type as well, as the arithmetic operations",
                " are a function of number of points, and by setting this value to e.g. 10, you ensure",
                " that the total number of points in the system are at most 10 times the total_issuance of",
                " the chain, in the absolute worse case.",
                "",
                " For a value of 10, the threshold would be a pool points-to-balance ratio of 10:1.",
                " Such a scenario would also be the equivalent of the pool being 90% slashed."
              ]
            },
            {
              "name": "MaxUnbonding",
              "type": 4,
              "value": "0x08000000",
              "docs": [
                " The maximum number of simultaneous unbonding chunks that can exist per member."
              ]
            }
          ],
          "errors": {
            "type": 834
          },
          "index": 60
        },
        {
          "name": "RankedPolls",
          "storage": {
            "prefix": "RankedPolls",
            "items": [
              {
                "name": "ReferendumCount",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " The next free referendum index, aka the number of referenda started so far."
                ]
              },
              {
                "name": "ReferendumInfoFor",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 836
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Information concerning any given referendum."
                ]
              },
              {
                "name": "TrackQueue",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 102,
                    "value": 838
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The sorted list of referenda ready to be decided but not yet being decided, ordered by",
                  " conviction-weighted approvals.",
                  "",
                  " This should be empty if `DecidingCount` is less than `TrackInfo::max_deciding`."
                ]
              },
              {
                "name": "DecidingCount",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 102,
                    "value": 4
                  }
                },
                "fallback": "0x00000000",
                "docs": [
                  " The number of referenda being decided currently."
                ]
              },
              {
                "name": "MetadataOf",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 12
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The metadata is a general information concerning the referendum.",
                  " The `Hash` refers to the preimage of the `Preimages` provider which can be a JSON",
                  " dump or IPFS hash of a JSON file.",
                  "",
                  " Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove)",
                  " large preimages."
                ]
              }
            ]
          },
          "calls": {
            "type": 398
          },
          "events": {
            "type": 438
          },
          "constants": [
            {
              "name": "SubmissionDeposit",
              "type": 6,
              "value": "0x0000c16ff28623000000000000000000",
              "docs": [
                " The minimum amount to be used as a deposit for a public referendum proposal."
              ]
            },
            {
              "name": "MaxQueued",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " Maximum size of the referendum queue for a single track."
              ]
            },
            {
              "name": "UndecidingTimeout",
              "type": 4,
              "value": "0x004e0c00",
              "docs": [
                " The number of blocks after submission that a referendum must begin being decided by.",
                " Once this passes, then anyone may cancel the referendum."
              ]
            },
            {
              "name": "AlarmInterval",
              "type": 4,
              "value": "0x01000000",
              "docs": [
                " Quantization level for the referendum wakeup scheduler. A higher number will result in",
                " fewer storage reads/writes needed for smaller voters, but also result in delays to the",
                " automatic referendum status changes. Explicit servicing instructions are unaffected."
              ]
            },
            {
              "name": "Tracks",
              "type": 788,
              "value": "0x04000010726f6f74010000000a000000000000000000000000000000040000000400000002000000040000000000ca9a3b0065cd1d00ca9a3b0000ca9a3b0000000000ca9a3b",
              "docs": [
                " Information concerning the different referendum tracks."
              ]
            }
          ],
          "errors": {
            "type": 839
          },
          "index": 61
        },
        {
          "name": "RankedCollective",
          "storage": {
            "prefix": "RankedCollective",
            "items": [
              {
                "name": "MemberCount",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 102,
                    "value": 4
                  }
                },
                "fallback": "0x00000000",
                "docs": [
                  " The number of members in the collective who have at least the rank according to the index",
                  " of the vec."
                ]
              },
              {
                "name": "Members",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 840
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The current members of the collective."
                ]
              },
              {
                "name": "IdToIndex",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 841,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The index of each ranks's member into the group of members who have at least that rank."
                ]
              },
              {
                "name": "IndexToId",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 842,
                    "value": 0
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The members in the collective by index. All indices in the range `0..MemberCount` will",
                  " return `Some`, however a member's index is not guaranteed to remain unchanged over time."
                ]
              },
              {
                "name": "Voting",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat",
                      "Twox64Concat"
                    ],
                    "key": 542,
                    "value": 441
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Votes on a given proposal, if it is ongoing."
                ]
              },
              {
                "name": "VotingCleanup",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 843
                  }
                },
                "fallback": "0x00",
                "docs": []
              }
            ]
          },
          "calls": {
            "type": 399
          },
          "events": {
            "type": 440
          },
          "constants": [],
          "errors": {
            "type": 844
          },
          "index": 62
        },
        {
          "name": "AssetConversion",
          "storage": {
            "prefix": "AssetConversion",
            "items": [
              {
                "name": "Pools",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 443,
                    "value": 845
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Map from `PoolAssetId` to `PoolInfo`. This establishes whether a pool has been officially",
                  " created rather than people sending tokens directly to a pool's public account."
                ]
              },
              {
                "name": "NextPoolAssetId",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Stores the `PoolAssetId` that is going to be used for the next lp token.",
                  " This gets incremented whenever a new lp pool is created."
                ]
              }
            ]
          },
          "calls": {
            "type": 400
          },
          "events": {
            "type": 442
          },
          "constants": [
            {
              "name": "LPFee",
              "type": 4,
              "value": "0x03000000",
              "docs": [
                " A % the liquidity providers will take of every swap. Represents 10ths of a percent."
              ]
            },
            {
              "name": "PoolSetupFee",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " A one-time fee to setup the pool."
              ]
            },
            {
              "name": "LiquidityWithdrawalFee",
              "type": 444,
              "value": "0x00000000",
              "docs": [
                " A fee to withdraw the liquidity."
              ]
            },
            {
              "name": "MintMinLiquidity",
              "type": 6,
              "value": "0x64000000000000000000000000000000",
              "docs": [
                " The minimum LP token amount that could be minted. Ameliorates rounding errors."
              ]
            },
            {
              "name": "MaxSwapPathLength",
              "type": 4,
              "value": "0x04000000",
              "docs": [
                " The max number of hops in a swap."
              ]
            },
            {
              "name": "PalletId",
              "type": 599,
              "value": "0x70792f6173636f6e",
              "docs": [
                " The pallet's id, used for deriving its sovereign account ID."
              ]
            },
            {
              "name": "AllowMultiAssetPools",
              "type": 43,
              "value": "0x01",
              "docs": [
                " A setting to allow creating pools with both non-native assets."
              ]
            }
          ],
          "errors": {
            "type": 846
          },
          "index": 63
        },
        {
          "name": "FastUnstake",
          "storage": {
            "prefix": "FastUnstake",
            "items": [
              {
                "name": "Head",
                "modifier": "Optional",
                "type": {
                  "plain": 847
                },
                "fallback": "0x00",
                "docs": [
                  " The current \"head of the queue\" being unstaked.",
                  "",
                  " The head in itself can be a batch of up to [`Config::BatchSize`] stakers."
                ]
              },
              {
                "name": "Queue",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 0,
                    "value": 6
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The map of all accounts wishing to be unstaked.",
                  "",
                  " Keeps track of `AccountId` wishing to unstake and it's corresponding deposit."
                ]
              },
              {
                "name": "CounterForQueue",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  "Counter for the related counted storage map"
                ]
              },
              {
                "name": "ErasToCheckPerBlock",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Number of eras to check per block.",
                  "",
                  " If set to 0, this pallet does absolutely nothing. Cannot be set to more than",
                  " [`Config::MaxErasToCheckPerBlock`].",
                  "",
                  " Based on the amount of weight available at [`Pallet::on_idle`], up to this many eras are",
                  " checked. The checking is represented by updating [`UnstakeRequest::checked`], which is",
                  " stored in [`Head`]."
                ]
              }
            ]
          },
          "calls": {
            "type": 404
          },
          "events": {
            "type": 445
          },
          "constants": [
            {
              "name": "Deposit",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " Deposit to take for unstaking, to make sure we're able to slash the it in order to cover",
                " the costs of resources on unsuccessful unstake."
              ]
            }
          ],
          "errors": {
            "type": 850
          },
          "index": 64
        },
        {
          "name": "MessageQueue",
          "storage": {
            "prefix": "MessageQueue",
            "items": [
              {
                "name": "BookStateFor",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 851
                  }
                },
                "fallback": "0x0000000000000000000000000000000000000000000000000000000000",
                "docs": [
                  " The index of the first and last (non-empty) pages."
                ]
              },
              {
                "name": "ServiceHead",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " The origin at which we should begin servicing."
                ]
              },
              {
                "name": "Pages",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 95,
                    "value": 854
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The map of page indices to pages."
                ]
              }
            ]
          },
          "calls": {
            "type": 405
          },
          "events": {
            "type": 446
          },
          "constants": [
            {
              "name": "HeapSize",
              "type": 4,
              "value": "0x00000100",
              "docs": [
                " The size of the page; this implies the maximum message size which can be sent.",
                "",
                " A good value depends on the expected message sizes, their weights, the weight that is",
                " available for processing them and the maximal needed message size. The maximal message",
                " size is slightly lower than this as defined by [`MaxMessageLenOf`]."
              ]
            },
            {
              "name": "MaxStale",
              "type": 4,
              "value": "0x80000000",
              "docs": [
                " The maximum number of stale pages (i.e. of overweight messages) allowed before culling",
                " can happen. Once there are more stale pages than this, then historical pages may be",
                " dropped, even if they contain unprocessed overweight messages."
              ]
            },
            {
              "name": "ServiceWeight",
              "type": 433,
              "value": "0x010700a0db215d133333333333333333",
              "docs": [
                " The amount of weight (if any) which should be provided to the message queue for",
                " servicing enqueued items.",
                "",
                " This may be legitimately `None` in the case that you will call",
                " `ServiceQueues::service_queues` manually."
              ]
            }
          ],
          "errors": {
            "type": 856
          },
          "index": 65
        },
        {
          "name": "Pov",
          "storage": {
            "prefix": "Pov",
            "items": [
              {
                "name": "Value",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": []
              },
              {
                "name": "Value2",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": []
              },
              {
                "name": "UnboundedValue",
                "modifier": "Optional",
                "type": {
                  "plain": 13
                },
                "fallback": "0x00",
                "docs": [
                  " A value without a MEL bound."
                ]
              },
              {
                "name": "BoundedValue",
                "modifier": "Optional",
                "type": {
                  "plain": 116
                },
                "fallback": "0x00",
                "docs": [
                  " A value with a MEL bound of 32 byte."
                ]
              },
              {
                "name": "LargeValue",
                "modifier": "Optional",
                "type": {
                  "plain": 684
                },
                "fallback": "0x00",
                "docs": [
                  " 4MiB value."
                ]
              },
              {
                "name": "LargeValue2",
                "modifier": "Optional",
                "type": {
                  "plain": 684
                },
                "fallback": "0x00",
                "docs": []
              },
              {
                "name": "Map1M",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_256"
                    ],
                    "key": 4,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A map with a maximum of 1M entries."
                ]
              },
              {
                "name": "Map16M",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_256"
                    ],
                    "key": 4,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " A map with a maximum of 16M entries."
                ]
              },
              {
                "name": "DoubleMap1M",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_256",
                      "Blake2_256"
                    ],
                    "key": 95,
                    "value": 4
                  }
                },
                "fallback": "0x00",
                "docs": []
              },
              {
                "name": "UnboundedMap",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_256"
                    ],
                    "key": 4,
                    "value": 115
                  }
                },
                "fallback": "0x00",
                "docs": []
              },
              {
                "name": "UnboundedMap2",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_256"
                    ],
                    "key": 4,
                    "value": 115
                  }
                },
                "fallback": "0x00",
                "docs": []
              },
              {
                "name": "UnboundedMapTwox",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 4,
                    "value": 115
                  }
                },
                "fallback": "0x00",
                "docs": []
              }
            ]
          },
          "calls": {
            "type": 406
          },
          "events": {
            "type": 448
          },
          "constants": [],
          "errors": null,
          "index": 66
        },
        {
          "name": "TxPause",
          "storage": {
            "prefix": "TxPause",
            "items": [
              {
                "name": "PausedCalls",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 408,
                    "value": 32
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The set of calls that are explicitly paused."
                ]
              }
            ]
          },
          "calls": {
            "type": 407
          },
          "events": {
            "type": 449
          },
          "constants": [
            {
              "name": "MaxNameLen",
              "type": 4,
              "value": "0x00010000",
              "docs": [
                " Maximum length for pallet name and call name SCALE encoded string names.",
                "",
                " TOO LONG NAMES WILL BE TREATED AS PAUSED."
              ]
            }
          ],
          "errors": {
            "type": 857
          },
          "index": 67
        },
        {
          "name": "SafeMode",
          "storage": {
            "prefix": "SafeMode",
            "items": [
              {
                "name": "EnteredUntil",
                "modifier": "Optional",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00",
                "docs": [
                  " Contains the last block number that the safe-mode will remain entered in.",
                  "",
                  "  Set to `None` when safe-mode is exited.",
                  "",
                  " Safe-mode is automatically exited when the current block number exceeds this value."
                ]
              },
              {
                "name": "Deposits",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat",
                      "Twox64Concat"
                    ],
                    "key": 549,
                    "value": 6
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Holds the reserve that was taken from an account at a specific block number.",
                  "",
                  " This helps governance to have an overview of outstanding deposits that should be returned or",
                  " slashed."
                ]
              }
            ]
          },
          "calls": {
            "type": 409
          },
          "events": {
            "type": 450
          },
          "constants": [
            {
              "name": "EnterDuration",
              "type": 4,
              "value": "0xc0120000",
              "docs": [
                " For how many blocks the safe-mode will be entered by [`Pallet::enter`]."
              ]
            },
            {
              "name": "ExtendDuration",
              "type": 4,
              "value": "0x60090000",
              "docs": [
                " For how many blocks the safe-mode can be extended by each [`Pallet::extend`] call.",
                "",
                " This does not impose a hard limit as the safe-mode can be extended multiple times."
              ]
            },
            {
              "name": "EnterDepositAmount",
              "type": 331,
              "value": "0x01000020c65abc8ed70a00000000000000",
              "docs": [
                " The amount that will be reserved upon calling [`Pallet::enter`].",
                "",
                " `None` disallows permissionlessly enabling the safe-mode and is a sane default."
              ]
            },
            {
              "name": "ExtendDepositAmount",
              "type": 331,
              "value": "0x01000010632d5ec76b0500000000000000",
              "docs": [
                " The amount that will be reserved upon calling [`Pallet::extend`].",
                "",
                " `None` disallows permissionlessly extending the safe-mode and is a sane default."
              ]
            },
            {
              "name": "ReleaseDelay",
              "type": 38,
              "value": "0x0100e10000",
              "docs": [
                " The minimal duration a deposit will remain reserved after safe-mode is entered or",
                " extended, unless [`Pallet::force_release_deposit`] is successfully called sooner.",
                "",
                " Every deposit is tied to a specific activation or extension, thus each deposit can be",
                " released independently after the delay for it has passed.",
                "",
                " `None` disallows permissionlessly releasing the safe-mode deposits and is a sane",
                " default."
              ]
            }
          ],
          "errors": {
            "type": 858
          },
          "index": 68
        },
        {
          "name": "Statement",
          "storage": null,
          "calls": null,
          "events": {
            "type": 452
          },
          "constants": [
            {
              "name": "StatementCost",
              "type": 6,
              "value": "0x00407a10f35a00000000000000000000",
              "docs": [
                " Min balance for priority statements."
              ]
            },
            {
              "name": "ByteCost",
              "type": 6,
              "value": "0x00e87648170000000000000000000000",
              "docs": [
                " Cost of data byte used for priority calculation."
              ]
            },
            {
              "name": "MinAllowedStatements",
              "type": 4,
              "value": "0x04000000",
              "docs": [
                " Minimum number of statements allowed per account."
              ]
            },
            {
              "name": "MaxAllowedStatements",
              "type": 4,
              "value": "0x0a000000",
              "docs": [
                " Maximum number of statements allowed per account."
              ]
            },
            {
              "name": "MinAllowedBytes",
              "type": 4,
              "value": "0x00040000",
              "docs": [
                " Minimum data bytes allowed per account."
              ]
            },
            {
              "name": "MaxAllowedBytes",
              "type": 4,
              "value": "0x00100000",
              "docs": [
                " Maximum data bytes allowed per account."
              ]
            }
          ],
          "errors": null,
          "index": 69
        },
        {
          "name": "Broker",
          "storage": {
            "prefix": "Broker",
            "items": [
              {
                "name": "Configuration",
                "modifier": "Optional",
                "type": {
                  "plain": 411
                },
                "fallback": "0x00",
                "docs": [
                  " The current configuration of this pallet."
                ]
              },
              {
                "name": "Reservations",
                "modifier": "Default",
                "type": {
                  "plain": 859
                },
                "fallback": "0x00",
                "docs": [
                  " The Polkadot Core reservations (generally tasked with the maintenance of System Chains)."
                ]
              },
              {
                "name": "Leases",
                "modifier": "Default",
                "type": {
                  "plain": 861
                },
                "fallback": "0x00",
                "docs": [
                  " The Polkadot Core legacy leases."
                ]
              },
              {
                "name": "Status",
                "modifier": "Optional",
                "type": {
                  "plain": 864
                },
                "fallback": "0x00",
                "docs": [
                  " The current status of miscellaneous subsystems of this pallet."
                ]
              },
              {
                "name": "SaleInfo",
                "modifier": "Optional",
                "type": {
                  "plain": 865
                },
                "fallback": "0x00",
                "docs": [
                  " The details of the current sale, including its properties and status."
                ]
              },
              {
                "name": "AllowedRenewals",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 866,
                    "value": 867
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Records of allowed renewals."
                ]
              },
              {
                "name": "Regions",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 417,
                    "value": 869
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The current (unassigned) Regions."
                ]
              },
              {
                "name": "Workplan",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 870,
                    "value": 412
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The work we plan on having each core do at a particular time in the future."
                ]
              },
              {
                "name": "Workload",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Twox64Concat"
                    ],
                    "key": 102,
                    "value": 412
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " The current workload of each core. This gets updated with workplan as timeslices pass."
                ]
              },
              {
                "name": "InstaPoolContribution",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 417,
                    "value": 871
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Record of a single contribution to the Instantaneous Coretime Pool."
                ]
              },
              {
                "name": "InstaPoolIo",
                "modifier": "Default",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 872
                  }
                },
                "fallback": "0x0000000000000000",
                "docs": [
                  " Record of Coretime entering or leaving the Instantaneous Coretime Pool."
                ]
              },
              {
                "name": "InstaPoolHistory",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Blake2_128Concat"
                    ],
                    "key": 4,
                    "value": 874
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Total InstaPool rewards for each Timeslice and the number of core parts which contributed."
                ]
              }
            ]
          },
          "calls": {
            "type": 410
          },
          "events": {
            "type": 459
          },
          "constants": [
            {
              "name": "PalletId",
              "type": 599,
              "value": "0x70792f62726f6b65",
              "docs": [
                " Identifier from which the internal Pot is generated."
              ]
            },
            {
              "name": "TimeslicePeriod",
              "type": 4,
              "value": "0x02000000",
              "docs": [
                " Number of Relay-chain blocks per timeslice."
              ]
            },
            {
              "name": "MaxLeasedCores",
              "type": 4,
              "value": "0x05000000",
              "docs": [
                " Maximum number of legacy leases."
              ]
            },
            {
              "name": "MaxReservedCores",
              "type": 4,
              "value": "0x05000000",
              "docs": [
                " Maximum number of system cores."
              ]
            }
          ],
          "errors": {
            "type": 875
          },
          "index": 70
        },
        {
          "name": "Mixnet",
          "storage": {
            "prefix": "Mixnet",
            "items": [
              {
                "name": "CurrentSessionIndex",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Index of the current session. This may be offset relative to the session index tracked by",
                  " eg `pallet_session`; mixnet session indices are independent."
                ]
              },
              {
                "name": "CurrentSessionStartBlock",
                "modifier": "Default",
                "type": {
                  "plain": 4
                },
                "fallback": "0x00000000",
                "docs": [
                  " Block in which the current session started."
                ]
              },
              {
                "name": "NextAuthorityIds",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity"
                    ],
                    "key": 4,
                    "value": 238
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Authority list for the next session."
                ]
              },
              {
                "name": "Mixnodes",
                "modifier": "Optional",
                "type": {
                  "map": {
                    "hashers": [
                      "Identity",
                      "Identity"
                    ],
                    "key": 95,
                    "value": 421
                  }
                },
                "fallback": "0x00",
                "docs": [
                  " Mixnode sets by session index. Only the mixnode sets for the previous, current, and next",
                  " sessions are kept; older sets are discarded.",
                  "",
                  " The mixnodes in each set are keyed by authority index so we can easily check if an",
                  " authority has registered a mixnode. The authority indices should only be used during",
                  " registration; the authority indices for the very first session are made up."
                ]
              }
            ]
          },
          "calls": {
            "type": 419
          },
          "events": null,
          "constants": [
            {
              "name": "MaxAuthorities",
              "type": 4,
              "value": "0x64000000",
              "docs": [
                " The maximum number of authorities per session."
              ]
            },
            {
              "name": "MaxExternalAddressSize",
              "type": 4,
              "value": "0x80000000",
              "docs": [
                " The maximum size of one of a mixnode's external addresses."
              ]
            },
            {
              "name": "MaxExternalAddressesPerMixnode",
              "type": 4,
              "value": "0x10000000",
              "docs": [
                " The maximum number of external addresses for a mixnode."
              ]
            },
            {
              "name": "NumCoverToCurrentBlocks",
              "type": 4,
              "value": "0x03000000",
              "docs": [
                " Length of the first phase of each session (`CoverToCurrent`), in blocks."
              ]
            },
            {
              "name": "NumRequestsToCurrentBlocks",
              "type": 4,
              "value": "0x03000000",
              "docs": [
                " Length of the second phase of each session (`RequestsToCurrent`), in blocks."
              ]
            },
            {
              "name": "NumCoverToPrevBlocks",
              "type": 4,
              "value": "0x03000000",
              "docs": [
                " Length of the third phase of each session (`CoverToPrev`), in blocks."
              ]
            },
            {
              "name": "NumRegisterStartSlackBlocks",
              "type": 4,
              "value": "0x03000000",
              "docs": [
                " The number of \"slack\" blocks at the start of each session, during which",
                " [`maybe_register`](Pallet::maybe_register) will not attempt to post registration",
                " transactions."
              ]
            },
            {
              "name": "NumRegisterEndSlackBlocks",
              "type": 4,
              "value": "0x03000000",
              "docs": [
                " The number of \"slack\" blocks at the end of each session.",
                " [`maybe_register`](Pallet::maybe_register) will try to register before this slack",
                " period, but may post registration transactions during the slack period as a last",
                " resort."
              ]
            },
            {
              "name": "RegistrationPriority",
              "type": 11,
              "value": "0xfeffffffffffffff",
              "docs": [
                " Priority of unsigned transactions used to register mixnodes."
              ]
            },
            {
              "name": "MinMixnodes",
              "type": 4,
              "value": "0x07000000",
              "docs": [
                " Minimum number of mixnodes. If there are fewer than this many mixnodes registered for a",
                " session, the mixnet will not be active during the session."
              ]
            }
          ],
          "errors": null,
          "index": 71
        },
        {
          "name": "SkipFeelessPayment",
          "storage": null,
          "calls": null,
          "events": {
            "type": 464
          },
          "constants": [],
          "errors": null,
          "index": 72
        }
      ],
      "extrinsic": {
        "type": 876,
        "version": 4,
        "signedExtensions": [
          {
            "identifier": "CheckNonZeroSender",
            "type": 878,
            "additionalSigned": 32
          },
          {
            "identifier": "CheckSpecVersion",
            "type": 879,
            "additionalSigned": 4
          },
          {
            "identifier": "CheckTxVersion",
            "type": 880,
            "additionalSigned": 4
          },
          {
            "identifier": "CheckGenesis",
            "type": 881,
            "additionalSigned": 12
          },
          {
            "identifier": "CheckMortality",
            "type": 882,
            "additionalSigned": 12
          },
          {
            "identifier": "CheckNonce",
            "type": 884,
            "additionalSigned": 32
          },
          {
            "identifier": "CheckWeight",
            "type": 885,
            "additionalSigned": 32
          },
          {
            "identifier": "ChargeAssetTxPayment",
            "type": 886,
            "additionalSigned": 32
          }
        ]
      },
      "type": 75
    }
  }
}