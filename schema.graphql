type Account @entity {
  id: ID! # Account address
  transfersTo: [Transfer!] @derivedFrom(field: "to")
  transfersFrom: [Transfer!] @derivedFrom(field: "from")
}

type Transfer @entity {
  id: ID!
  blockNumber: Int! @index
  timestamp: DateTime! @index
  extrinsicHash: String @index
  from: Account!
  to: Account!
  amount: BigInt! @index
  fee: BigInt! # Fee may be zero for some old extrinsics
}

type HistoryInitialized @entity {
  id: ID!
  blockNumber: Int! @index
  timestamp: DateTime! @index
  extrinsicHash: String @index
  when: BigInt!
  privatePoolSize: BigInt!
  systemPoolSize: BigInt!
}

type SaleInitialized @entity {
  id: ID!
  blockNumber: Int! @index
  timestamp: DateTime! @index
  extrinsicHash: String @index
  saleStart: BigInt!
  leadinLength: Int!
  startPrice: BigInt!
  regularPrice: BigInt!
  regionBegin: BigInt!
  regionEnd: BigInt!
  idealCoresSold: Int!
  coresOffered: Int!
}

type SalesStarted @entity {
  id: ID!
  blockNumber: Int! @index
  timestamp: DateTime! @index
  extrinsicHash: String @index
  price: BigInt!
  coreCount: Int!
}
